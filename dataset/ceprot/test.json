[
    {
        "focal_src": "public static String getGroupFromGrpcClient() { try { User user = AuthenticatedClientUser.get(); if (user == null) { return \"\"; } return CommonUtils.getPrimaryGroupName(user.getName()); } catch (IOException e) { return \"\"; } }",
        "focal_tgt": "public static String getGroupFromGrpcClient(AlluxioConfiguration conf) { try { User user = AuthenticatedClientUser.get(conf); if (user == null) { return \"\"; } return CommonUtils.getPrimaryGroupName(user.getName(), conf); } catch (IOException e) { return \"\"; } }",
        "test_src": "@Test public void getGroupFromGrpcClient() throws Exception { Configuration.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName()); Assert.assertEquals(\"\", SecurityUtils.getGroupFromGrpcClient()); Configuration.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.SIMPLE.getAuthName()); Configuration.set(PropertyKey.SECURITY_GROUP_MAPPING_CLASS, IdentityUserGroupsMapping.class.getName()); AuthenticatedClientUser.set(\"test_client_user\"); Assert.assertEquals(\"test_client_user\", SecurityUtils.getGroupFromGrpcClient()); }",
        "test_tgt": "@Test public void getGroupFromGrpcClient() throws Exception { mConfiguration.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName()); Assert.assertEquals(\"\", SecurityUtils.getGroupFromGrpcClient(mConfiguration)); mConfiguration.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.SIMPLE.getAuthName()); mConfiguration.set(PropertyKey.SECURITY_GROUP_MAPPING_CLASS, IdentityUserGroupsMapping.class.getName()); AuthenticatedClientUser.set(\"test_client_user\"); Assert.assertEquals(\"test_client_user\", SecurityUtils.getGroupFromGrpcClient(mConfiguration)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getGroupFromGrpcClient",
                "getGroupFromGrpcClient",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "AlluxioConfiguration",
                "insert"
            ],
            [
                "",
                "conf",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "AuthenticatedClientUser",
                "AuthenticatedClientUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "conf",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "CommonUtils",
                "CommonUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPrimaryGroupName",
                "getPrimaryGroupName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "conf",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String getTmpDir() { Preconditions.checkState(!TMP_DIRS.isEmpty(), \"No temporary directories configured\"); if (TMP_DIRS.size() == 1) { return TMP_DIRS.get(0); } return TMP_DIRS.get(RANDOM.nextInt(TMP_DIRS.size())); }",
        "focal_tgt": "public static String getTmpDir(List<String> tmpDirs) { Preconditions.checkState(!tmpDirs.isEmpty(), \"No temporary directories available\"); if (tmpDirs.size() == 1) { return tmpDirs.get(0); } return tmpDirs.get(RANDOM.nextInt(tmpDirs.size())); }",
        "test_src": "@Test public void getTmpDir() { String singleDir = \"/tmp\"; Whitebox.setInternalState(CommonUtils.class, \"TMP_DIRS\", Collections.singletonList(singleDir)); assertEquals(singleDir, CommonUtils.getTmpDir()); List<String> multiDirs = Arrays.asList(\"/tmp1\", \"/tmp2\", \"/tmp3\"); Whitebox.setInternalState(CommonUtils.class, \"TMP_DIRS\", multiDirs); Set<String> results = new HashSet<>(); for (int i = 0; i < 100 || results.size() != multiDirs.size(); i++) { results.add(CommonUtils.getTmpDir()); } assertEquals(new HashSet<>(multiDirs), results); Whitebox.setInternalState(CommonUtils.class, \"TMP_DIRS\", Configuration.getList(PropertyKey.TMP_DIRS, \",\")); }",
        "test_tgt": "@Test public void getTmpDir() { String singleDir = \"/tmp\"; List<String> singleDirList = Arrays.asList(\"/tmp\"); assertEquals(singleDir, CommonUtils.getTmpDir(singleDirList)); List<String> multiDirs = Arrays.asList(\"/tmp1\", \"/tmp2\", \"/tmp3\"); Set<String> results = new HashSet<>(); for (int i = 0; i < 100 || results.size() != multiDirs.size(); i++) { results.add(CommonUtils.getTmpDir(multiDirs)); } assertEquals(new HashSet<>(multiDirs), results); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getTmpDir",
                "getTmpDir",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "tmpDirs",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Preconditions",
                "Preconditions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "checkState",
                "checkState",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "TMP_DIRS",
                "tmpDirs",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "isEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "temporary",
                "temporary",
                "equal"
            ],
            [
                "directories",
                "directories",
                "equal"
            ],
            [
                "configured",
                "available",
                "replace"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TMP_DIRS",
                "tmpDirs",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "TMP_DIRS",
                "tmpDirs",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "TMP_DIRS",
                "tmpDirs",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RANDOM",
                "RANDOM",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "nextInt",
                "nextInt",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TMP_DIRS",
                "tmpDirs",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String formatPermission(short permission, boolean isDirectory) { StringBuffer permissionStr = new StringBuffer(); if (isDirectory) { permissionStr.append(\"d\"); } else { permissionStr.append(\"-\"); } permissionStr.append(new Mode(permission).toString()); return permissionStr.toString(); }",
        "focal_tgt": "public static String formatMode(short mode, boolean directory) { StringBuffer str = new StringBuffer(); if (directory) { str.append(\"d\"); } else { str.append(\"-\"); } str.append(new Mode(mode).toString()); return str.toString(); }",
        "test_src": "@Test public void formatPermissionTest() { Assert.assertEquals(\"-rw-rw-rw-\", FormatUtils.formatPermission((short) 0666, false)); Assert.assertEquals(\"drw-rw-rw-\", FormatUtils.formatPermission((short) 0666, true)); Assert.assertEquals(\"-rwxrwxrwx\", FormatUtils.formatPermission((short) 0777, false)); Assert.assertEquals(\"drwxrwxrwx\", FormatUtils.formatPermission((short) 0777, true)); Assert.assertEquals(\"-r--r--r--\", FormatUtils.formatPermission((short) 0444, false)); Assert.assertEquals(\"dr--r--r--\", FormatUtils.formatPermission((short) 0444, true)); Assert.assertEquals(\"-r-xr-xr-x\", FormatUtils.formatPermission((short) 0555, false)); Assert.assertEquals(\"dr-xr-xr-x\", FormatUtils.formatPermission((short) 0555, true)); Assert.assertEquals(\"-rwxr-xr--\", FormatUtils.formatPermission((short) 0754, false)); Assert.assertEquals(\"drwxr-xr--\", FormatUtils.formatPermission((short) 0754, true)); }",
        "test_tgt": "@Test public void formatPermissionTest() { Assert.assertEquals(\"-rw-rw-rw-\", FormatUtils.formatMode((short) 0666, false)); Assert.assertEquals(\"drw-rw-rw-\", FormatUtils.formatMode((short) 0666, true)); Assert.assertEquals(\"-rwxrwxrwx\", FormatUtils.formatMode((short) 0777, false)); Assert.assertEquals(\"drwxrwxrwx\", FormatUtils.formatMode((short) 0777, true)); Assert.assertEquals(\"-r--r--r--\", FormatUtils.formatMode((short) 0444, false)); Assert.assertEquals(\"dr--r--r--\", FormatUtils.formatMode((short) 0444, true)); Assert.assertEquals(\"-r-xr-xr-x\", FormatUtils.formatMode((short) 0555, false)); Assert.assertEquals(\"dr-xr-xr-x\", FormatUtils.formatMode((short) 0555, true)); Assert.assertEquals(\"-rwxr-xr--\", FormatUtils.formatMode((short) 0754, false)); Assert.assertEquals(\"drwxr-xr--\", FormatUtils.formatMode((short) 0754, true)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "formatPermission",
                "formatMode",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "short",
                "short",
                "equal"
            ],
            [
                "permission",
                "mode",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "isDirectory",
                "directory",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StringBuffer",
                "StringBuffer",
                "equal"
            ],
            [
                "permissionStr",
                "str",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringBuffer",
                "StringBuffer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "isDirectory",
                "directory",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "permissionStr",
                "str",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "permissionStr",
                "str",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "permissionStr",
                "str",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "permission",
                "mode",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "permissionStr",
                "str",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public PermissionStatus applyUMask(FileSystemPermission umask, Configuration configuration) { if (!SecurityUtils.isAuthorizationEnabled(configuration)) { return new PermissionStatus(mUserName, mGroupName, mPermission); } FileSystemPermission newFileSystemPermission = mPermission.applyUMask(umask); return new PermissionStatus(mUserName, mGroupName, newFileSystemPermission); }",
        "focal_tgt": "public PermissionStatus applyUMask(FileSystemPermission umask) { FileSystemPermission newFileSystemPermission = mPermission.applyUMask(umask); return new PermissionStatus(mUserName, mGroupName, newFileSystemPermission); }",
        "test_src": "@Test public void applyUMaskTest() { FileSystemPermission umaskPermission = new FileSystemPermission((short) 0022); PermissionStatus permissionStatus = new PermissionStatus(\"user1\", \"group1\", FileSystemPermission.getDefault()); Configuration conf = new Configuration(); conf.set(Constants.SECURITY_AUTHENTICATION_TYPE, AuthType.SIMPLE.getAuthName()); conf.set(Constants.SECURITY_AUTHORIZATION_PERMISSION_ENABLED, \"true\"); permissionStatus = permissionStatus.applyUMask(umaskPermission, conf); Assert.assertEquals(FileSystemAction.ALL, permissionStatus.getPermission().getUserAction()); Assert.assertEquals(FileSystemAction.READ_EXECUTE, permissionStatus.getPermission().getGroupAction()); Assert.assertEquals(FileSystemAction.READ_EXECUTE, permissionStatus.getPermission().getOtherAction()); Assert.assertEquals(0755, permissionStatus.getPermission().toShort()); }",
        "test_tgt": "@Test public void applyUMaskTest() { FileSystemPermission umaskPermission = new FileSystemPermission((short) 0022); PermissionStatus permissionStatus = new PermissionStatus(\"user1\", \"group1\", FileSystemPermission.getDefault()); permissionStatus = permissionStatus.applyUMask(umaskPermission); Assert.assertEquals(FileSystemAction.ALL, permissionStatus.getPermission().getUserAction()); Assert.assertEquals(FileSystemAction.READ_EXECUTE, permissionStatus.getPermission().getGroupAction()); Assert.assertEquals(FileSystemAction.READ_EXECUTE, permissionStatus.getPermission().getOtherAction()); Assert.assertEquals(0755, permissionStatus.getPermission().toShort()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "PermissionStatus",
                "PermissionStatus",
                "equal"
            ],
            [
                "applyUMask",
                "applyUMask",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "FileSystemPermission",
                "FileSystemPermission",
                "equal"
            ],
            [
                "umask",
                "umask",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Configuration",
                "",
                "delete"
            ],
            [
                "configuration",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "SecurityUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isAuthorizationEnabled",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "configuration",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "PermissionStatus",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "mUserName",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "mGroupName",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "mPermission",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "FileSystemPermission",
                "FileSystemPermission",
                "equal"
            ],
            [
                "newFileSystemPermission",
                "newFileSystemPermission",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "mPermission",
                "mPermission",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "applyUMask",
                "applyUMask",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "umask",
                "umask",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "PermissionStatus",
                "PermissionStatus",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "mUserName",
                "mUserName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "mGroupName",
                "mGroupName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "newFileSystemPermission",
                "newFileSystemPermission",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void mount(AlluxioURI alluxioPath, AlluxioURI ufsPath, MountOptions options) throws IOException, AlluxioException { checkUri(alluxioPath); FileSystemMasterClient masterClient = mFileSystemContext.acquireMasterClient(); try { masterClient.mount(alluxioPath, ufsPath, options); LOG.info(\"Mount \" + ufsPath.toString() + \" to \" + alluxioPath.getPath()); } catch (UnavailableException e) { throw e; } catch (AlluxioStatusException e) { throw e.toAlluxioException(); } finally { mFileSystemContext.releaseMasterClient(masterClient); } }",
        "focal_tgt": "@Override public void mount(AlluxioURI alluxioPath, AlluxioURI ufsPath, MountPOptions options) throws IOException, AlluxioException { checkUri(alluxioPath); FileSystemMasterClient masterClient = mFileSystemContext.acquireMasterClient(); try { masterClient.mount(alluxioPath, ufsPath, options); LOG.info(\"Mount \" + ufsPath.toString() + \" to \" + alluxioPath.getPath()); } catch (UnavailableException e) { throw e; } catch (AlluxioStatusException e) { throw e.toAlluxioException(); } finally { mFileSystemContext.releaseMasterClient(masterClient); } }",
        "test_src": "@Test public void mount() throws Exception { AlluxioURI alluxioPath = new AlluxioURI(\"/t\"); AlluxioURI ufsPath = new AlluxioURI(\"/u\"); MountOptions mountOptions = MountOptions.defaults(); doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions); mFileSystem.mount(alluxioPath, ufsPath, mountOptions); verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions); verifyFilesystemContextAcquiredAndReleased(); }",
        "test_tgt": "@Test public void mount() throws Exception { AlluxioURI alluxioPath = new AlluxioURI(\"/t\"); AlluxioURI ufsPath = new AlluxioURI(\"/u\"); MountPOptions mountOptions = MountPOptions.getDefaultInstance(); doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions); mFileSystem.mount(alluxioPath, ufsPath, mountOptions); verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions); verifyFilesystemContextAcquiredAndReleased(); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "mount",
                "mount",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "AlluxioURI",
                "AlluxioURI",
                "equal"
            ],
            [
                "alluxioPath",
                "alluxioPath",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "AlluxioURI",
                "AlluxioURI",
                "equal"
            ],
            [
                "ufsPath",
                "ufsPath",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "MountOptions",
                "MountPOptions",
                "replace"
            ],
            [
                "options",
                "options",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "AlluxioException",
                "AlluxioException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "checkUri",
                "checkUri",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "alluxioPath",
                "alluxioPath",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FileSystemMasterClient",
                "FileSystemMasterClient",
                "equal"
            ],
            [
                "masterClient",
                "masterClient",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "mFileSystemContext",
                "mFileSystemContext",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "acquireMasterClient",
                "acquireMasterClient",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "masterClient",
                "masterClient",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "mount",
                "mount",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "alluxioPath",
                "alluxioPath",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ufsPath",
                "ufsPath",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "options",
                "options",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Mount",
                "Mount",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "ufsPath",
                "ufsPath",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "alluxioPath",
                "alluxioPath",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPath",
                "getPath",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "UnavailableException",
                "UnavailableException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "AlluxioStatusException",
                "AlluxioStatusException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toAlluxioException",
                "toAlluxioException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "finally",
                "finally",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "mFileSystemContext",
                "mFileSystemContext",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "releaseMasterClient",
                "releaseMasterClient",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "masterClient",
                "masterClient",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void workerRegister(long workerId, List<String> storageTiers, Map<String, Long> totalBytesOnTiers, Map<String, Long> usedBytesOnTiers, Map<String, List<Long>> currentBlocksOnTiers, RegisterWorkerTOptions options) throws NotFoundException { MasterWorkerInfo worker = mWorkers.getFirstByField(ID_INDEX, workerId); if (worker == null) { worker = findUnregisteredWorker(workerId); } if (worker == null) { throw new NotFoundException(ExceptionMessage.NO_WORKER_FOUND.getMessage(workerId)); } HashSet<Long> blocks = new HashSet<>(); for (List<Long> blockIds : currentBlocksOnTiers.values()) { blocks.addAll(blockIds); } synchronized (worker) { worker.updateLastUpdatedTimeMs(); Set<Long> removedBlocks = worker.register(mGlobalStorageTierAssoc, storageTiers, totalBytesOnTiers, usedBytesOnTiers, blocks); processWorkerRemovedBlocks(worker, removedBlocks); processWorkerAddedBlocks(worker, currentBlocksOnTiers); processWorkerOrphanedBlocks(worker); } if (options.isSetConfigList()) { List<alluxio.wire.ConfigProperty> wireConfigList = options.getConfigList() .stream().map(alluxio.wire.ConfigProperty::fromThrift) .collect(Collectors.toList()); for (BiConsumer<Address, List<ConfigProperty>> function : mWorkerRegisteredListeners) { WorkerNetAddress workerAddress = worker.getWorkerAddress(); function.accept(new Address(workerAddress.getHost(), workerAddress.getRpcPort()), wireConfigList); } } registerWorkerInternal(workerId); LOG.info(\"registerWorker(): {}\", worker); }",
        "focal_tgt": "@Override public void workerRegister(long workerId, List<String> storageTiers, Map<String, Long> totalBytesOnTiers, Map<String, Long> usedBytesOnTiers, Map<String, List<Long>> currentBlocksOnTiers, RegisterWorkerPOptions options) throws NotFoundException { MasterWorkerInfo worker = mWorkers.getFirstByField(ID_INDEX, workerId); if (worker == null) { worker = findUnregisteredWorker(workerId); } if (worker == null) { throw new NotFoundException(ExceptionMessage.NO_WORKER_FOUND.getMessage(workerId)); } HashSet<Long> blocks = new HashSet<>(); for (List<Long> blockIds : currentBlocksOnTiers.values()) { blocks.addAll(blockIds); } synchronized (worker) { worker.updateLastUpdatedTimeMs(); Set<Long> removedBlocks = worker.register(mGlobalStorageTierAssoc, storageTiers, totalBytesOnTiers, usedBytesOnTiers, blocks); processWorkerRemovedBlocks(worker, removedBlocks); processWorkerAddedBlocks(worker, currentBlocksOnTiers); processWorkerOrphanedBlocks(worker); } if (options.getConfigsCount() > 0) { for (BiConsumer<Address, List<ConfigProperty>> function : mWorkerRegisteredListeners) { WorkerNetAddress workerAddress = worker.getWorkerAddress(); function.accept(new Address(workerAddress.getHost(), workerAddress.getRpcPort()), options.getConfigsList()); } } registerWorkerInternal(workerId); LOG.info(\"registerWorker(): {}\", worker); }",
        "test_src": "@Test public void countBytes() throws Exception { long worker1 = mBlockMaster.getWorkerId(NET_ADDRESS_1); long worker2 = mBlockMaster.getWorkerId(NET_ADDRESS_2); List<String> tiers = Arrays.asList(\"MEM\", \"SSD\"); Map<String, Long> worker1TotalBytesOnTiers = ImmutableMap.of(\"MEM\", 10L, \"SSD\", 20L); Map<String, Long> worker2TotalBytesOnTiers = ImmutableMap.of(\"MEM\", 1000L, \"SSD\", 2000L); Map<String, Long> worker1UsedBytesOnTiers = ImmutableMap.of(\"MEM\", 1L, \"SSD\", 2L); Map<String, Long> worker2UsedBytesOnTiers = ImmutableMap.of(\"MEM\", 100L, \"SSD\", 200L); mBlockMaster.workerRegister(worker1, tiers, worker1TotalBytesOnTiers, worker1UsedBytesOnTiers, NO_BLOCKS_ON_TIERS, new RegisterWorkerTOptions()); mBlockMaster.workerRegister(worker2, tiers, worker2TotalBytesOnTiers, worker2UsedBytesOnTiers, NO_BLOCKS_ON_TIERS, new RegisterWorkerTOptions()); assertEquals(3030, mBlockMaster.getCapacityBytes()); assertEquals(303L, mBlockMaster.getUsedBytes()); assertEquals(ImmutableMap.of(\"MEM\", 1010L, \"SSD\", 2020L), mBlockMaster.getTotalBytesOnTiers()); assertEquals(ImmutableMap.of(\"MEM\", 101L, \"SSD\", 202L), mBlockMaster.getUsedBytesOnTiers()); }",
        "test_tgt": "@Test public void countBytes() throws Exception { long worker1 = mBlockMaster.getWorkerId(NET_ADDRESS_1); long worker2 = mBlockMaster.getWorkerId(NET_ADDRESS_2); List<String> tiers = Arrays.asList(\"MEM\", \"SSD\"); Map<String, Long> worker1TotalBytesOnTiers = ImmutableMap.of(\"MEM\", 10L, \"SSD\", 20L); Map<String, Long> worker2TotalBytesOnTiers = ImmutableMap.of(\"MEM\", 1000L, \"SSD\", 2000L); Map<String, Long> worker1UsedBytesOnTiers = ImmutableMap.of(\"MEM\", 1L, \"SSD\", 2L); Map<String, Long> worker2UsedBytesOnTiers = ImmutableMap.of(\"MEM\", 100L, \"SSD\", 200L); mBlockMaster.workerRegister(worker1, tiers, worker1TotalBytesOnTiers, worker1UsedBytesOnTiers, NO_BLOCKS_ON_TIERS, RegisterWorkerPOptions.getDefaultInstance()); mBlockMaster.workerRegister(worker2, tiers, worker2TotalBytesOnTiers, worker2UsedBytesOnTiers, NO_BLOCKS_ON_TIERS, RegisterWorkerPOptions.getDefaultInstance()); assertEquals(3030, mBlockMaster.getCapacityBytes()); assertEquals(303L, mBlockMaster.getUsedBytes()); assertEquals(ImmutableMap.of(\"MEM\", 1010L, \"SSD\", 2020L), mBlockMaster.getTotalBytesOnTiers()); assertEquals(ImmutableMap.of(\"MEM\", 101L, \"SSD\", 202L), mBlockMaster.getUsedBytesOnTiers()); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "workerRegister",
                "workerRegister",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "workerId",
                "workerId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "storageTiers",
                "storageTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "totalBytesOnTiers",
                "totalBytesOnTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "usedBytesOnTiers",
                "usedBytesOnTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "currentBlocksOnTiers",
                "currentBlocksOnTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "RegisterWorkerTOptions",
                "RegisterWorkerPOptions",
                "replace"
            ],
            [
                "options",
                "options",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "NotFoundException",
                "NotFoundException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "MasterWorkerInfo",
                "MasterWorkerInfo",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "mWorkers",
                "mWorkers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getFirstByField",
                "getFirstByField",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ID_INDEX",
                "ID_INDEX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workerId",
                "workerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "findUnregisteredWorker",
                "findUnregisteredWorker",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workerId",
                "workerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "NotFoundException",
                "NotFoundException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ExceptionMessage",
                "ExceptionMessage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NO_WORKER_FOUND",
                "NO_WORKER_FOUND",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessage",
                "getMessage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workerId",
                "workerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "HashSet",
                "HashSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "blocks",
                "blocks",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashSet",
                "HashSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "blockIds",
                "blockIds",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentBlocksOnTiers",
                "currentBlocksOnTiers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "values",
                "values",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "blocks",
                "blocks",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addAll",
                "addAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "blockIds",
                "blockIds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "synchronized",
                "synchronized",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "updateLastUpdatedTimeMs",
                "updateLastUpdatedTimeMs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "removedBlocks",
                "removedBlocks",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "register",
                "register",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "mGlobalStorageTierAssoc",
                "mGlobalStorageTierAssoc",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "storageTiers",
                "storageTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "totalBytesOnTiers",
                "totalBytesOnTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "usedBytesOnTiers",
                "usedBytesOnTiers",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "blocks",
                "blocks",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "processWorkerRemovedBlocks",
                "processWorkerRemovedBlocks",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "removedBlocks",
                "removedBlocks",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "processWorkerAddedBlocks",
                "processWorkerAddedBlocks",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "currentBlocksOnTiers",
                "currentBlocksOnTiers",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "processWorkerOrphanedBlocks",
                "processWorkerOrphanedBlocks",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "options",
                "options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isSetConfigList",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "alluxio",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "wire",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "ConfigProperty",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "wireConfigList",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getConfigList",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "stream",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "map",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "alluxio",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "wire",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "ConfigProperty",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "fromThrift",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "collect",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Collectors",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "toList",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "getConfigsCount",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "BiConsumer",
                "BiConsumer",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Address",
                "Address",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "ConfigProperty",
                "ConfigProperty",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "function",
                "function",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "mWorkerRegisteredListeners",
                "mWorkerRegisteredListeners",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "WorkerNetAddress",
                "WorkerNetAddress",
                "equal"
            ],
            [
                "workerAddress",
                "workerAddress",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getWorkerAddress",
                "getWorkerAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "function",
                "function",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "accept",
                "accept",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Address",
                "Address",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workerAddress",
                "workerAddress",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getHost",
                "getHost",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workerAddress",
                "workerAddress",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRpcPort",
                "getRpcPort",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "wireConfigList",
                "options",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getConfigsList",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "registerWorkerInternal",
                "registerWorkerInternal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workerId",
                "workerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "registerWorker",
                "registerWorker",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "worker",
                "worker",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Permission setUserFromThriftClient(Configuration conf) throws IOException { if (!SecurityUtils.isAuthenticationEnabled(conf)) { return this; } User user = AuthenticatedClientUser.get(conf); Preconditions.checkNotNull(user, ExceptionMessage.AUTHORIZED_CLIENT_USER_IS_NULL.getMessage()); mUserName = user.getName(); mGroupName = CommonUtils.getPrimaryGroupName(conf, user.getName()); return this; }",
        "focal_tgt": "public Permission setUserFromThriftClient() throws IOException { if (!SecurityUtils.isAuthenticationEnabled()) { return this; } User user = AuthenticatedClientUser.get(); Preconditions.checkNotNull(user, ExceptionMessage.AUTHORIZED_CLIENT_USER_IS_NULL.getMessage()); mUserName = user.getName(); mGroupName = CommonUtils.getPrimaryGroupName(user.getName()); return this; }",
        "test_src": "@Test public void setUserFromLoginModuleTest() throws Exception { Configuration conf = new Configuration(); Permission permission = Permission.defaults(); conf.set(Constants.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName()); permission.setUserFromThriftClient(conf); verifyPermission(\"\", \"\", (short) 0777, permission); conf.set(Constants.SECURITY_AUTHENTICATION_TYPE, AuthType.SIMPLE.getAuthName()); conf.set(Constants.SECURITY_LOGIN_USERNAME, \"test_login_user\"); conf.set(Constants.SECURITY_GROUP_MAPPING, IdentityUserGroupsMapping.class.getName()); Whitebox.setInternalState(LoginUser.class, \"sLoginUser\", (String) null); permission.setUserFromLoginModule(conf); verifyPermission(\"test_login_user\", \"test_login_user\", (short) 0777, permission); }",
        "test_tgt": "@Test public void setUserFromLoginModuleTest() throws Exception { Configuration.defaultInit(); Permission permission = Permission.defaults(); Configuration.set(Constants.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName()); permission.setUserFromThriftClient(); verifyPermission(\"\", \"\", (short) 0777, permission); Configuration.set(Constants.SECURITY_AUTHENTICATION_TYPE, AuthType.SIMPLE.getAuthName()); Configuration.set(Constants.SECURITY_LOGIN_USERNAME, \"test_login_user\"); Configuration.set(Constants.SECURITY_GROUP_MAPPING, IdentityUserGroupsMapping.class.getName()); Whitebox.setInternalState(LoginUser.class, \"sLoginUser\", (String) null); permission.setUserFromLoginModule(); verifyPermission(\"test_login_user\", \"test_login_user\", (short) 0777, permission); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Permission",
                "Permission",
                "equal"
            ],
            [
                "setUserFromThriftClient",
                "setUserFromThriftClient",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Configuration",
                "",
                "delete"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "SecurityUtils",
                "SecurityUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isAuthenticationEnabled",
                "isAuthenticationEnabled",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "AuthenticatedClientUser",
                "AuthenticatedClientUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Preconditions",
                "Preconditions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ExceptionMessage",
                "ExceptionMessage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "AUTHORIZED_CLIENT_USER_IS_NULL",
                "AUTHORIZED_CLIENT_USER_IS_NULL",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessage",
                "getMessage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "mUserName",
                "mUserName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "mGroupName",
                "mGroupName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "CommonUtils",
                "CommonUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPrimaryGroupName",
                "getPrimaryGroupName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void createBlockPath(String path) throws IOException { try { createStorageDirPath(PathUtils.getParent(path)); } catch (InvalidPathException e) { throw new IOException(\"Failed to create block path, get parent path of \" + path + \"failed\", e); } catch (IOException e) { throw new IOException(\"Failed to create block path \" + path, e); } }",
        "focal_tgt": "public static void createBlockPath(String path, String workerDataFolderPermissions) throws IOException { try { createStorageDirPath(PathUtils.getParent(path), workerDataFolderPermissions); } catch (InvalidPathException e) { throw new IOException(\"Failed to create block path, get parent path of \" + path + \"failed\", e); } catch (IOException e) { throw new IOException(\"Failed to create block path \" + path, e); } }",
        "test_src": "@Test public void createBlockPath() throws IOException { String absolutePath = PathUtils.concatPath(mTestFolder.getRoot(), \"tmp\", \"bar\"); File tempFile = new File(absolutePath); FileUtils.createBlockPath(tempFile.getAbsolutePath()); assertTrue(FileUtils.exists(tempFile.getParent())); }",
        "test_tgt": "@Test public void createBlockPath() throws IOException { String absolutePath = PathUtils.concatPath(mTestFolder.getRoot(), \"tmp\", \"bar\"); File tempFile = new File(absolutePath); FileUtils.createBlockPath(tempFile.getAbsolutePath(), mWorkerDataFolderPerms); assertTrue(FileUtils.exists(tempFile.getParent())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "createBlockPath",
                "createBlockPath",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "workerDataFolderPermissions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "createStorageDirPath",
                "createStorageDirPath",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PathUtils",
                "PathUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getParent",
                "getParent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "workerDataFolderPermissions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "InvalidPathException",
                "InvalidPathException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Failed",
                "Failed",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "parent",
                "parent",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Failed",
                "Failed",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Item[] toArray() { return Arrays.copyOf(values, size()); }",
        "focal_tgt": "public Item[] finish() { assert size > 0 : \"List is empty.\"; Item[] its = new Item[size]; System.arraycopy(values, 0, its, 0, size); values = new Item[CAP]; size = 0; return its; }",
        "test_src": "@Test public final void testToArray() { ItemList il = new ItemList(Itr.ZERO); for(int i = 0; i < CAP - 1; i++) { il.add(Itr.ZERO); } assertEquals(CAP, il.toArray().length); assertEquals(il.size(), il.toArray().length); }",
        "test_tgt": "@Test public final void testToArray() { ItemList il = new ItemList(Itr.ZERO); for(int i = 0; i < CAP - 1; i++) { il.add(Itr.ZERO); } assertEquals(CAP, il.finish().length); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Item",
                "Item",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "toArray",
                "finish",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "Arrays",
                "assert",
                "replace"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "is",
                "insert"
            ],
            [
                "",
                "empty",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "copyOf",
                "\"",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Item",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "its",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Item",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "System",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "arraycopy",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "values",
                "values",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "its",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "values",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Item",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "CAP",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "its",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public CompletableFuture<Boolean> handleFailure(Map nodes) { return router.sendMessageAndGetCompletable(CorfuMsgType.MANAGEMENT_FAILURE_DETECTED.payloadMsg(new FailureDetectorMsg(nodes))); }",
        "focal_tgt": "public CompletableFuture<Boolean> handleFailure(Set nodes) { return router.sendMessageAndGetCompletable(CorfuMsgType.MANAGEMENT_FAILURE_DETECTED.payloadMsg(new FailureDetectorMsg(nodes))); }",
        "test_src": "@Test public void handleFailure() throws Exception { Map map = new HashMap<String, Boolean>(); map.put(\"Key\", true); assertThat(client.handleFailure(map).get()).isEqualTo(true); }",
        "test_tgt": "@Test public void handleFailure() throws Exception { Set<String> set = new HashSet<>(); set.add(\"Key\"); assertThat(client.handleFailure(set).get()).isEqualTo(true); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "CompletableFuture",
                "CompletableFuture",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "handleFailure",
                "handleFailure",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Set",
                "replace"
            ],
            [
                "nodes",
                "nodes",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "router",
                "router",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sendMessageAndGetCompletable",
                "sendMessageAndGetCompletable",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CorfuMsgType",
                "CorfuMsgType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MANAGEMENT_FAILURE_DETECTED",
                "MANAGEMENT_FAILURE_DETECTED",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "payloadMsg",
                "payloadMsg",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FailureDetectorMsg",
                "FailureDetectorMsg",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "nodes",
                "nodes",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public HashMap<String, Boolean> getServerStatus() { HashMap<String, Boolean> status_change = new HashMap<>(); long newCorrectEpoch = -1; if (historyPollCount > 3) { Boolean is_up; for (int i = 0; i < historyServers.length; i++) { try { pollCompletableFutures[i].get(); } catch (InterruptedException | ExecutionException e) { log.error(\"Error in polling task for server {} : {}\", historyServers[i], e); } is_up = !(historyPollFailures[i] >= failedPollLimit); if (is_up != historyStatus.get(historyServers[i])) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + is_up); status_change.put(historyServers[i], is_up); historyPollFailures[i] = 0; } if (historyPollEpochExceptions[i] != -1) { newCorrectEpoch = newCorrectEpoch < historyPollEpochExceptions[i] ? historyPollEpochExceptions[i] : newCorrectEpoch; historyPollEpochExceptions[i] = -1; } } } if (newCorrectEpoch == -1 && status_change.isEmpty()) { return null; } return status_change; }",
        "focal_tgt": "@Override public PollReport getServerStatus() { Set<String> failingNodes = new HashSet<>(); HashMap<String, Long> outOfPhaseEpochNodes = new HashMap<>(); long newCorrectEpoch = -1; if (historyPollCount > 3) { Boolean is_up; for (int i = 0; i < historyServers.length; i++) { try { pollCompletableFutures[i].get(); } catch (InterruptedException | ExecutionException e) { log.error(\"Error in polling task for server {} : {}\", historyServers[i], e); } is_up = !(historyPollFailures[i] >= failedPollLimit); if (!is_up) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + is_up); failingNodes.add(historyServers[i]); historyStatus.put(historyServers[i], is_up); historyPollFailures[i]--; } else if (!historyStatus.get(historyServers[i])) { if (historyPollFailures[i] > 0) { if (--historyPollFailures[i] == 0) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + true); historyStatus.put(historyServers[i], true); } else { failingNodes.add(historyServers[i]); } } } if (historyPollEpochExceptions[i] != -1) { outOfPhaseEpochNodes.put(historyServers[i], historyPollEpochExceptions[i]); historyPollEpochExceptions[i] = -1; } } } return new PollReport.PollReportBuilder() .setFailingNodes(failingNodes) .setOutOfPhaseEpochNodes(outOfPhaseEpochNodes) .build(); }",
        "test_src": "@Test public void successfulPolling() throws InterruptedException { for (int i = 0; i < PARAMETERS.CONCURRENCY_SOME; i++) { failureDetectorPolicy.executePolicy(layout, corfuRuntime); Thread.sleep(PARAMETERS.TIMEOUT_VERY_SHORT.toMillis()); } Thread.sleep(PARAMETERS.TIMEOUT_SHORT.toMillis()); Map<String, Boolean> result = failureDetectorPolicy.getServerStatus(); assertThat(result).isNull(); }",
        "test_tgt": "@Test public void successfulPolling() throws InterruptedException { for (int i = 0; i < PARAMETERS.CONCURRENCY_SOME; i++) { failureDetectorPolicy.executePolicy(layout, corfuRuntime); Thread.sleep(PARAMETERS.TIMEOUT_VERY_SHORT.toMillis()); } Thread.sleep(PARAMETERS.TIMEOUT_SHORT.toMillis()); PollReport result = failureDetectorPolicy.getServerStatus(); assertThat(result.getIsFailurePresent()).isFalse(); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "PollReport",
                "insert"
            ],
            [
                "",
                "getServerStatus",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Set",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "HashSet",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "HashMap",
                "HashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Boolean",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getServerStatus",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "HashMap",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Boolean",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "status_change",
                "Long",
                "replace"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "outOfPhaseEpochNodes",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashMap",
                "HashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "newCorrectEpoch",
                "newCorrectEpoch",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollCount",
                "historyPollCount",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "pollCompletableFutures",
                "pollCompletableFutures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "InterruptedException",
                "InterruptedException",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "ExecutionException",
                "ExecutionException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                "polling",
                "polling",
                "equal"
            ],
            [
                "task",
                "task",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "server",
                "server",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollFailures",
                "historyPollFailures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "failedPollLimit",
                "failedPollLimit",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "is_up",
                "",
                "delete"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "historyStatus",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "historyServers",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "is_up",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Change",
                "Change",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "historyStatus",
                "historyStatus",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "status_change",
                "failingNodes",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "historyPollFailures",
                "historyPollFailures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "-",
                "replace"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyPollFailures",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ")",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "historyPollFailures",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "log",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "debug",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Change",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "status",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "<",
                "outOfPhaseEpochNodes",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "?",
                ")",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "historyPollEpochExceptions",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "status_change",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "status_change",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "new",
                "replace"
            ],
            [
                "",
                "PollReport",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "PollReportBuilder",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setFailingNodes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setOutOfPhaseEpochNodes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "outOfPhaseEpochNodes",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "@Override public HashMap<String, Boolean> getServerStatus() { HashMap<String, Boolean> status_change = new HashMap<>(); long newCorrectEpoch = -1; if (historyPollCount > 3) { Boolean is_up; for (int i = 0; i < historyServers.length; i++) { try { pollCompletableFutures[i].get(); } catch (InterruptedException | ExecutionException e) { log.error(\"Error in polling task for server {} : {}\", historyServers[i], e); } is_up = !(historyPollFailures[i] >= failedPollLimit); if (is_up != historyStatus.get(historyServers[i])) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + is_up); status_change.put(historyServers[i], is_up); historyPollFailures[i] = 0; } if (historyPollEpochExceptions[i] != -1) { newCorrectEpoch = newCorrectEpoch < historyPollEpochExceptions[i] ? historyPollEpochExceptions[i] : newCorrectEpoch; historyPollEpochExceptions[i] = -1; } } } if (newCorrectEpoch == -1 && status_change.isEmpty()) { return null; } return status_change; }",
        "focal_tgt": "@Override public PollReport getServerStatus() { Set<String> failingNodes = new HashSet<>(); HashMap<String, Long> outOfPhaseEpochNodes = new HashMap<>(); long newCorrectEpoch = -1; if (historyPollCount > 3) { Boolean is_up; for (int i = 0; i < historyServers.length; i++) { try { pollCompletableFutures[i].get(); } catch (InterruptedException | ExecutionException e) { log.error(\"Error in polling task for server {} : {}\", historyServers[i], e); } is_up = !(historyPollFailures[i] >= failedPollLimit); if (!is_up) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + is_up); failingNodes.add(historyServers[i]); historyStatus.put(historyServers[i], is_up); historyPollFailures[i]--; } else if (!historyStatus.get(historyServers[i])) { if (historyPollFailures[i] > 0) { if (--historyPollFailures[i] == 0) { log.debug(\"Change of status: \" + historyServers[i] + \" \" + historyStatus.get(historyServers[i]) + \" -> \" + true); historyStatus.put(historyServers[i], true); } else { failingNodes.add(historyServers[i]); } } } if (historyPollEpochExceptions[i] != -1) { outOfPhaseEpochNodes.put(historyServers[i], historyPollEpochExceptions[i]); historyPollEpochExceptions[i] = -1; } } } return new PollReport.PollReportBuilder() .setFailingNodes(failingNodes) .setOutOfPhaseEpochNodes(outOfPhaseEpochNodes) .build(); }",
        "test_src": "@Test public void failedPolling() throws InterruptedException { addServerRule(SERVERS.PORT_0, new TestRule().always().drop()); addServerRule(SERVERS.PORT_1, new TestRule().always().drop()); addServerRule(SERVERS.PORT_2, new TestRule().always().drop()); Map<String, Boolean> expectedResult = new HashMap<>(); expectedResult.put(getEndpoint(SERVERS.PORT_0), false); expectedResult.put(getEndpoint(SERVERS.PORT_1), false); expectedResult.put(getEndpoint(SERVERS.PORT_2), false); pollAndMatchExpectedResult(expectedResult); clearServerRules(SERVERS.PORT_0); expectedResult.remove(getEndpoint(SERVERS.PORT_0)); pollAndMatchExpectedResult(expectedResult); }",
        "test_tgt": "@Test public void failedPolling() throws InterruptedException { addServerRule(SERVERS.PORT_0, new TestRule().always().drop()); addServerRule(SERVERS.PORT_1, new TestRule().always().drop()); addServerRule(SERVERS.PORT_2, new TestRule().always().drop()); Set<String> expectedResult = new HashSet<>(); expectedResult.add(getEndpoint(SERVERS.PORT_0)); expectedResult.add(getEndpoint(SERVERS.PORT_1)); expectedResult.add(getEndpoint(SERVERS.PORT_2)); pollAndMatchExpectedResult(expectedResult); clearServerRules(SERVERS.PORT_0); expectedResult.remove(getEndpoint(SERVERS.PORT_0)); pollAndMatchExpectedResult(expectedResult); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "PollReport",
                "insert"
            ],
            [
                "",
                "getServerStatus",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Set",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "HashSet",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "HashMap",
                "HashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Boolean",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getServerStatus",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "HashMap",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Boolean",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "status_change",
                "Long",
                "replace"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "outOfPhaseEpochNodes",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashMap",
                "HashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "newCorrectEpoch",
                "newCorrectEpoch",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollCount",
                "historyPollCount",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "pollCompletableFutures",
                "pollCompletableFutures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "InterruptedException",
                "InterruptedException",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "ExecutionException",
                "ExecutionException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                "polling",
                "polling",
                "equal"
            ],
            [
                "task",
                "task",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "server",
                "server",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollFailures",
                "historyPollFailures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "failedPollLimit",
                "failedPollLimit",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "is_up",
                "",
                "delete"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "historyStatus",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "historyServers",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "is_up",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Change",
                "Change",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "historyStatus",
                "historyStatus",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "status_change",
                "failingNodes",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyServers",
                "historyServers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "is_up",
                "is_up",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "historyPollFailures",
                "historyPollFailures",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "-",
                "replace"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyPollFailures",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ")",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "historyPollFailures",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "log",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "debug",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Change",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "status",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "historyStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "<",
                "outOfPhaseEpochNodes",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "historyServers",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "i",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "?",
                ")",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "historyPollEpochExceptions",
                "historyPollEpochExceptions",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "historyPollEpochExceptions",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "newCorrectEpoch",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "status_change",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "status_change",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "new",
                "replace"
            ],
            [
                "",
                "PollReport",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "PollReportBuilder",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setFailingNodes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "failingNodes",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setOutOfPhaseEpochNodes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "outOfPhaseEpochNodes",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public int getItemId() { return itemId; }",
        "focal_tgt": "public int getResourceId() { return resourceId; }",
        "test_src": "@Test public void testGetItemId() { assertTrue(\"testGetItemId 0\", mv.getItemId() >= 0); }",
        "test_tgt": "@Test public void testGetItemId() { assertTrue(\"testGetItemId 0\", mv.getResourceId() >= 0); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "getItemId",
                "getResourceId",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "itemId",
                "resourceId",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void setItemId(int itemId) { this.itemId = itemId; }",
        "focal_tgt": "public void setResourceId(int resourceId) { this.resourceId = resourceId; }",
        "test_src": "@Test public void testSetItemId() { int itemId = 55; mv.setItemId(itemId); assertThat(\"testSetItemId 0\", mv.getItemId(), equalTo(itemId)); }",
        "test_tgt": "@Test public void testSetItemId() { int itemId = 55; mv.setResourceId(itemId); mv.setResourceTypeId(Constants.ITEM); assertThat(\"testSetItemId 0\", mv.getResourceId(), equalTo(itemId)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "setItemId",
                "setResourceId",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "itemId",
                "resourceId",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "itemId",
                "resourceId",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "itemId",
                "resourceId",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public BitstreamFormat getFormat() { return bitstreamFormat; }",
        "focal_tgt": "public BitstreamFormat getFormat(Context context) throws SQLException { return getBitstreamService().getFormat(context, this); }",
        "test_src": "@Test public void testGetFormat() throws SQLException { assertThat(\"testGetFormat 0\", bs.getFormat(), notNullValue()); assertThat(\"testGetFormat 1\", bs.getFormat(), equalTo(BitstreamFormat.findUnknown(context))); }",
        "test_tgt": "@Test public void testGetFormat() throws SQLException { assertThat(\"testGetFormat 0\", bs.getFormat(context), notNullValue()); assertThat(\"testGetFormat 1\", bs.getFormat(context), equalTo(bitstreamFormatService.findUnknown(context))); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "BitstreamFormat",
                "BitstreamFormat",
                "equal"
            ],
            [
                "getFormat",
                "getFormat",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "Context",
                "insert"
            ],
            [
                "",
                "context",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "SQLException",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "bitstreamFormat",
                "getBitstreamService",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getFormat",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "context",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public int getValueId() { return valueId; }",
        "focal_tgt": "public Integer getID() { return id; }",
        "test_src": "@Test public void testGetValueId() { assertThat(\"testGetValueId 0\",mv.getValueId(), notNullValue()); }",
        "test_tgt": "@Test public void testGetValueId() { assertThat(\"testGetValueId 0\",mv.getID(), notNullValue()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "getValueId",
                "Integer",
                "replace"
            ],
            [
                "",
                "getID",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "valueId",
                "id",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static ErrorCodes getErrorCode(HttpResponseException responseException) throws HttpResponseException { String errorContent = responseException.getContent(); if (errorContent == null) { throw responseException; } try { ErrorResponseTemplate errorResponse = JsonTemplateMapper.readJson(errorContent, ErrorResponseTemplate.class); List<ErrorEntryTemplate> errors = errorResponse.getErrors(); if (errors.size() == 1) { String errorCodeString = errors.get(0).getCode(); if (errorCodeString != null) { return ErrorCodes.valueOf(errorCodeString); } } } catch (IOException | IllegalArgumentException ex) { } throw responseException; }",
        "focal_tgt": "public static ErrorCodes getErrorCode(ResponseException responseException) throws ResponseException { String errorContent = responseException.getContent(); if (errorContent == null) { throw responseException; } try { ErrorResponseTemplate errorResponse = JsonTemplateMapper.readJson(errorContent, ErrorResponseTemplate.class); List<ErrorEntryTemplate> errors = errorResponse.getErrors(); if (errors.size() == 1) { String errorCodeString = errors.get(0).getCode(); if (errorCodeString != null) { return ErrorCodes.valueOf(errorCodeString); } } } catch (IOException | IllegalArgumentException ex) { } throw responseException; }",
        "test_src": "@Test public void testGetErrorCode_invalidErrorObject() { Mockito.when(responseException.getContent()) .thenReturn(\"{\\\"type\\\":\\\"other\\\",\\\"message\\\":\\\"some other object\\\"}\"); try { ErrorResponseUtil.getErrorCode(responseException); Assert.fail(); } catch (HttpResponseException ex) { Assert.assertSame(responseException, ex); } }",
        "test_tgt": "@Test public void testGetErrorCode_invalidErrorObject() { Mockito.when(responseException.getContent()) .thenReturn(\"{\\\"type\\\":\\\"other\\\",\\\"message\\\":\\\"some other object\\\"}\"); try { ErrorResponseUtil.getErrorCode(responseException); Assert.fail(); } catch (ResponseException ex) { Assert.assertSame(responseException, ex); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "ErrorCodes",
                "ErrorCodes",
                "equal"
            ],
            [
                "getErrorCode",
                "getErrorCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HttpResponseException",
                "ResponseException",
                "replace"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "HttpResponseException",
                "ResponseException",
                "replace"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getContent",
                "getContent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ErrorResponseTemplate",
                "ErrorResponseTemplate",
                "equal"
            ],
            [
                "errorResponse",
                "errorResponse",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "JsonTemplateMapper",
                "JsonTemplateMapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "readJson",
                "readJson",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ErrorResponseTemplate",
                "ErrorResponseTemplate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "ErrorEntryTemplate",
                "ErrorEntryTemplate",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "errorResponse",
                "errorResponse",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrors",
                "getErrors",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCode",
                "getCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ErrorCodes",
                "ErrorCodes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "valueOf",
                "valueOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static ErrorCodes getErrorCode(HttpResponseException responseException) throws HttpResponseException { String errorContent = responseException.getContent(); if (errorContent == null) { throw responseException; } try { ErrorResponseTemplate errorResponse = JsonTemplateMapper.readJson(errorContent, ErrorResponseTemplate.class); List<ErrorEntryTemplate> errors = errorResponse.getErrors(); if (errors.size() == 1) { String errorCodeString = errors.get(0).getCode(); if (errorCodeString != null) { return ErrorCodes.valueOf(errorCodeString); } } } catch (IOException | IllegalArgumentException ex) { } throw responseException; }",
        "focal_tgt": "public static ErrorCodes getErrorCode(ResponseException responseException) throws ResponseException { String errorContent = responseException.getContent(); if (errorContent == null) { throw responseException; } try { ErrorResponseTemplate errorResponse = JsonTemplateMapper.readJson(errorContent, ErrorResponseTemplate.class); List<ErrorEntryTemplate> errors = errorResponse.getErrors(); if (errors.size() == 1) { String errorCodeString = errors.get(0).getCode(); if (errorCodeString != null) { return ErrorCodes.valueOf(errorCodeString); } } } catch (IOException | IllegalArgumentException ex) { } throw responseException; }",
        "test_src": "@Test public void testGetErrorCode_knownErrorCode() throws HttpResponseException { Mockito.when(responseException.getContent()) .thenReturn( \"{\\\"errors\\\":[{\\\"code\\\":\\\"MANIFEST_INVALID\\\",\\\"message\\\":\\\"manifest invalid\\\",\\\"detail\\\":{}}]}\"); Assert.assertSame( ErrorCodes.MANIFEST_INVALID, ErrorResponseUtil.getErrorCode(responseException)); }",
        "test_tgt": "@Test public void testGetErrorCode_knownErrorCode() throws ResponseException { Mockito.when(responseException.getContent()) .thenReturn( \"{\\\"errors\\\":[{\\\"code\\\":\\\"MANIFEST_INVALID\\\",\\\"message\\\":\\\"manifest invalid\\\",\\\"detail\\\":{}}]}\"); Assert.assertSame( ErrorCodes.MANIFEST_INVALID, ErrorResponseUtil.getErrorCode(responseException)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "ErrorCodes",
                "ErrorCodes",
                "equal"
            ],
            [
                "getErrorCode",
                "getErrorCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HttpResponseException",
                "ResponseException",
                "replace"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "HttpResponseException",
                "ResponseException",
                "replace"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getContent",
                "getContent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ErrorResponseTemplate",
                "ErrorResponseTemplate",
                "equal"
            ],
            [
                "errorResponse",
                "errorResponse",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "JsonTemplateMapper",
                "JsonTemplateMapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "readJson",
                "readJson",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorContent",
                "errorContent",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ErrorResponseTemplate",
                "ErrorResponseTemplate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "ErrorEntryTemplate",
                "ErrorEntryTemplate",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "errorResponse",
                "errorResponse",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrors",
                "getErrors",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCode",
                "getCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ErrorCodes",
                "ErrorCodes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "valueOf",
                "valueOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errorCodeString",
                "errorCodeString",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "responseException",
                "responseException",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public FuturePut changeProtectionKey(Number160 locationKey, Number160 domainKey, Number160 contentKey, int ttl, KeyPair oldProtectionKey, KeyPair newProtectionKey) { logger.debug(String.format( \"change protection key; location key = '%s' domain key = '%s' content key = '%s'\", locationKey, domainKey, contentKey)); try { if (newProtectionKey == null) { logger.error(\"Cannot change the protection key to null value\"); return null; } else { Data data = new Data(); data.ttlSeconds(ttl); data = data.setProtectedEntry().sign(newProtectionKey, signatureFactory).duplicateMeta(); if (oldProtectionKey == null) { return getPeer().put(locationKey).setData(contentKey, data).setDomainKey(domainKey) .keyPair(newProtectionKey).start(); } else { return getPeer().put(locationKey).setData(contentKey, data).setDomainKey(domainKey) .keyPair(oldProtectionKey).start(); } } } catch (IOException | InvalidKeyException | SignatureException e) { logger.error(String .format(\"Change the protection key failed. location key = '%s' domain key = '%s' content key = '%s' exception = '%s'\", locationKey, domainKey, contentKey, e.getMessage())); return null; } }",
        "focal_tgt": "public FuturePut changeProtectionKey(Number160 locationKey, Number160 domainKey, Number160 contentKey, Number160 versionKey, Number160 basedOnKey, int ttl, KeyPair oldProtectionKey, KeyPair newProtectionKey, byte[] hash) { logger.debug(String .format(\"change content protection key location key = '%s' domain key = '%s' content key = '%s' version key '%s'\", locationKey, domainKey, contentKey, versionKey)); try { Data data = new Data().ttlSeconds(ttl).basedOn(basedOnKey); Cipher rsa = Cipher.getInstance(\"RSA\"); rsa.init(Cipher.ENCRYPT_MODE, newProtectionKey.getPrivate()); byte[] newSignature = rsa.doFinal(hash); data = data.signature(signatureCodec.decode(newSignature)).signed(true).duplicateMeta(); return getPeer().put(locationKey).setDomainKey(domainKey).putMeta().setData(contentKey, data) .setVersionKey(versionKey).keyPair(oldProtectionKey).start(); } catch (IOException | InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException | BadPaddingException e) { logger.error(String .format(\"Change protection key failed. location key = '%s' domain key = '%s' content key = '%s' version key = '%s' exception = '%s'\", locationKey, domainKey, contentKey, versionKey, e.getMessage())); return null; } }",
        "test_src": "@Test public void testChangeProtectionKey() throws NoPeerConnectionException, IOException { KeyPair keypair1 = EncryptionUtil.generateRSAKeyPair(); KeyPair keypair2 = EncryptionUtil.generateRSAKeyPair(); Number160 locationKey = Number160.createHash(NetworkTestUtil.randomString()); Number160 domainKey = H2HConstants.TOMP2P_DEFAULT_KEY; Number160 contentKey = Number160.createHash(NetworkTestUtil.randomString()); NetworkManager node = network.get(random.nextInt(networkSize)); H2HTestData data1v0 = new H2HTestData(NetworkTestUtil.randomString()); data1v0.generateVersionKey(); data1v0.setBasedOnKey(Number160.ZERO); FuturePut putFuture1 = node.getDataManager().put(locationKey, domainKey, contentKey, data1v0, keypair1); putFuture1.awaitUninterruptibly(); Assert.assertTrue(putFuture1.isSuccess()); H2HTestData data1v1 = new H2HTestData(NetworkTestUtil.randomString()); data1v1.generateVersionKey(); data1v1.setBasedOnKey(data1v0.getVersionKey()); FuturePut putFuture2 = node.getDataManager().put(locationKey, domainKey, contentKey, data1v1, keypair1); putFuture2.awaitUninterruptibly(); Assert.assertTrue(putFuture2.isSuccess()); H2HTestData data1v2 = new H2HTestData(NetworkTestUtil.randomString()); data1v2.generateVersionKey(); data1v2.setBasedOnKey(data1v1.getVersionKey()); FuturePut changeFuture1 = node.getDataManager().changeProtectionKey(locationKey, domainKey, contentKey, data1v2.getTimeToLive(), keypair1, keypair2); changeFuture1.awaitUninterruptibly(); Assert.assertTrue(changeFuture1.isSuccess()); H2HTestData data1v3 = new H2HTestData(NetworkTestUtil.randomString()); data1v3.generateVersionKey(); data1v3.setBasedOnKey(data1v2.getVersionKey()); FuturePut changeFuture2 = node.getDataManager().put(locationKey, domainKey, contentKey, data1v3, keypair1); changeFuture2.awaitUninterruptibly(); Assert.assertFalse(changeFuture2.isSuccess()); }",
        "test_tgt": "@Test public void testChangeProtectionKey() throws NoPeerConnectionException, IOException, InvalidKeyException, SignatureException { KeyPair keypairOld = EncryptionUtil.generateRSAKeyPair(); KeyPair keypairNew = EncryptionUtil.generateRSAKeyPair(); Number160 locationKey = Number160.createHash(NetworkTestUtil.randomString()); Number160 domainKey = H2HConstants.TOMP2P_DEFAULT_KEY; Number160 contentKey = Number160.createHash(NetworkTestUtil.randomString()); NetworkManager node = network.get(random.nextInt(networkSize)); H2HSharableTestData data = new H2HSharableTestData(NetworkTestUtil.randomString()); data.generateVersionKey(); data.setBasedOnKey(Number160.ZERO); FuturePut putFuture1 = node.getDataManager() .put(locationKey, domainKey, contentKey, data, keypairOld); putFuture1.awaitUninterruptibly(); Assert.assertTrue(putFuture1.isSuccess()); FuturePut changeFuture = node.getDataManager().changeProtectionKey(locationKey, domainKey, contentKey, data.getVersionKey(), data.getBasedOnKey(), data.getTimeToLive(), keypairOld, keypairNew, data.getHash()); changeFuture.awaitUninterruptibly(); Assert.assertTrue(changeFuture.isSuccess()); Data resData = node.getDataManager().get(locationKey, domainKey, contentKey, data.getVersionKey()) .awaitUninterruptibly().getData(); Assert.assertTrue(resData.verify(keypairNew.getPublic(), new H2HSignatureFactory())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "FuturePut",
                "FuturePut",
                "equal"
            ],
            [
                "changeProtectionKey",
                "changeProtectionKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Number160",
                "Number160",
                "equal"
            ],
            [
                "locationKey",
                "locationKey",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Number160",
                "Number160",
                "equal"
            ],
            [
                "domainKey",
                "domainKey",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Number160",
                "Number160",
                "equal"
            ],
            [
                "contentKey",
                "contentKey",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "Number160",
                "insert"
            ],
            [
                "",
                "versionKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Number160",
                "insert"
            ],
            [
                "",
                "basedOnKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "ttl",
                "ttl",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "KeyPair",
                "KeyPair",
                "equal"
            ],
            [
                "oldProtectionKey",
                "oldProtectionKey",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "KeyPair",
                "KeyPair",
                "equal"
            ],
            [
                "newProtectionKey",
                "newProtectionKey",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "byte",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "hash",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "change",
                "change",
                "equal"
            ],
            [
                "",
                "content",
                "insert"
            ],
            [
                "protection",
                "protection",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "domain",
                "domain",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "content",
                "content",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "locationKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "domainKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "contentKey",
                "version",
                "replace"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "locationKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "domainKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "contentKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "versionKey",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "Data",
                "replace"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Data",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ttlSeconds",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ttl",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "basedOn",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "basedOnKey",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Cipher",
                "insert"
            ],
            [
                "",
                "rsa",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "Cipher",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getInstance",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "RSA",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "rsa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "init",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Cipher",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ENCRYPT_MODE",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "newProtectionKey",
                "newProtectionKey",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                ".",
                "replace"
            ],
            [
                "",
                "getPrivate",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "byte",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "newSignature",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "rsa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "doFinal",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "hash",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "signature",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "signatureCodec",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "decode",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "newSignature",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "signed",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "duplicateMeta",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "getPeer",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "locationKey",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setDomainKey",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "domainKey",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "putMeta",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setData",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "contentKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setVersionKey",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "versionKey",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keyPair",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "oldProtectionKey",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "start",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "IOException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "InvalidKeyException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "NoSuchAlgorithmException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "NoSuchPaddingException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "IllegalBlockSizeException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "BadPaddingException",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Cannot",
                "",
                "delete"
            ],
            [
                "change",
                "",
                "delete"
            ],
            [
                "the",
                "String",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Change",
                "insert"
            ],
            [
                "protection",
                "protection",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "value",
                "",
                "delete"
            ],
            [
                "\"",
                "failed",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "location",
                "insert"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "domain",
                "insert"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "content",
                "insert"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "exception",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "locationKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "domainKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "contentKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "versionKey",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMessage",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "ttlSeconds",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ttl",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "setProtectedEntry",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "sign",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "newProtectionKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "signatureFactory",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "duplicateMeta",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "oldProtectionKey",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "getPeer",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "put",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "locationKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "setData",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "contentKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "setDomainKey",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "domainKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "keyPair",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "newProtectionKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "start",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "getPeer",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "put",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "locationKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "setData",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "contentKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "setDomainKey",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "domainKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "keyPair",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "oldProtectionKey",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "start",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "catch",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "IOException",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "InvalidKeyException",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "SignatureException",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "logger",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "error",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Change",
                "",
                "delete"
            ],
            [
                "the",
                "",
                "delete"
            ],
            [
                "protection",
                "",
                "delete"
            ],
            [
                "key",
                "",
                "delete"
            ],
            [
                "failed",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "location",
                "",
                "delete"
            ],
            [
                "key",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "domain",
                "",
                "delete"
            ],
            [
                "key",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "content",
                "",
                "delete"
            ],
            [
                "key",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "exception",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "locationKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "domainKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "contentKey",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getMessage",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "@PrePersist @PreUpdate protected void onCreateOrUpdateCommand() throws GenieException { validate(this.status, this.executable); if (this.tags == null) { this.tags = new HashSet<>(); } this.tags.add(this.getId()); this.tags.add(this.getName()); }",
        "focal_tgt": "@PrePersist @PreUpdate protected void onCreateOrUpdateCommand() throws GeniePreconditionException { validate(this.status, this.executable, null); if (this.tags == null) { this.tags = new HashSet<>(); } this.tags.add(this.getId()); this.tags.add(this.getName()); }",
        "test_src": "@Test public void testOnCreateOrUpdateCommand() throws GenieException { this.c = new Command(NAME, USER, CommandStatus.ACTIVE, EXECUTABLE, VERSION); this.c.onCreateOrUpdateCommand(); }",
        "test_tgt": "@Test public void testOnCreateOrUpdateCommand() throws GeniePreconditionException { this.c = new Command(NAME, USER, CommandStatus.ACTIVE, EXECUTABLE, VERSION); this.c.onCreateOrUpdateCommand(); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "PrePersist",
                "PrePersist",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "PreUpdate",
                "PreUpdate",
                "equal"
            ],
            [
                "protected",
                "protected",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "onCreateOrUpdateCommand",
                "onCreateOrUpdateCommand",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "GenieException",
                "GeniePreconditionException",
                "replace"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executable",
                "executable",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "tags",
                "tags",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "tags",
                "tags",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashSet",
                "HashSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "tags",
                "tags",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "tags",
                "tags",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static byte[] deriveSecret(String macAlgorithm, byte[] prk, String labelIn, byte[] hashValue) { try { int outLen = Mac.getInstance(macAlgorithm).getMacLength(); byte[] info = labelEncoder(hashValue, labelIn, outLen); byte[] result = expand(macAlgorithm, prk, info, outLen); return result; } catch (NoSuchAlgorithmException ex) { throw new CryptoException(\"Could not initialize HKDF\", ex); } }",
        "focal_tgt": "public static byte[] deriveSecret(String macAlgorithm, String hashAlgorithm, byte[] prk, String labelIn, byte[] toHash) { try { MessageDigest hashFunction = MessageDigest.getInstance(hashAlgorithm); hashFunction.update(toHash); byte[] hashValue = hashFunction.digest(); int outLen = Mac.getInstance(macAlgorithm).getMacLength(); return expandLabel(macAlgorithm, prk, labelIn, hashValue, outLen); } catch (NoSuchAlgorithmException ex) { throw new CryptoException(\"Could not initialize HKDF\", ex); } }",
        "test_src": "@Test public void testDeriveSecret() { String macAlgorithm = HKDFAlgorithm.TLS_HKDF_SHA256.getMacAlgorithm().getJavaName(); byte[] prk = ArrayConverter .hexStringToByteArray(\"31168cad69862a80c6f6bfd42897d0fe23c406a12e652a8d3ae4217694f49844\"); byte[] hashValue = ArrayConverter .hexStringToByteArray(\"52c04472bdfe929772c98b91cf425f78f47659be9d4a7d68b9e29d162935e9b9\"); String labelIn = \"client handshake traffic secret\"; byte[] result = HKDFunction.deriveSecret(macAlgorithm, prk, labelIn, hashValue); byte[] resultCorrect = ArrayConverter .hexStringToByteArray(\"6c6f274b1eae09b8bbd2039b7eb56147201a5e19288a3fd504fa52b1178a6e93\"); assertArrayEquals(result, resultCorrect); }",
        "test_tgt": "@Test public void testDeriveSecret() { String macAlgorithm = HKDFAlgorithm.TLS_HKDF_SHA256.getMacAlgorithm().getJavaName(); String hashAlgorithm = DigestAlgorithm.SHA256.getJavaName(); byte[] prk = ArrayConverter.hexStringToByteArray(\"33AD0A1C607EC03B09E6CD9893680CE210ADF300AA1F2660E1B22E10F170F92A\"); byte[] toHash = ArrayConverter.hexStringToByteArray(\"\"); String labelIn = HKDFunction.DERIVED; byte[] result = HKDFunction.deriveSecret(macAlgorithm, hashAlgorithm, prk, labelIn, toHash); byte[] resultCorrect = ArrayConverter.hexStringToByteArray(\"6F2615A108C702C5678F54FC9DBAB69716C076189C48250CEBEAC3576C3611BA\"); assertArrayEquals(result, resultCorrect); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "deriveSecret",
                "deriveSecret",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "macAlgorithm",
                "macAlgorithm",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "hashAlgorithm",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "prk",
                "prk",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "labelIn",
                "labelIn",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "hashValue",
                "toHash",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "MessageDigest",
                "insert"
            ],
            [
                "",
                "hashFunction",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "MessageDigest",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getInstance",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "hashAlgorithm",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "hashFunction",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "update",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "toHash",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "byte",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "hashValue",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "hashFunction",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "digest",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "outLen",
                "outLen",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Mac",
                "Mac",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getInstance",
                "getInstance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "macAlgorithm",
                "macAlgorithm",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMacLength",
                "getMacLength",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "info",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "labelEncoder",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "hashValue",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "labelIn",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "outLen",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "result",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "expand",
                "return",
                "replace"
            ],
            [
                "",
                "expandLabel",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "macAlgorithm",
                "macAlgorithm",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "prk",
                "prk",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "info",
                "labelIn",
                "replace"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "hashValue",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "outLen",
                "outLen",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "result",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "NoSuchAlgorithmException",
                "NoSuchAlgorithmException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "CryptoException",
                "CryptoException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Could",
                "Could",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "initialize",
                "initialize",
                "equal"
            ],
            [
                "HKDF",
                "HKDF",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static DateTimeAdjuster next(DayOfWeek dow) { if (dow == null) { throw new NullPointerException(\"DayOfWeek must not be null\"); } return new RelativeDayOfWeek(2, dow); }",
        "focal_tgt": "public static WithAdjuster next(DayOfWeek dow) { if (dow == null) { throw new NullPointerException(\"DayOfWeek must not be null\"); } return new RelativeDayOfWeek(2, dow); }",
        "test_src": "@Test(groups={\"tck\"}) public void test_next_serialization() throws IOException, ClassNotFoundException { DateTimeAdjuster next = DateTimeAdjusters.next(SUNDAY); assertTrue(next instanceof Serializable); ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos); oos.writeObject(next); oos.close(); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream( baos.toByteArray())); assertEquals(ois.readObject(), next); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_next_serialization() throws IOException, ClassNotFoundException { WithAdjuster next = DateTimeAdjusters.next(SUNDAY); assertTrue(next instanceof Serializable); ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos); oos.writeObject(next); oos.close(); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream( baos.toByteArray())); assertEquals(ois.readObject(), next); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "DateTimeAdjuster",
                "WithAdjuster",
                "replace"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "DayOfWeek",
                "DayOfWeek",
                "equal"
            ],
            [
                "dow",
                "dow",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dow",
                "dow",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "NullPointerException",
                "NullPointerException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "DayOfWeek",
                "DayOfWeek",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "RelativeDayOfWeek",
                "RelativeDayOfWeek",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "dow",
                "dow",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public CalendricalEngine parseToEngine(CharSequence text) { DateTimes.checkNotNull(text, \"Text must not be null\"); String str = text.toString(); ParsePosition pos = new ParsePosition(0); DateTimeParseContext result = parseToContext(str, pos); if (pos.getErrorIndex() >= 0 || pos.getIndex() < str.length()) { String abbr = str.toString(); if (abbr.length() > 64) { abbr = abbr.substring(0, 64) + \"...\"; } if (pos.getErrorIndex() >= 0) { throw new CalendricalParseException(\"Text '\" + abbr + \"' could not be parsed at index \" + pos.getErrorIndex(), str, pos.getErrorIndex()); } else { throw new CalendricalParseException(\"Text '\" + abbr + \"' could not be parsed, unparsed text found at index \" + pos.getIndex(), str, pos.getIndex()); } } return result.toCalendricalEngine(); }",
        "focal_tgt": "public DateTimeBuilder parseToBuilder(CharSequence text) { DateTimes.checkNotNull(text, \"Text must not be null\"); String str = text.toString(); ParsePosition pos = new ParsePosition(0); DateTimeParseContext result = parseToContext(str, pos); if (pos.getErrorIndex() >= 0 || pos.getIndex() < str.length()) { String abbr = str.toString(); if (abbr.length() > 64) { abbr = abbr.substring(0, 64) + \"...\"; } if (pos.getErrorIndex() >= 0) { throw new CalendricalParseException(\"Text '\" + abbr + \"' could not be parsed at index \" + pos.getErrorIndex(), str, pos.getErrorIndex()); } else { throw new CalendricalParseException(\"Text '\" + abbr + \"' could not be parsed, unparsed text found at index \" + pos.getIndex(), str, pos.getIndex()); } } return result.toBuilder(); }",
        "test_src": "@Test(groups={\"tck\"}) public void test_parseToEngine_String() throws Exception { DateTimeFormatter test = new DateTimeFormatter(Locale.ENGLISH, DateTimeFormatSymbols.STANDARD, compPP); CalendricalEngine result = test.parseToEngine(\"ONE30\"); assertEquals(result.getInput().size(), 1); assertEquals(result.getInput().get(0), DAY_OF_MONTH.field(30L)); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_parseToEngine_String() throws Exception { DateTimeFormatter test = new DateTimeFormatter(Locale.ENGLISH, DateTimeFormatSymbols.STANDARD, compPP); CalendricalEngine result = test.parseToBuilder(\"ONE30\"); assertEquals(result.getInput().size(), 1); assertEquals(result.getInput().get(0), DAY_OF_MONTH.field(30L)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "CalendricalEngine",
                "",
                "delete"
            ],
            [
                "parseToEngine",
                "DateTimeBuilder",
                "replace"
            ],
            [
                "",
                "parseToBuilder",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CharSequence",
                "CharSequence",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "DateTimes",
                "DateTimes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Text",
                "Text",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ParsePosition",
                "ParsePosition",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ParsePosition",
                "ParsePosition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "DateTimeParseContext",
                "DateTimeParseContext",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parseToContext",
                "parseToContext",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrorIndex",
                "getErrorIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getIndex",
                "getIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "64",
                "64",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "substring",
                "substring",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "64",
                "64",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrorIndex",
                "getErrorIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "CalendricalParseException",
                "CalendricalParseException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Text",
                "Text",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "could",
                "could",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "parsed",
                "parsed",
                "equal"
            ],
            [
                "at",
                "at",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrorIndex",
                "getErrorIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getErrorIndex",
                "getErrorIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "CalendricalParseException",
                "CalendricalParseException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Text",
                "Text",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "abbr",
                "abbr",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "could",
                "could",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "parsed",
                "parsed",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unparsed",
                "unparsed",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                "at",
                "at",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getIndex",
                "getIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getIndex",
                "getIndex",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toCalendricalEngine",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "toBuilder",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public static DateTimeAdjuster firstDayOfMonth() { return Impl.FIRST_DAY_OF_MONTH; }",
        "focal_tgt": "public static WithAdjuster firstDayOfMonth() { return Impl.FIRST_DAY_OF_MONTH; }",
        "test_src": "@Test(groups={\"tck\"}) public void test_firstDayOfMonth_serialization() throws IOException, ClassNotFoundException { DateTimeAdjuster firstDayOfMonth = DateTimeAdjusters.firstDayOfMonth(); assertTrue(firstDayOfMonth instanceof Serializable); ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos); oos.writeObject(firstDayOfMonth); oos.close(); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray())); assertSame(ois.readObject(), firstDayOfMonth); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_firstDayOfMonth_serialization() throws IOException, ClassNotFoundException { WithAdjuster firstDayOfMonth = DateTimeAdjusters.firstDayOfMonth(); assertTrue(firstDayOfMonth instanceof Serializable); ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos); oos.writeObject(firstDayOfMonth); oos.close(); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray())); assertSame(ois.readObject(), firstDayOfMonth); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "DateTimeAdjuster",
                "WithAdjuster",
                "replace"
            ],
            [
                "firstDayOfMonth",
                "firstDayOfMonth",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "FIRST_DAY_OF_MONTH",
                "FIRST_DAY_OF_MONTH",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public String print(DateTimeAccessor dateTime) { StringBuilder buf = new StringBuilder(32); printTo(dateTime, buf); return buf.toString(); }",
        "focal_tgt": "public String print(TemporalAccessor dateTime) { StringBuilder buf = new StringBuilder(32); printTo(dateTime, buf); return buf.toString(); }",
        "test_src": "@Test(expectedExceptions=NullPointerException.class, groups={\"tck\"}) public void test_print_Calendrical_null() throws Exception { DateTimeFormatter test = fmt.withLocale(Locale.ENGLISH).withSymbols(DateTimeFormatSymbols.STANDARD); test.print((DateTimeAccessor) null); }",
        "test_tgt": "@Test(expectedExceptions=NullPointerException.class, groups={\"tck\"}) public void test_print_Calendrical_null() throws Exception { DateTimeFormatter test = fmt.withLocale(Locale.ENGLISH).withSymbols(DateTimeFormatSymbols.STANDARD); test.print((TemporalAccessor) null); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "print",
                "print",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "DateTimeAccessor",
                "TemporalAccessor",
                "replace"
            ],
            [
                "dateTime",
                "dateTime",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "32",
                "32",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "printTo",
                "printTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dateTime",
                "dateTime",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public String print(DateTimeAccessor dateTime) { StringBuilder buf = new StringBuilder(32); printTo(dateTime, buf); return buf.toString(); }",
        "focal_tgt": "public String print(TemporalAccessor dateTime) { StringBuilder buf = new StringBuilder(32); printTo(dateTime, buf); return buf.toString(); }",
        "test_src": "@Test(groups={\"tck\"}) public void test_print_Calendrical() throws Exception { DateTimeFormatter test = fmt.withLocale(Locale.ENGLISH).withSymbols(DateTimeFormatSymbols.STANDARD); String result = test.print(LocalDate.of(2008, 6, 30)); assertEquals(result, \"ONE30\"); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_print_Calendrical() throws Exception { DateTimeFormatter test = fmt.withLocale(Locale.ENGLISH).withSymbols(DateTimeFormatSymbols.STANDARD); String result = test.print(LocalDate.of(2008, 6, 30)); assertEquals(result, \"ONE30\"); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "print",
                "print",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "DateTimeAccessor",
                "TemporalAccessor",
                "replace"
            ],
            [
                "dateTime",
                "dateTime",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "32",
                "32",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "printTo",
                "printTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dateTime",
                "dateTime",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public DateTimeAccessor parseBest(CharSequence text, Class<?>... types) { Objects.requireNonNull(text, \"text\"); Objects.requireNonNull(types, \"types\"); if (types.length < 2) { throw new IllegalArgumentException(\"At least two types must be specified\"); } String str = text.toString(); try { DateTimeBuilder builder = parseToBuilder(str).resolve(); for (Class<?> type : types) { try { return (DateTimeAccessor) builder.build(type); } catch (RuntimeException ex) { } } throw new DateTimeException(\"Unable to convert parsed text to any specified type: \" + Arrays.toString(types)); } catch (DateTimeParseException ex) { throw ex; } catch (RuntimeException ex) { throw createError(str, ex); } }",
        "focal_tgt": "public TemporalAccessor parseBest(CharSequence text, Class<?>... types) { Objects.requireNonNull(text, \"text\"); Objects.requireNonNull(types, \"types\"); if (types.length < 2) { throw new IllegalArgumentException(\"At least two types must be specified\"); } String str = text.toString(); try { DateTimeBuilder builder = parseToBuilder(str).resolve(); for (Class<?> type : types) { try { return (TemporalAccessor) builder.build(type); } catch (RuntimeException ex) { } } throw new DateTimeException(\"Unable to convert parsed text to any specified type: \" + Arrays.toString(types)); } catch (DateTimeParseException ex) { throw ex; } catch (RuntimeException ex) { throw createError(str, ex); } }",
        "test_src": "@Test(groups={\"tck\"}) public void test_parseBest_firstOption() throws Exception { DateTimeFormatter test = DateTimeFormatters.pattern(\"yyyy-MM-dd[ZZZ]\"); DateTimeAccessor result = test.parseBest(\"2011-06-30+03:00\", OffsetDate.class, LocalDate.class); assertEquals(result, OffsetDate.of(2011, 6, 30, ZoneOffset.ofHours(3))); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_parseBest_firstOption() throws Exception { DateTimeFormatter test = DateTimeFormatters.pattern(\"yyyy-MM-dd[ZZZ]\"); TemporalAccessor result = test.parseBest(\"2011-06-30+03:00\", OffsetDate.class, LocalDate.class); assertEquals(result, OffsetDate.of(2011, 6, 30, ZoneOffset.ofHours(3))); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "DateTimeAccessor",
                "TemporalAccessor",
                "replace"
            ],
            [
                "parseBest",
                "parseBest",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CharSequence",
                "CharSequence",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "requireNonNull",
                "requireNonNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "requireNonNull",
                "requireNonNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "At",
                "At",
                "equal"
            ],
            [
                "least",
                "least",
                "equal"
            ],
            [
                "two",
                "two",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "specified",
                "specified",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "DateTimeBuilder",
                "DateTimeBuilder",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parseToBuilder",
                "parseToBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "resolve",
                "resolve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "DateTimeAccessor",
                "TemporalAccessor",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "DateTimeException",
                "DateTimeException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Unable",
                "Unable",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "parsed",
                "parsed",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "any",
                "any",
                "equal"
            ],
            [
                "specified",
                "specified",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "Arrays",
                "Arrays",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "types",
                "types",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "DateTimeParseException",
                "DateTimeParseException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "createError",
                "createError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean matchesCalendrical(Calendrical calendrical) { return this.equals(calendrical.get(rule)); }",
        "focal_tgt": "public boolean matches(Calendrical calendrical) { return this.equals(calendrical.get(rule)); }",
        "test_src": "@Test(groups={\"tck\"}) public void test_matchesCalendrical_ymd_date() { LocalDate date = LocalDate.of(2008, 6, 30); assertEquals(DateTimeField.of(YEAR, 2008).matchesCalendrical(date), true); assertEquals(DateTimeField.of(YEAR, 2006).matchesCalendrical(date), false); assertEquals(DateTimeField.of(MONTH_OF_YEAR, 6).matchesCalendrical(date), true); assertEquals(DateTimeField.of(MONTH_OF_YEAR, 7).matchesCalendrical(date), false); assertEquals(DateTimeField.of(MONTH_OF_YEAR, -1).matchesCalendrical(date), false); assertEquals(DateTimeField.of(DAY_OF_MONTH, 30).matchesCalendrical(date), true); assertEquals(DateTimeField.of(DAY_OF_MONTH, 12).matchesCalendrical(date), false); assertEquals(DateTimeField.of(DAY_OF_WEEK, 1).matchesCalendrical(date), true); assertEquals(DateTimeField.of(DAY_OF_WEEK, 2).matchesCalendrical(date), false); assertEquals(DateTimeField.of(HOUR_OF_DAY, 2).matchesCalendrical(date), false); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_matches() { LocalDate date = LocalDate.of(2008, 6, 30); assertEquals(DateTimeField.of(YEAR, 2008).matches(DateTimeField.of(YEAR, 2008)), true); assertEquals(DateTimeField.of(YEAR, 2008).matches(DateTimeField.of(YEAR, 2012)), false); assertEquals(DateTimeField.of(YEAR, 2008).matches(DateTimeField.of(MONTH_OF_YEAR, 2008)), false); assertEquals(DateTimeField.of(YEAR, 2008).matches(date), true); assertEquals(DateTimeField.of(YEAR, 2012).matches(date), false); assertEquals(DateTimeField.of(MONTH_OF_YEAR, 6).matches(date), true); assertEquals(DateTimeField.of(MONTH_OF_YEAR, 7).matches(date), false); assertEquals(DateTimeField.of(MONTH_OF_YEAR, -1).matches(date), false); assertEquals(DateTimeField.of(DAY_OF_MONTH, 30).matches(date), true); assertEquals(DateTimeField.of(DAY_OF_MONTH, 12).matches(date), false); assertEquals(DateTimeField.of(DAY_OF_WEEK, 1).matches(date), true); assertEquals(DateTimeField.of(DAY_OF_WEEK, 2).matches(date), false); assertEquals(DateTimeField.of(HOUR_OF_DAY, 2).matches(date), false); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "matchesCalendrical",
                "matches",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Calendrical",
                "Calendrical",
                "equal"
            ],
            [
                "calendrical",
                "calendrical",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "calendrical",
                "calendrical",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "rule",
                "rule",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public DateTimeFormatterBuilder appendValueReduced( TemporalField field, int width, int baseValue) { Objects.requireNonNull(field, \"field\"); ReducedPrinterParser pp = new ReducedPrinterParser(field, width, baseValue); appendFixedWidth(width, pp); return this; }",
        "focal_tgt": "public DateTimeFormatterBuilder appendValueReduced(TemporalField field, int width, int maxWidth, int baseValue) { Objects.requireNonNull(field, \"field\"); ReducedPrinterParser pp = new ReducedPrinterParser(field, width, maxWidth, baseValue); if (width == maxWidth) { appendFixedWidth(width, pp); } else { appendInternal(pp); } return this; }",
        "test_src": "@Test(expectedExceptions=NullPointerException.class) public void test_appendValueReduced_null() throws Exception { builder.appendValueReduced(null, 2, 2000); }",
        "test_tgt": "@Test(expectedExceptions=NullPointerException.class) public void test_appendValueReduced_null() throws Exception { builder.appendValueReduced(null, 2, 2, 2000); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "DateTimeFormatterBuilder",
                "DateTimeFormatterBuilder",
                "equal"
            ],
            [
                "appendValueReduced",
                "appendValueReduced",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TemporalField",
                "TemporalField",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "baseValue",
                "baseValue",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "requireNonNull",
                "requireNonNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ReducedPrinterParser",
                "ReducedPrinterParser",
                "equal"
            ],
            [
                "pp",
                "pp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ReducedPrinterParser",
                "ReducedPrinterParser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "baseValue",
                "baseValue",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "width",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "appendFixedWidth",
                "appendFixedWidth",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pp",
                "pp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "appendInternal",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pp",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public DateTimeFormatterBuilder appendValueReduced( TemporalField field, int width, int baseValue) { Objects.requireNonNull(field, \"field\"); ReducedPrinterParser pp = new ReducedPrinterParser(field, width, baseValue); appendFixedWidth(width, pp); return this; }",
        "focal_tgt": "public DateTimeFormatterBuilder appendValueReduced(TemporalField field, int width, int maxWidth, int baseValue) { Objects.requireNonNull(field, \"field\"); ReducedPrinterParser pp = new ReducedPrinterParser(field, width, maxWidth, baseValue); if (width == maxWidth) { appendFixedWidth(width, pp); } else { appendInternal(pp); } return this; }",
        "test_src": "@Test public void test_appendValueReduced() throws Exception { builder.appendValueReduced(YEAR, 2, 2000); DateTimeFormatter f = builder.toFormatter(); assertEquals(f.toString(), \"ReducedValue(Year,2,2000)\"); TemporalAccessor cal = f.parseUnresolved(\"12\", new ParsePosition(0)); assertEquals(cal.get(YEAR), 2012); }",
        "test_tgt": "@Test public void test_appendValueReduced() throws Exception { builder.appendValueReduced(YEAR, 2, 2, 2000); DateTimeFormatter f = builder.toFormatter(); assertEquals(f.toString(), \"ReducedValue(Year,2,2000)\"); TemporalAccessor cal = f.parseUnresolved(\"12\", new ParsePosition(0)); assertEquals(cal.get(YEAR), 2012); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "DateTimeFormatterBuilder",
                "DateTimeFormatterBuilder",
                "equal"
            ],
            [
                "appendValueReduced",
                "appendValueReduced",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TemporalField",
                "TemporalField",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "baseValue",
                "baseValue",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "requireNonNull",
                "requireNonNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ReducedPrinterParser",
                "ReducedPrinterParser",
                "equal"
            ],
            [
                "pp",
                "pp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ReducedPrinterParser",
                "ReducedPrinterParser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "field",
                "field",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "baseValue",
                "baseValue",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "width",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "maxWidth",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "appendFixedWidth",
                "appendFixedWidth",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pp",
                "pp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "appendInternal",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pp",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Set<String> getAvailableGroupIds() { return new HashSet<>(GROUPS.keySet()); }",
        "focal_tgt": "public static Set<String> getAvailableZoneIds() { return new HashSet<>(ZONES.keySet()); }",
        "test_src": "@Test(groups={\"tck\"}) public void test_getAvailableGroupIds() { Set<String> groups = ZoneRulesProvider.getAvailableGroupIds(); assertEquals(groups.contains(\"TZDB\"), true); groups.clear(); assertEquals(groups.size(), 0); Set<String> groups2 = ZoneRulesProvider.getAvailableGroupIds(); assertEquals(groups2.contains(\"TZDB\"), true); }",
        "test_tgt": "@Test(groups={\"tck\"}) public void test_getAvailableGroupIds() { Set<String> zoneIds = ZoneRulesProvider.getAvailableZoneIds(); assertEquals(zoneIds.contains(\"Europe/London\"), true); zoneIds.clear(); assertEquals(zoneIds.size(), 0); Set<String> zoneIds2 = ZoneRulesProvider.getAvailableZoneIds(); assertEquals(zoneIds2.contains(\"Europe/London\"), true); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getAvailableGroupIds",
                "getAvailableZoneIds",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashSet",
                "HashSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "GROUPS",
                "ZONES",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "keySet",
                "keySet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean isSPNegoMessage() { if (this.isNull()) { return false; } final byte[] tokenBytes = this.getTokenBytes(); return SPNegoMessage.isSPNegoMessage(tokenBytes); }",
        "focal_tgt": "public boolean isSPNegTokenInitMessage() { if (this.isNull()) { return false; } final byte[] tokenBytes = this.getTokenBytes(); return SPNegoMessage.isNegTokenInit(tokenBytes); }",
        "test_src": "@Test public void testIsSPNegoMessage() { final SimpleHttpRequest request = new SimpleHttpRequest(); final AuthorizationHeader header = new AuthorizationHeader(request); Assert.assertFalse(header.isSPNegoMessage()); request.addHeader(\"Authorization\", \"\"); Assert.assertFalse(header.isSPNegoMessage()); request.addHeader( \"Authorization\", \"Negotiate YHYGBisGAQUFAqBsMGqgMDAuBgorBgEEAYI3AgIKBgkqhkiC9xIBAgIGCSqGSIb3EgECAgYKKwYBBAGCNwICHqI2BDROVExNU1NQAAEAAACXsgjiAwADADEAAAAJAAkAKAAAAAYBsR0AAAAPR0xZQ0VSSU5FU0FE\"); Assert.assertTrue(header.isSPNegoMessage()); }",
        "test_tgt": "@Test public void testIsSPNegTokenInitMessage() { final SimpleHttpRequest request = new SimpleHttpRequest(); final AuthorizationHeader header = new AuthorizationHeader(request); Assert.assertFalse(header.isSPNegTokenInitMessage()); request.addHeader(\"Authorization\", \"\"); Assert.assertFalse(header.isSPNegTokenInitMessage()); request.addHeader( \"Authorization\", \"Negotiate YHYGBisGAQUFAqBsMGqgMDAuBgorBgEEAYI3AgIKBgkqhkiC9xIBAgIGCSqGSIb3EgECAgYKKwYBBAGCNwICHqI2BDROVExNU1NQAAEAAACXsgjiAwADADEAAAAJAAkAKAAAAAYBsR0AAAAPR0xZQ0VSSU5FU0FE\"); Assert.assertTrue(header.isSPNegTokenInitMessage()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "isSPNegoMessage",
                "isSPNegTokenInitMessage",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isNull",
                "isNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "tokenBytes",
                "tokenBytes",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTokenBytes",
                "getTokenBytes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "SPNegoMessage",
                "SPNegoMessage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isSPNegoMessage",
                "isNegTokenInit",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tokenBytes",
                "tokenBytes",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@RequiresSession public List<HostVersionEntity> findByClusterStackAndVersion(String clusterName, String stack, String version) { final TypedQuery<HostVersionEntity> query = entityManagerProvider.get().createNamedQuery(\"hostVersionByClusterAndStackAndVersion\", HostVersionEntity.class); query.setParameter(\"clusterName\", clusterName); query.setParameter(\"stack\", stack); query.setParameter(\"version\", version); return daoUtils.selectList(query); }",
        "focal_tgt": "@RequiresSession public List<HostVersionEntity> findByClusterStackAndVersion( String clusterName, StackId stackId, String version) { final TypedQuery<HostVersionEntity> query = entityManagerProvider.get().createNamedQuery(\"hostVersionByClusterAndStackAndVersion\", HostVersionEntity.class); query.setParameter(\"clusterName\", clusterName); query.setParameter(\"stackName\", stackId.getStackName()); query.setParameter(\"stackVersion\", stackId.getStackVersion()); query.setParameter(\"version\", version); return daoUtils.selectList(query); }",
        "test_src": "@Test public void testFindByClusterStackAndVersion() { Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", \"HDP-2.2\", \"2.2.0.0-995\").size()); Assert.assertEquals(3, hostVersionDAO.findAll().size()); addMoreVersions(); Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", \"HDP-2.2\", \"2.2.0.1-996\").size()); Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", \"HDP-2.2\", \"2.2.1.0-500\").size()); Assert.assertEquals(9, hostVersionDAO.findAll().size()); }",
        "test_tgt": "@Test public void testFindByClusterStackAndVersion() { Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", HDP_22_STACK, \"2.2.0.0-995\").size()); Assert.assertEquals(3, hostVersionDAO.findAll().size()); addMoreVersions(); Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", HDP_22_STACK, \"2.2.0.1-996\").size()); Assert.assertEquals(3, hostVersionDAO.findByClusterStackAndVersion(\"test_cluster1\", HDP_22_STACK, \"2.2.1.0-500\").size()); Assert.assertEquals(9, hostVersionDAO.findAll().size()); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "RequiresSession",
                "RequiresSession",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "HostVersionEntity",
                "HostVersionEntity",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "findByClusterStackAndVersion",
                "findByClusterStackAndVersion",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "clusterName",
                "clusterName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "stack",
                "StackId",
                "replace"
            ],
            [
                "",
                "stackId",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "TypedQuery",
                "TypedQuery",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "HostVersionEntity",
                "HostVersionEntity",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "entityManagerProvider",
                "entityManagerProvider",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createNamedQuery",
                "createNamedQuery",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "hostVersionByClusterAndStackAndVersion",
                "hostVersionByClusterAndStackAndVersion",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "HostVersionEntity",
                "HostVersionEntity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setParameter",
                "setParameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "clusterName",
                "clusterName",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "clusterName",
                "clusterName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setParameter",
                "setParameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "stack",
                "stackName",
                "replace"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stack",
                "stackId",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStackName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setParameter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "stackVersion",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stackId",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStackVersion",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setParameter",
                "setParameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "daoUtils",
                "daoUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "selectList",
                "selectList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@RequiresSession public List<RepositoryVersionEntity> findByStack(String stack) { final TypedQuery<RepositoryVersionEntity> query = entityManagerProvider.get().createNamedQuery(\"repositoryVersionByStack\", RepositoryVersionEntity.class); query.setParameter(\"stack\", stack); return daoUtils.selectList(query); }",
        "focal_tgt": "@RequiresSession public List<RepositoryVersionEntity> findByStack(StackId stackId) { final TypedQuery<RepositoryVersionEntity> query = entityManagerProvider.get().createNamedQuery(\"repositoryVersionByStack\", RepositoryVersionEntity.class); query.setParameter(\"stackName\", stackId.getStackName()); query.setParameter(\"stackVersion\", stackId.getStackVersion()); return daoUtils.selectList(query); }",
        "test_src": "@Test public void testFindByStack() { createSingleRecord(); Assert.assertEquals(0, repositoryVersionDAO.findByStack(\"non existing\").size()); Assert.assertEquals(1, repositoryVersionDAO.findByStack(\"stack\").size()); }",
        "test_tgt": "@Test public void testFindByStack() { createSingleRecord(); Assert.assertEquals(0, repositoryVersionDAO.findByStack(BAD_STACK).size()); Assert.assertEquals(1, repositoryVersionDAO.findByStack(HDP_206).size()); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "RequiresSession",
                "RequiresSession",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "RepositoryVersionEntity",
                "RepositoryVersionEntity",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "findByStack",
                "findByStack",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "stack",
                "StackId",
                "replace"
            ],
            [
                "",
                "stackId",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "TypedQuery",
                "TypedQuery",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "RepositoryVersionEntity",
                "RepositoryVersionEntity",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "entityManagerProvider",
                "entityManagerProvider",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createNamedQuery",
                "createNamedQuery",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "repositoryVersionByStack",
                "repositoryVersionByStack",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "RepositoryVersionEntity",
                "RepositoryVersionEntity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setParameter",
                "setParameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "stack",
                "stackName",
                "replace"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stack",
                "stackId",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStackName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setParameter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "stackVersion",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stackId",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStackVersion",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "daoUtils",
                "daoUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "selectList",
                "selectList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static boolean[] hexDigitToBoolArray(char hexDigit) { switch (hexDigit) { case '0': return new boolean[]{false, false, false, false}; case '1': return new boolean[]{true, false, false, false}; case '2': return new boolean[]{false, true, false, false}; case '3': return new boolean[]{true, true, false, false}; case '4': return new boolean[]{false, false, true, false}; case '5': return new boolean[]{true, false, true, false}; case '6': return new boolean[]{false, true, true, false}; case '7': return new boolean[]{true, true, true, false}; case '8': return new boolean[]{false, false, false, true}; case '9': return new boolean[]{true, false, false, true}; case 'a': case 'A': return new boolean[]{false, true, false, true}; case 'b': case 'B': return new boolean[]{true, true, false, true}; case 'c': case 'C': return new boolean[]{false, false, true, true}; case 'd': case 'D': return new boolean[]{true, false, true, true}; case 'e': case 'E': return new boolean[]{false, true, true, true}; case 'f': case 'F': return new boolean[]{true, true, true, true}; default: throw new IllegalArgumentException(\"Cannot interpret '\" + hexDigit + \"' as a hexadecimal digit\"); } }",
        "focal_tgt": "public static boolean[] hexDigitToBinary(char hexDigit) { switch (hexDigit) { case '0': return new boolean[]{false, false, false, false}; case '1': return new boolean[]{true, false, false, false}; case '2': return new boolean[]{false, true, false, false}; case '3': return new boolean[]{true, true, false, false}; case '4': return new boolean[]{false, false, true, false}; case '5': return new boolean[]{true, false, true, false}; case '6': return new boolean[]{false, true, true, false}; case '7': return new boolean[]{true, true, true, false}; case '8': return new boolean[]{false, false, false, true}; case '9': return new boolean[]{true, false, false, true}; case 'a': case 'A': return new boolean[]{false, true, false, true}; case 'b': case 'B': return new boolean[]{true, true, false, true}; case 'c': case 'C': return new boolean[]{false, false, true, true}; case 'd': case 'D': return new boolean[]{true, false, true, true}; case 'e': case 'E': return new boolean[]{false, true, true, true}; case 'f': case 'F': return new boolean[]{true, true, true, true}; default: throw new IllegalArgumentException(\"Cannot interpret '\" + hexDigit + \"' as a hexadecimal digit\"); } }",
        "test_src": "@Test public void testHexDigitToBoolArray() { assertBoolArrayEquals( new boolean[]{false, false, false, false}, Conversion.hexDigitToBoolArray('0')); assertBoolArrayEquals( new boolean[]{true, false, false, false}, Conversion.hexDigitToBoolArray('1')); assertBoolArrayEquals( new boolean[]{false, true, false, false}, Conversion.hexDigitToBoolArray('2')); assertBoolArrayEquals( new boolean[]{true, true, false, false}, Conversion.hexDigitToBoolArray('3')); assertBoolArrayEquals( new boolean[]{false, false, true, false}, Conversion.hexDigitToBoolArray('4')); assertBoolArrayEquals( new boolean[]{true, false, true, false}, Conversion.hexDigitToBoolArray('5')); assertBoolArrayEquals( new boolean[]{false, true, true, false}, Conversion.hexDigitToBoolArray('6')); assertBoolArrayEquals( new boolean[]{true, true, true, false}, Conversion.hexDigitToBoolArray('7')); assertBoolArrayEquals( new boolean[]{false, false, false, true}, Conversion.hexDigitToBoolArray('8')); assertBoolArrayEquals( new boolean[]{true, false, false, true}, Conversion.hexDigitToBoolArray('9')); assertBoolArrayEquals( new boolean[]{false, true, false, true}, Conversion.hexDigitToBoolArray('A')); assertBoolArrayEquals( new boolean[]{false, true, false, true}, Conversion.hexDigitToBoolArray('a')); assertBoolArrayEquals( new boolean[]{true, true, false, true}, Conversion.hexDigitToBoolArray('B')); assertBoolArrayEquals( new boolean[]{true, true, false, true}, Conversion.hexDigitToBoolArray('b')); assertBoolArrayEquals( new boolean[]{false, false, true, true}, Conversion.hexDigitToBoolArray('C')); assertBoolArrayEquals( new boolean[]{false, false, true, true}, Conversion.hexDigitToBoolArray('c')); assertBoolArrayEquals( new boolean[]{true, false, true, true}, Conversion.hexDigitToBoolArray('D')); assertBoolArrayEquals( new boolean[]{true, false, true, true}, Conversion.hexDigitToBoolArray('d')); assertBoolArrayEquals( new boolean[]{false, true, true, true}, Conversion.hexDigitToBoolArray('E')); assertBoolArrayEquals( new boolean[]{false, true, true, true}, Conversion.hexDigitToBoolArray('e')); assertBoolArrayEquals( new boolean[]{true, true, true, true}, Conversion.hexDigitToBoolArray('F')); assertBoolArrayEquals( new boolean[]{true, true, true, true}, Conversion.hexDigitToBoolArray('f')); try { Conversion.hexDigitToBoolArray('G'); fail(\"Thrown \" + IllegalArgumentException.class.getName() + \" expected\"); } catch (final IllegalArgumentException e) { } }",
        "test_tgt": "@Test public void testHexDigitToBinary() { assertBinaryEquals( new boolean[]{false, false, false, false}, Conversion.hexDigitToBinary('0')); assertBinaryEquals( new boolean[]{true, false, false, false}, Conversion.hexDigitToBinary('1')); assertBinaryEquals( new boolean[]{false, true, false, false}, Conversion.hexDigitToBinary('2')); assertBinaryEquals( new boolean[]{true, true, false, false}, Conversion.hexDigitToBinary('3')); assertBinaryEquals( new boolean[]{false, false, true, false}, Conversion.hexDigitToBinary('4')); assertBinaryEquals( new boolean[]{true, false, true, false}, Conversion.hexDigitToBinary('5')); assertBinaryEquals( new boolean[]{false, true, true, false}, Conversion.hexDigitToBinary('6')); assertBinaryEquals( new boolean[]{true, true, true, false}, Conversion.hexDigitToBinary('7')); assertBinaryEquals( new boolean[]{false, false, false, true}, Conversion.hexDigitToBinary('8')); assertBinaryEquals( new boolean[]{true, false, false, true}, Conversion.hexDigitToBinary('9')); assertBinaryEquals( new boolean[]{false, true, false, true}, Conversion.hexDigitToBinary('A')); assertBinaryEquals( new boolean[]{false, true, false, true}, Conversion.hexDigitToBinary('a')); assertBinaryEquals( new boolean[]{true, true, false, true}, Conversion.hexDigitToBinary('B')); assertBinaryEquals( new boolean[]{true, true, false, true}, Conversion.hexDigitToBinary('b')); assertBinaryEquals( new boolean[]{false, false, true, true}, Conversion.hexDigitToBinary('C')); assertBinaryEquals( new boolean[]{false, false, true, true}, Conversion.hexDigitToBinary('c')); assertBinaryEquals( new boolean[]{true, false, true, true}, Conversion.hexDigitToBinary('D')); assertBinaryEquals( new boolean[]{true, false, true, true}, Conversion.hexDigitToBinary('d')); assertBinaryEquals( new boolean[]{false, true, true, true}, Conversion.hexDigitToBinary('E')); assertBinaryEquals( new boolean[]{false, true, true, true}, Conversion.hexDigitToBinary('e')); assertBinaryEquals( new boolean[]{true, true, true, true}, Conversion.hexDigitToBinary('F')); assertBinaryEquals( new boolean[]{true, true, true, true}, Conversion.hexDigitToBinary('f')); try { Conversion.hexDigitToBinary('G'); fail(\"Thrown \" + IllegalArgumentException.class.getName() + \" expected\"); } catch (final IllegalArgumentException e) { } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "hexDigitToBoolArray",
                "hexDigitToBinary",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "char",
                "char",
                "equal"
            ],
            [
                "hexDigit",
                "hexDigit",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "switch",
                "switch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hexDigit",
                "hexDigit",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "5",
                "5",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "6",
                "6",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "7",
                "7",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "8",
                "8",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "9",
                "9",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "D",
                "D",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "E",
                "E",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "F",
                "F",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cannot",
                "Cannot",
                "equal"
            ],
            [
                "interpret",
                "interpret",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "hexDigit",
                "hexDigit",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "as",
                "as",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "hexadecimal",
                "hexadecimal",
                "equal"
            ],
            [
                "digit",
                "digit",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "private static SSLEngineFactory createSSLEngineFactory( final Configuration config, final boolean clientMode) throws Exception { final SSLContext sslContext = clientMode ? createSSLClientContext(config) : createSSLServerContext(config); checkState(sslContext != null, \"%s it not enabled\", SecurityOptions.SSL_ENABLED.key()); return new SSLEngineFactory( sslContext, getEnabledProtocols(config), getEnabledCipherSuites(config), clientMode); }",
        "focal_tgt": "public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception { SSLContext sslContext = createInternalSSLContext(config); if (sslContext == null) { throw new IllegalConfigurationException(\"SSL is not enabled for internal communication.\"); } return new SSLEngineFactory( sslContext, getEnabledProtocols(config), getEnabledCipherSuites(config), false); }",
        "test_src": "@Test public void testCreateSSLEngineFactory() throws Exception { Configuration serverConfig = new Configuration(); serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true); serverConfig.setString(SecurityOptions.SSL_KEYSTORE, \"src/test/resources/local127.keystore\"); serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, \"password\"); serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, \"password\"); serverConfig.setString(SecurityOptions.SSL_PROTOCOL, \"TLSv1\"); serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\"); final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createServerSSLEngineFactory(serverConfig); final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine(); assertThat( Arrays.asList(sslEngine.getEnabledProtocols()), contains(\"TLSv1\")); assertThat( Arrays.asList(sslEngine.getEnabledCipherSuites()), containsInAnyOrder(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\")); }",
        "test_tgt": "@Test public void testCreateSSLEngineFactory() throws Exception { Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores(); serverConfig.setString(SecurityOptions.SSL_PROTOCOL, \"TLSv1\"); serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\"); final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createInternalServerSSLEngineFactory(serverConfig); final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine(); assertEquals(1, sslEngine.getEnabledProtocols().length); assertEquals(\"TLSv1\", sslEngine.getEnabledProtocols()[0]); assertEquals(2, sslEngine.getEnabledCipherSuites().length); assertThat(sslEngine.getEnabledCipherSuites(), arrayContainingInAnyOrder( \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\")); }",
        "label": 1,
        "edit_seq": [
            [
                "private",
                "public",
                "replace"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "SSLEngineFactory",
                "SSLEngineFactory",
                "equal"
            ],
            [
                "createSSLEngineFactory",
                "createInternalServerSSLEngineFactory",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "boolean",
                "",
                "delete"
            ],
            [
                "clientMode",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "SSLContext",
                "SSLContext",
                "equal"
            ],
            [
                "sslContext",
                "sslContext",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "clientMode",
                "",
                "delete"
            ],
            [
                "?",
                "",
                "delete"
            ],
            [
                "createSSLClientContext",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "config",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "createSSLServerContext",
                "createInternalSSLContext",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkState",
                "if",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sslContext",
                "sslContext",
                "equal"
            ],
            [
                "!",
                "=",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ",",
                ")",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "IllegalConfigurationException",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "it",
                "SSL",
                "replace"
            ],
            [
                "",
                "is",
                "insert"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "enabled",
                "enabled",
                "equal"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "internal",
                "insert"
            ],
            [
                "",
                "communication",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "SecurityOptions",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "SSL_ENABLED",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "key",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "SSLEngineFactory",
                "SSLEngineFactory",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sslContext",
                "sslContext",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "getEnabledProtocols",
                "getEnabledProtocols",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "getEnabledCipherSuites",
                "getEnabledCipherSuites",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "clientMode",
                "false",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public JobSnapshottingSettings getSnapshottingSettings() { return jobSnapshottingSettings; }",
        "focal_tgt": "public JobCheckpointingSettings getSnapshottingSettings() { return jobCheckpointingSettings; }",
        "test_src": "@Test public void testGetSnapshottingSettings() throws Exception { ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class); when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID()); when(jobVertex.getParallelism()).thenReturn(1); JobSnapshottingSettings snapshottingSettings = new JobSnapshottingSettings( Collections.singletonList(new JobVertexID()), Collections.singletonList(new JobVertexID()), Collections.singletonList(new JobVertexID()), 181238123L, 19191992L, 191929L, 123, ExternalizedCheckpointSettings.none(), null, false); CheckpointStatsTracker tracker = new CheckpointStatsTracker( 0, Collections.singletonList(jobVertex), snapshottingSettings, new UnregisteredMetricsGroup()); assertEquals(snapshottingSettings, tracker.getSnapshottingSettings()); }",
        "test_tgt": "@Test public void testGetSnapshottingSettings() throws Exception { ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class); when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID()); when(jobVertex.getParallelism()).thenReturn(1); JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings( Collections.singletonList(new JobVertexID()), Collections.singletonList(new JobVertexID()), Collections.singletonList(new JobVertexID()), 181238123L, 19191992L, 191929L, 123, ExternalizedCheckpointSettings.none(), null, false); CheckpointStatsTracker tracker = new CheckpointStatsTracker( 0, Collections.singletonList(jobVertex), snapshottingSettings, new UnregisteredMetricsGroup()); assertEquals(snapshottingSettings, tracker.getSnapshottingSettings()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "JobSnapshottingSettings",
                "JobCheckpointingSettings",
                "replace"
            ],
            [
                "getSnapshottingSettings",
                "getSnapshottingSettings",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "jobSnapshottingSettings",
                "jobCheckpointingSettings",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public List<Output> getInputs() { return new ArrayList<Output>(this.inputs); }",
        "focal_tgt": "public List<Operator<?>.Output> getInputs() { return new ArrayList<Operator<?>.Output>(this.inputs); }",
        "test_src": "@Test public void testGetInputs() { final Operator input1 = new OpImpl(0); final Operator input2 = new OpImpl(1); final Operator fixture = new OpImpl(0).withInputs(input1, input2); final List<Operator.Output> result = fixture.getInputs(); assertNotNull(result); assertEquals(2, result.size()); assertEquals(Arrays.asList(input1.getOutput(0), input2.getOutput(0)), result); }",
        "test_tgt": "@Test public void testGetInputs() { final Operator<?> input1 = new OpImpl(0); final Operator<?> input2 = new OpImpl(1); final Operator<?> fixture = new OpImpl(0).withInputs(input1, input2); final List<Operator<?>.Output> result = fixture.getInputs(); assertNotNull(result); assertEquals(2, result.size()); assertEquals(Arrays.asList(input1.getOutput(0), input2.getOutput(0)), result); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "",
                "Operator",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getInputs",
                "getInputs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "",
                "Operator",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "inputs",
                "inputs",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void clearAndPut(@Nonnull Runnable shutdownAction) { lock.lock(); try { int localCount = count; while (localCount > 0) { ringBuffer[headIndex] = null; headIndex = increaseIndexWithWrapAround(headIndex); --localCount; } count = 0; putInternal(shutdownAction); } finally { lock.unlock(); } }",
        "focal_tgt": "@Nonnull @Override public List<Runnable> clearAndPut(@Nonnull Runnable priorityLetter) throws MailboxStateException { ArrayList<Runnable> droppedLetters = new ArrayList<>(capacity()); lock.lock(); try { checkPutStateConditions(); dropAllLetters(droppedLetters); putTailInternal(priorityLetter); } finally { lock.unlock(); } return droppedLetters; }",
        "test_src": "@Test public void testClearAndPut() { for (int i = 0; i < CAPACITY; ++i) { Assert.assertTrue(mailbox.tryPutMail(() -> {})); } mailbox.clearAndPut(POISON_LETTER); Assert.assertTrue(mailbox.hasMail()); Assert.assertEquals(POISON_LETTER, mailbox.tryTakeMail().get()); Assert.assertFalse(mailbox.hasMail()); }",
        "test_tgt": "@Test public void testClearAndPut() throws Exception { Runnable letterInstance = () -> {}; for (int i = 0; i < CAPACITY; ++i) { Assert.assertTrue(mailbox.tryPutMail(letterInstance)); } List<Runnable> droppedLetters = mailbox.clearAndPut(POISON_LETTER); Assert.assertTrue(mailbox.hasMail()); Assert.assertEquals(POISON_LETTER, mailbox.tryTakeMail().get()); Assert.assertFalse(mailbox.hasMail()); Assert.assertEquals(CAPACITY, droppedLetters.size()); }",
        "label": 1,
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Nonnull",
                "insert"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "List",
                "replace"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Runnable",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "clearAndPut",
                "clearAndPut",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nonnull",
                "Nonnull",
                "equal"
            ],
            [
                "Runnable",
                "Runnable",
                "equal"
            ],
            [
                "shutdownAction",
                "priorityLetter",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "MailboxStateException",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Runnable",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "droppedLetters",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "capacity",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "lock",
                "lock",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lock",
                "lock",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "localCount",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "count",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "while",
                "checkPutStateConditions",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "localCount",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "ringBuffer",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "headIndex",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "headIndex",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "increaseIndexWithWrapAround",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "headIndex",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "localCount",
                "dropAllLetters",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "droppedLetters",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "count",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "putInternal",
                "putTailInternal",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "shutdownAction",
                "priorityLetter",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "finally",
                "finally",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "lock",
                "lock",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "unlock",
                "unlock",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "droppedLetters",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void sleep(long millis) { try { Thread.sleep(millis); } catch (InterruptedException e) { throw new RuntimeException(e); } }",
        "focal_tgt": "public static void sleep(Duration duration) { try { Thread.sleep(duration.toMillis()); } catch (InterruptedException e) { throw new RuntimeException(e); } }",
        "test_src": "@Test public void testSleep() throws Exception { for (int i = 0; i < NUM_ATTEMPTS; i++) { long expectedSleepTimeMs = new Random().nextInt(100); long start = System.currentTimeMillis(); SysUtils.sleep(expectedSleepTimeMs); long end = System.currentTimeMillis(); Assert.assertTrue((end - start) >= expectedSleepTimeMs); } }",
        "test_tgt": "@Test public void testSleep() throws Exception { for (int i = 0; i < NUM_ATTEMPTS; i++) { Duration expectedSleepTime = Duration.ofMillis(new Random().nextInt(100)); long start = System.currentTimeMillis(); SysUtils.sleep(expectedSleepTime); long end = System.currentTimeMillis(); Assert.assertTrue((end - start) >= expectedSleepTime.toMillis()); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "sleep",
                "sleep",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "long",
                "",
                "delete"
            ],
            [
                "millis",
                "Duration",
                "replace"
            ],
            [
                "",
                "duration",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Thread",
                "Thread",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sleep",
                "sleep",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "millis",
                "duration",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toMillis",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "InterruptedException",
                "InterruptedException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@VisibleForTesting static Map<Integer, Container> getContainers( PackingPlan currentPackingPlan, int paddingPercentage, Map<String, TreeSet<Integer>> componentIndexes, TreeSet<Integer> taskIds) throws ResourceExceededException { Map<Integer, Container> containers = new HashMap<>(); Resource capacity = currentPackingPlan.getMaxContainerResources(); for (PackingPlan.ContainerPlan currentContainerPlan : currentPackingPlan.getContainers()) { Container container = new Container(currentContainerPlan.getId(), capacity, paddingPercentage); for (PackingPlan.InstancePlan instancePlan : currentContainerPlan.getInstances()) { try { addToContainer(container, instancePlan, componentIndexes, taskIds); } catch (ResourceExceededException e) { throw new ResourceExceededException(String.format( \"Insufficient container resources to add instancePlan %s to container %s\", instancePlan, container), e); } } containers.put(currentContainerPlan.getId(), container); } return containers; }",
        "focal_tgt": "@VisibleForTesting static Map<Integer, Container> getContainers( PackingPlan currentPackingPlan, Resource maxContainerResource, Resource padding, Map<String, TreeSet<Integer>> componentIndexes, TreeSet<Integer> taskIds) { Map<Integer, Container> containers = new HashMap<>(); Resource capacity = maxContainerResource; for (PackingPlan.ContainerPlan currentContainerPlan : currentPackingPlan.getContainers()) { Container container = new Container(currentContainerPlan.getId(), capacity, padding); for (PackingPlan.InstancePlan instancePlan : currentContainerPlan.getInstances()) { addToContainer(container, instancePlan, componentIndexes, taskIds); } containers.put(currentContainerPlan.getId(), container); } return containers; }",
        "test_src": "@Test public void testGetContainers() throws ResourceExceededException { int paddingPercentage = 10; Map<Integer, List<InstanceId>> packing = new HashMap<>(); packing.put(7, Arrays.asList( new InstanceId(\"spout\", 1, 0), new InstanceId(\"bolt\", 2, 0))); packing.put(3, Arrays.asList( new InstanceId(\"spout\", 3, 0), new InstanceId(\"bolt\", 4, 0))); PackingPlan packingPlan = generatePacking(packing); Map<Integer, Container> containers = PackingPlanBuilder.getContainers( packingPlan, paddingPercentage, new HashMap<String, TreeSet<Integer>>(), new TreeSet<Integer>()); assertEquals(packing.size(), containers.size()); for (Integer containerId : packing.keySet()) { Container foundContainer = containers.get(containerId); assertEquals(paddingPercentage, foundContainer.getPaddingPercentage()); assertEquals(packingPlan.getMaxContainerResources(), foundContainer.getCapacity()); assertEquals(2, foundContainer.getInstances().size()); } }",
        "test_tgt": "@Test public void testGetContainers() { Resource padding = new Resource(1.0, ByteAmount.fromGigabytes(1), ByteAmount.fromGigabytes(1)); Map<Integer, List<InstanceId>> packing = new HashMap<>(); packing.put(7, Arrays.asList( new InstanceId(\"spout\", 1, 0), new InstanceId(\"bolt\", 2, 0))); packing.put(3, Arrays.asList( new InstanceId(\"spout\", 3, 0), new InstanceId(\"bolt\", 4, 0))); PackingPlan packingPlan = generatePacking(packing); Map<Integer, Container> containers = PackingPlanBuilder.getContainers( packingPlan, packingPlan.getMaxContainerResources(), padding, new HashMap<String, TreeSet<Integer>>(), new TreeSet<Integer>()); assertEquals(packing.size(), containers.size()); for (Integer containerId : packing.keySet()) { Container foundContainer = containers.get(containerId); assertEquals(padding, foundContainer.getPadding()); assertEquals(packingPlan.getMaxContainerResources(), foundContainer.getCapacity()); assertEquals(2, foundContainer.getInstances().size()); } }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "VisibleForTesting",
                "VisibleForTesting",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Container",
                "Container",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getContainers",
                "getContainers",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PackingPlan",
                "PackingPlan",
                "equal"
            ],
            [
                "currentPackingPlan",
                "currentPackingPlan",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "paddingPercentage",
                "Resource",
                "replace"
            ],
            [
                "",
                "maxContainerResource",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Resource",
                "insert"
            ],
            [
                "",
                "padding",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TreeSet",
                "TreeSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "componentIndexes",
                "componentIndexes",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TreeSet",
                "TreeSet",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "taskIds",
                "taskIds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "",
                "delete"
            ],
            [
                "ResourceExceededException",
                "",
                "delete"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Container",
                "Container",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "containers",
                "containers",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HashMap",
                "HashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Resource",
                "Resource",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "currentPackingPlan",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getMaxContainerResources",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "maxContainerResource",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PackingPlan",
                "PackingPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ContainerPlan",
                "ContainerPlan",
                "equal"
            ],
            [
                "currentContainerPlan",
                "currentContainerPlan",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentPackingPlan",
                "currentPackingPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getContainers",
                "getContainers",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Container",
                "Container",
                "equal"
            ],
            [
                "container",
                "container",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Container",
                "Container",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentContainerPlan",
                "currentContainerPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "paddingPercentage",
                "padding",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PackingPlan",
                "PackingPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "InstancePlan",
                "InstancePlan",
                "equal"
            ],
            [
                "instancePlan",
                "instancePlan",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentContainerPlan",
                "currentContainerPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getInstances",
                "getInstances",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "addToContainer",
                "addToContainer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "container",
                "container",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "instancePlan",
                "instancePlan",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "componentIndexes",
                "componentIndexes",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "taskIds",
                "taskIds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "catch",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ResourceExceededException",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "ResourceExceededException",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Insufficient",
                "",
                "delete"
            ],
            [
                "container",
                "",
                "delete"
            ],
            [
                "resources",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "add",
                "",
                "delete"
            ],
            [
                "instancePlan",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "container",
                "",
                "delete"
            ],
            [
                "%",
                "",
                "delete"
            ],
            [
                "s",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "instancePlan",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "container",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "containers",
                "containers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentContainerPlan",
                "currentContainerPlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "container",
                "container",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "containers",
                "containers",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void assign(String variable, String expression, JSONObject message) { Object result = execute(expression, message); state.put(variable, result); }",
        "focal_tgt": "@Override public void assign(String variable, String expression, JSONObject message, Context stellarContext) { Object result = execute(expression, message, stellarContext); state.put(variable, result); }",
        "test_src": "@Test public void testAssign() { executor.assign(\"foo\", \"2\", message); Object var = executor.getState().get(\"foo\"); assertThat(var, instanceOf(Integer.class)); assertThat(var, equalTo(2)); }",
        "test_tgt": "@Test public void testAssign() { executor.assign(\"foo\", \"2\", message, Context.EMPTY_CONTEXT()); Object var = executor.getState().get(\"foo\"); assertThat(var, instanceOf(Integer.class)); assertThat(var, equalTo(2)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "assign",
                "assign",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "variable",
                "variable",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "expression",
                "expression",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "JSONObject",
                "JSONObject",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Context",
                "insert"
            ],
            [
                "",
                "stellarContext",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "execute",
                "execute",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "expression",
                "expression",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stellarContext",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "variable",
                "variable",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public <T> T execute(String expr, JSONObject message, Class<T> clazz) { Object resultObject = execute(expr, message); T result = ConversionUtils.convert(resultObject, clazz); if(result == null) { throw new IllegalArgumentException(String.format(\"Unexpected type: expected=%s, actual=%s, expression=%s\", clazz.getSimpleName(), resultObject.getClass().getSimpleName(), expr)); } return result; }",
        "focal_tgt": "@Override public <T> T execute(String expr, JSONObject message, Class<T> clazz, Context stellarContext) { Object resultObject = execute(expr, message, stellarContext); T result = ConversionUtils.convert(resultObject, clazz); if(result == null) { throw new IllegalArgumentException(String.format(\"Unexpected type: expected=%s, actual=%s, expression=%s\", clazz.getSimpleName(), resultObject.getClass().getSimpleName(), expr)); } return result; }",
        "test_src": "@Test public void testExecuteTransformation() { String actual = executor.execute(\"TO_UPPER('lowercase')\", message, String.class); assertThat(actual, equalTo(\"LOWERCASE\")); }",
        "test_tgt": "@Test public void testExecuteTransformation() { String actual = executor.execute(\"TO_UPPER('lowercase')\", message, String.class, Context.EMPTY_CONTEXT()); assertThat(actual, equalTo(\"LOWERCASE\")); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "execute",
                "execute",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "expr",
                "expr",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "JSONObject",
                "JSONObject",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "clazz",
                "clazz",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Context",
                "insert"
            ],
            [
                "",
                "stellarContext",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "resultObject",
                "resultObject",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "execute",
                "execute",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "expr",
                "expr",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stellarContext",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ConversionUtils",
                "ConversionUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "resultObject",
                "resultObject",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "clazz",
                "clazz",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Unexpected",
                "Unexpected",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "expected",
                "expected",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "actual",
                "actual",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "expression",
                "expression",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "clazz",
                "clazz",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getSimpleName",
                "getSimpleName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "resultObject",
                "resultObject",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getClass",
                "getClass",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getSimpleName",
                "getSimpleName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "expr",
                "expr",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean removePartition(PartitionWrapper partition, boolean cascade) { log.debug(\"Removing partition \" + partition + \" with cascade :\" + cascade); String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName()); if (hcatInstanceMap.containsKey(prefix)) { Map<String, PartitionsGroup> tableMap = hcatInstanceMap.get(prefix); String tableName = partition.getTableName(); if (tableMap.containsKey(tableName)) { PartitionsGroup missingPartitions = tableMap.get(tableName); if (missingPartitions != null) { missingPartitions.getPartitionsMap().remove(partition); if (cascade) { if (missingPartitions.getPartitionsMap().size() == 0) { tableMap.remove(tableName); if (tableMap.size() == 0) { hcatInstanceMap.remove(prefix); } } } return true; } else { log.warn(\"No partition entries for table [{0}]\", tableName); } } else { log.warn(\"HCat table [{0}] not found\", tableName); } } else { log.warn(\"HCat instance entry [{0}] not found\", prefix); } return false; }",
        "focal_tgt": "public boolean removePartition(PartitionWrapper partition, boolean cascade) throws MetadataServiceException { log.debug(\"Removing partition \" + partition + \" with cascade :\" + cascade); String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName()); if (hcatInstanceMap.containsKey(prefix)) { Map<String, PartitionsGroup> tableMap = hcatInstanceMap.get(prefix); String tableName = partition.getTableName(); if (tableMap.containsKey(tableName)) { PartitionsGroup missingPartitions = tableMap.get(tableName); if (missingPartitions != null) { missingPartitions.getPartitionsMap().remove(partition); if (cascade) { if (missingPartitions.getPartitionsMap().size() == 0) { tableMap.remove(tableName); if (tableMap.size() == 0) { hcatInstanceMap.remove(prefix); } _deregisterMessageReceiver(partition); } } return true; } else { log.warn(\"No partition entries for table [{0}]\", tableName); } } else { log.warn(\"HCat table [{0}] not found\", tableName); } } else { log.warn(\"HCat instance entry [{0}] not found\", prefix); } return false; }",
        "test_src": "@Test public void testRemovePartition() throws MetadataServiceException, URISyntaxException { Services services = Services.get(); PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class); String newHCatDependency = \"hcat://hcat.yahoo.com:5080/mydb/clicks/?datastamp=12&region=us\"; String actionId = \"myAction\"; pdms.addMissingPartition(newHCatDependency, actionId); HCatURI hcatUri = new HCatURI(newHCatDependency); Map<String, PartitionsGroup> tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" + hcatUri.getDb()); assertNotNull(tablePartitionsMap); assertTrue(tablePartitionsMap.containsKey(\"clicks\")); PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable()); assertNotNull(missingPartitions); pdms.removePartition(newHCatDependency, false); assertFalse(missingPartitions.getPartitionsMap().containsKey(hcatUri.getPartitionMap())); pdms.addMissingPartition(newHCatDependency, actionId); assertNotNull(missingPartitions); pdms.removePartition(newHCatDependency); assertFalse(pdms.getHCatMap().containsKey(hcatUri.getTable())); }",
        "test_tgt": "@Test public void testRemovePartition() throws Exception { Services services = Services.get(); PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class); String newHCatDependency = \"hcat://hcat.yahoo.com:5080/database/mydb/table/clicks/partition/datastamp=12,region=us\"; String actionId = \"myAction\"; pdms.addMissingPartition(newHCatDependency, actionId); HCatURI hcatUri = new HCatURI(newHCatDependency); Map<String, PartitionsGroup> tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" + hcatUri.getDb()); assertNotNull(tablePartitionsMap); assertTrue(tablePartitionsMap.containsKey(\"clicks\")); PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable()); assertNotNull(missingPartitions); pdms.removePartition(newHCatDependency, false); assertFalse(missingPartitions.getPartitionsMap().containsKey(hcatUri.getPartitionMap())); pdms.addMissingPartition(newHCatDependency, actionId); assertNotNull(missingPartitions); pdms.removePartition(newHCatDependency); assertFalse(pdms.getHCatMap().containsKey(hcatUri.getTable())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "removePartition",
                "removePartition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PartitionWrapper",
                "PartitionWrapper",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "cascade",
                "cascade",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "MetadataServiceException",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Removing",
                "Removing",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "cascade",
                "cascade",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "cascade",
                "cascade",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "PartitionWrapper",
                "PartitionWrapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "makePrefix",
                "makePrefix",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getServerName",
                "getServerName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getDbName",
                "getDbName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hcatInstanceMap",
                "hcatInstanceMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "containsKey",
                "containsKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "PartitionsGroup",
                "PartitionsGroup",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "tableMap",
                "tableMap",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "hcatInstanceMap",
                "hcatInstanceMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTableName",
                "getTableName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tableMap",
                "tableMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "containsKey",
                "containsKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "PartitionsGroup",
                "PartitionsGroup",
                "equal"
            ],
            [
                "missingPartitions",
                "missingPartitions",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "tableMap",
                "tableMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "missingPartitions",
                "missingPartitions",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "missingPartitions",
                "missingPartitions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPartitionsMap",
                "getPartitionsMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "cascade",
                "cascade",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "missingPartitions",
                "missingPartitions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPartitionsMap",
                "getPartitionsMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "tableMap",
                "tableMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tableMap",
                "tableMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "hcatInstanceMap",
                "hcatInstanceMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "_deregisterMessageReceiver",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "partition",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                "entries",
                "entries",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "HCat",
                "HCat",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tableName",
                "tableName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "HCat",
                "HCat",
                "equal"
            ],
            [
                "instance",
                "instance",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "protected static final ServiceRequestPathInfo parseServiceRequestPath(String pathInfo) { ServiceRequestPathInfo info = new ServiceRequestPathInfo(); if (pathInfo != null) { String[] split = pathInfo.split(\"/\"); if (split.length >= 4) { info.orgId = split[1]; info.serviceId = split[2]; info.serviceVersion = split[3]; if (split.length > 4) { StringBuilder resource = new StringBuilder(); for (int idx = 4; idx < split.length; idx++) { resource.append('/'); resource.append(split[idx]); } if (pathInfo.endsWith(\"/\")) { resource.append('/'); } info.resource = resource.toString(); } } } return info; }",
        "focal_tgt": "protected static final ServiceRequestPathInfo parseServiceRequestPath(HttpServletRequest request) { String pathInfo = request.getPathInfo(); ServiceRequestPathInfo info = new ServiceRequestPathInfo(); boolean versionFound = false; String apiVersionHeader = request.getHeader(\"X-API-Version\"); if (apiVersionHeader != null && apiVersionHeader.trim().length() > 0) { info.serviceVersion = apiVersionHeader; versionFound = true; } else { String acceptHeader = request.getHeader(\"Accept\"); if (acceptHeader != null && acceptHeader.startsWith(\"application/apiman.\")) { String [] split = acceptHeader.split(\"\\\\+\"); info.serviceVersion = split[0].substring(\"application/apiman.\".length()); versionFound = true; } } int minParts = versionFound ? 3 : 4; if (pathInfo != null) { String[] split = pathInfo.split(\"/\"); if (split.length >= minParts) { info.orgId = split[1]; info.serviceId = split[2]; if (!versionFound) { info.serviceVersion = split[3]; } if (split.length > minParts) { StringBuilder resource = new StringBuilder(); for (int idx = minParts; idx < split.length; idx++) { resource.append('/'); resource.append(split[idx]); } if (pathInfo.endsWith(\"/\")) { resource.append('/'); } info.resource = resource.toString(); } } } return info; }",
        "test_src": "@Test public void testParseServiceRequestPath() { ServiceRequestPathInfo info = GatewayServlet.parseServiceRequestPath(null); info = GatewayServlet.parseServiceRequestPath(\"/invalidpath\"); Assert.assertNull(info.orgId); Assert.assertNull(info.serviceId); Assert.assertNull(info.serviceVersion); Assert.assertNull(info.resource); info = GatewayServlet.parseServiceRequestPath(\"/invalid/path\"); Assert.assertNull(info.orgId); Assert.assertNull(info.serviceId); Assert.assertNull(info.serviceVersion); Assert.assertNull(info.resource); info = GatewayServlet.parseServiceRequestPath(\"/Org1/Service1/1.0\"); Assert.assertEquals(\"Org1\", info.orgId); Assert.assertEquals(\"Service1\", info.serviceId); Assert.assertEquals(\"1.0\", info.serviceVersion); Assert.assertNull(info.resource); info = GatewayServlet.parseServiceRequestPath(\"/MyOrg/Service-99/2.7\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertNull(info.resource); info = GatewayServlet.parseServiceRequestPath(\"/MyOrg/Service-99/2.7/resource\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/resource\", info.resource); info = GatewayServlet.parseServiceRequestPath(\"/MyOrg/Service-99/2.7/path/to/resource\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource\", info.resource); info = GatewayServlet.parseServiceRequestPath(\"/MyOrg/Service-99/2.7/path/to/resource?query=1234\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource?query=1234\", info.resource); }",
        "test_tgt": "@Test public void testParseServiceRequestPath() { ServiceRequestPathInfo info = parseServiceRequestPath(null); info = parseServiceRequestPath(\"/invalidpath\"); Assert.assertNull(info.orgId); Assert.assertNull(info.serviceId); Assert.assertNull(info.serviceVersion); Assert.assertNull(info.resource); info = parseServiceRequestPath(\"/invalid/path\"); Assert.assertNull(info.orgId); Assert.assertNull(info.serviceId); Assert.assertNull(info.serviceVersion); Assert.assertNull(info.resource); info = parseServiceRequestPath(\"/Org1/Service1/1.0\"); Assert.assertEquals(\"Org1\", info.orgId); Assert.assertEquals(\"Service1\", info.serviceId); Assert.assertEquals(\"1.0\", info.serviceVersion); Assert.assertNull(info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/2.7\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertNull(info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/2.7/resource\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/resource\", info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/2.7/path/to/resource\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource\", info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/2.7/path/to/resource?query=1234\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource?query=1234\", info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/path/to/resource?query=1234\", null, \"2.7\"); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource?query=1234\", info.resource); info = parseServiceRequestPath(\"/MyOrg/Service-99/path/to/resource?query=1234\", \"application/apiman.2.7+json\", null); Assert.assertEquals(\"MyOrg\", info.orgId); Assert.assertEquals(\"Service-99\", info.serviceId); Assert.assertEquals(\"2.7\", info.serviceVersion); Assert.assertEquals(\"/path/to/resource?query=1234\", info.resource); }",
        "label": 1,
        "edit_seq": [
            [
                "protected",
                "protected",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "ServiceRequestPathInfo",
                "ServiceRequestPathInfo",
                "equal"
            ],
            [
                "parseServiceRequestPath",
                "parseServiceRequestPath",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "HttpServletRequest",
                "insert"
            ],
            [
                "",
                "request",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pathInfo",
                "pathInfo",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "=",
                "replace"
            ],
            [
                "",
                "request",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getPathInfo",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "ServiceRequestPathInfo",
                "ServiceRequestPathInfo",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ServiceRequestPathInfo",
                "ServiceRequestPathInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "versionFound",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "apiVersionHeader",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "request",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getHeader",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "X",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "API",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Version",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "apiVersionHeader",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "apiVersionHeader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trim",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "info",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "serviceVersion",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "apiVersionHeader",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "versionFound",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "acceptHeader",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "request",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getHeader",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Accept",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "acceptHeader",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "acceptHeader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "startsWith",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "apiman",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "split",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "acceptHeader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "split",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "\\",
                "insert"
            ],
            [
                "",
                "\\",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "info",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "serviceVersion",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "split",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "substring",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "apiman",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "versionFound",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "minParts",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "versionFound",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "3",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "4",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pathInfo",
                "pathInfo",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pathInfo",
                "pathInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "4",
                "minParts",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "orgId",
                "orgId",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "serviceId",
                "serviceId",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "versionFound",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "serviceVersion",
                "serviceVersion",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "4",
                "minParts",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "idx",
                "idx",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "4",
                "minParts",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "idx",
                "idx",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "idx",
                "idx",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idx",
                "idx",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pathInfo",
                "pathInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "endsWith",
                "endsWith",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "resource",
                "resource",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void visitLabels(final AcceptsLabelAttribute observer) throws InterruptedException { Type.LabelVisitor<Attribute> visitor = new Type.LabelVisitor<Attribute>() { @Override public void visit(@Nullable Label label, Attribute attribute) throws InterruptedException { if (label != null) { Label absoluteLabel = ruleLabel.resolveRepositoryRelative(label); observer.acceptLabelAttribute(absoluteLabel, attribute); } } }; for (Attribute attribute : ruleClass.getAttributes()) { Type<?> type = attribute.getType(); if (type != BuildType.OUTPUT && type != BuildType.OUTPUT_LIST && type != BuildType.NODEP_LABEL && type != BuildType.NODEP_LABEL_LIST) { visitLabels(attribute, visitor); } } }",
        "focal_tgt": "@Override public Collection<DepEdge> visitLabels() throws InterruptedException { List<DepEdge> edges = new ArrayList<>(); Type.LabelVisitor<Attribute> visitor = (label, attribute) -> { if (label != null) { Label absoluteLabel = ruleLabel.resolveRepositoryRelative(label); edges.add(AttributeMap.DepEdge.create(absoluteLabel, attribute)); } }; for (Attribute attribute : ruleClass.getAttributes()) { Type<?> type = attribute.getType(); if (type != BuildType.OUTPUT && type != BuildType.OUTPUT_LIST && type != BuildType.NODEP_LABEL && type != BuildType.NODEP_LABEL_LIST) { visitLabels(attribute, visitor); } } return edges; }",
        "test_src": "@Test public void testVisitation() throws Exception { VisitationRecorder recorder = new VisitationRecorder(\"srcs\"); mapper.visitLabels(recorder); assertThat(recorder.labelsVisited).containsExactly(\"//p:a\", \"//p:b\", \"//p:c\"); }",
        "test_tgt": "@Test public void testVisitation() throws Exception { assertThat(getLabelsForAttribute(mapper, \"srcs\")).containsExactly(\"//p:a\", \"//p:b\", \"//p:c\"); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "Collection",
                "replace"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "DepEdge",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "visitLabels",
                "visitLabels",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "AcceptsLabelAttribute",
                "",
                "delete"
            ],
            [
                "observer",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "InterruptedException",
                "InterruptedException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "DepEdge",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "edges",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LabelVisitor",
                "LabelVisitor",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "visitor",
                "visitor",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "LabelVisitor",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Attribute",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "@",
                "",
                "delete"
            ],
            [
                "Override",
                "",
                "delete"
            ],
            [
                "public",
                "",
                "delete"
            ],
            [
                "void",
                "",
                "delete"
            ],
            [
                "visit",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "@",
                "",
                "delete"
            ],
            [
                "Nullable",
                "",
                "delete"
            ],
            [
                "Label",
                "",
                "delete"
            ],
            [
                "label",
                "label",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Attribute",
                "",
                "delete"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "",
                "delete"
            ],
            [
                "InterruptedException",
                "-",
                "replace"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "label",
                "label",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Label",
                "Label",
                "equal"
            ],
            [
                "absoluteLabel",
                "absoluteLabel",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ruleLabel",
                "ruleLabel",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "resolveRepositoryRelative",
                "resolveRepositoryRelative",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "label",
                "label",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "observer",
                "edges",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "acceptLabelAttribute",
                "add",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "AttributeMap",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "DepEdge",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "create",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "absoluteLabel",
                "absoluteLabel",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "ruleClass",
                "ruleClass",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAttributes",
                "getAttributes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getType",
                "getType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BuildType",
                "BuildType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OUTPUT",
                "OUTPUT",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BuildType",
                "BuildType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OUTPUT_LIST",
                "OUTPUT_LIST",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BuildType",
                "BuildType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NODEP_LABEL",
                "NODEP_LABEL",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BuildType",
                "BuildType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NODEP_LABEL_LIST",
                "NODEP_LABEL_LIST",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "visitLabels",
                "visitLabels",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "visitor",
                "visitor",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "edges",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "AttributeMap createMapBackedAttributeMap(final Map<String, Object> directMap) { final AggregatingAttributeMapper owner = AggregatingAttributeMapper.this; return new AttributeMap() { @Override public <T> T get(String attributeName, Type<T> type) { owner.checkType(attributeName, type); if (getNonConfigurableAttributes().contains(attributeName)) { return owner.get(attributeName, type); } if (!directMap.containsKey(attributeName)) { throw new IllegalArgumentException( \"attribute \\\"\" + attributeName + \"\\\" isn't available in this computed default context\"); } return type.cast(directMap.get(attributeName)); } @Override public boolean isConfigurable(String attributeName) { return owner.isConfigurable(attributeName); } @Override public String getName() { return owner.getName(); } @Override public Label getLabel() { return owner.getLabel(); } @Override public String getRuleClassName() { return owner.getRuleClassName(); } @Override public Iterable<String> getAttributeNames() { return ImmutableList.<String>builder() .addAll(directMap.keySet()) .addAll(getNonConfigurableAttributes()) .build(); } @Override public void visitLabels(AcceptsLabelAttribute observer) throws InterruptedException { owner.visitLabels(observer); } @Override public String getPackageDefaultHdrsCheck() { return owner.getPackageDefaultHdrsCheck(); } @Override public Boolean getPackageDefaultTestOnly() { return owner.getPackageDefaultTestOnly(); } @Override public String getPackageDefaultDeprecation() { return owner.getPackageDefaultDeprecation(); } @Override public ImmutableList<String> getPackageDefaultCopts() { return owner.getPackageDefaultCopts(); } @Nullable @Override public Type<?> getAttributeType(String attrName) { return owner.getAttributeType(attrName); } @Nullable @Override public Attribute getAttributeDefinition(String attrName) { return owner.getAttributeDefinition(attrName); } @Override public boolean isAttributeValueExplicitlySpecified(String attributeName) { return owner.isAttributeValueExplicitlySpecified(attributeName); } @Override public boolean has(String attrName) { return owner.has(attrName); } @Override public <T> boolean has(String attrName, Type<T> type) { return owner.has(attrName, type); } @Override public Location getAttributeLocation(String attrName) { return owner.getAttributeLocation(attrName); } }; }",
        "focal_tgt": "AttributeMap createMapBackedAttributeMap(final Map<String, Object> directMap) { final AggregatingAttributeMapper owner = AggregatingAttributeMapper.this; return new AttributeMap() { @Override public <T> T get(String attributeName, Type<T> type) { owner.checkType(attributeName, type); if (getNonConfigurableAttributes().contains(attributeName)) { return owner.get(attributeName, type); } if (!directMap.containsKey(attributeName)) { throw new IllegalArgumentException( \"attribute \\\"\" + attributeName + \"\\\" isn't available in this computed default context\"); } return type.cast(directMap.get(attributeName)); } @Override public boolean isConfigurable(String attributeName) { return owner.isConfigurable(attributeName); } @Override public String getName() { return owner.getName(); } @Override public Label getLabel() { return owner.getLabel(); } @Override public String getRuleClassName() { return owner.getRuleClassName(); } @Override public Iterable<String> getAttributeNames() { return ImmutableList.<String>builder() .addAll(directMap.keySet()) .addAll(getNonConfigurableAttributes()) .build(); } @Override public Collection<DepEdge> visitLabels() throws InterruptedException { return owner.visitLabels(); } @Override public String getPackageDefaultHdrsCheck() { return owner.getPackageDefaultHdrsCheck(); } @Override public Boolean getPackageDefaultTestOnly() { return owner.getPackageDefaultTestOnly(); } @Override public String getPackageDefaultDeprecation() { return owner.getPackageDefaultDeprecation(); } @Override public ImmutableList<String> getPackageDefaultCopts() { return owner.getPackageDefaultCopts(); } @Nullable @Override public Type<?> getAttributeType(String attrName) { return owner.getAttributeType(attrName); } @Nullable @Override public Attribute getAttributeDefinition(String attrName) { return owner.getAttributeDefinition(attrName); } @Override public boolean isAttributeValueExplicitlySpecified(String attributeName) { return owner.isAttributeValueExplicitlySpecified(attributeName); } @Override public boolean has(String attrName) { return owner.has(attrName); } @Override public <T> boolean has(String attrName, Type<T> type) { return owner.has(attrName, type); } @Override public Location getAttributeLocation(String attrName) { return owner.getAttributeLocation(attrName); } }; }",
        "test_src": "@Test public void testVisitationConfigurableAttribute() throws Exception { Rule rule = scratchRule(\"a\", \"myrule\", \"sh_binary(name = 'myrule',\", \" srcs = select({\", \" '//conditions:a': ['a.sh'],\", \" '//conditions:b': ['b.sh'],\", \" '\" + BuildType.Selector.DEFAULT_CONDITION_KEY + \"': ['default.sh'],\", \" }))\"); VisitationRecorder recorder = new VisitationRecorder(\"srcs\"); AggregatingAttributeMapper.of(rule).visitLabels(recorder); assertThat(recorder.labelsVisited) .containsExactlyElementsIn( ImmutableList.of( \"//a:a.sh\", \"//a:b.sh\", \"//a:default.sh\", \"//conditions:a\", \"//conditions:b\")); }",
        "test_tgt": "@Test public void testVisitationConfigurableAttribute() throws Exception { Rule rule = scratchRule(\"a\", \"myrule\", \"sh_binary(name = 'myrule',\", \" srcs = select({\", \" '//conditions:a': ['a.sh'],\", \" '//conditions:b': ['b.sh'],\", \" '\" + BuildType.Selector.DEFAULT_CONDITION_KEY + \"': ['default.sh'],\", \" }))\"); assertThat(getLabelsForAttribute(AggregatingAttributeMapper.of(rule), \"srcs\")) .containsExactlyElementsIn( ImmutableList.of( \"//a:a.sh\", \"//a:b.sh\", \"//a:default.sh\", \"//conditions:a\", \"//conditions:b\")); }",
        "label": 1,
        "edit_seq": [
            [
                "AttributeMap",
                "AttributeMap",
                "equal"
            ],
            [
                "createMapBackedAttributeMap",
                "createMapBackedAttributeMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "directMap",
                "directMap",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "AggregatingAttributeMapper",
                "AggregatingAttributeMapper",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "AggregatingAttributeMapper",
                "AggregatingAttributeMapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "AttributeMap",
                "AttributeMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "checkType",
                "checkType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "getNonConfigurableAttributes",
                "getNonConfigurableAttributes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "directMap",
                "directMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "containsKey",
                "containsKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "attribute",
                "attribute",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "isn",
                "isn",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "available",
                "available",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                "computed",
                "computed",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                "context",
                "context",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cast",
                "cast",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "directMap",
                "directMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "isConfigurable",
                "isConfigurable",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isConfigurable",
                "isConfigurable",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Label",
                "Label",
                "equal"
            ],
            [
                "getLabel",
                "getLabel",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getLabel",
                "getLabel",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getRuleClassName",
                "getRuleClassName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRuleClassName",
                "getRuleClassName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Iterable",
                "Iterable",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getAttributeNames",
                "getAttributeNames",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ImmutableList",
                "ImmutableList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addAll",
                "addAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "directMap",
                "directMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "keySet",
                "keySet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addAll",
                "addAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "getNonConfigurableAttributes",
                "getNonConfigurableAttributes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "Collection",
                "replace"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "DepEdge",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "visitLabels",
                "visitLabels",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "AcceptsLabelAttribute",
                "",
                "delete"
            ],
            [
                "observer",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "InterruptedException",
                "InterruptedException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "visitLabels",
                "visitLabels",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "observer",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getPackageDefaultHdrsCheck",
                "getPackageDefaultHdrsCheck",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPackageDefaultHdrsCheck",
                "getPackageDefaultHdrsCheck",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "getPackageDefaultTestOnly",
                "getPackageDefaultTestOnly",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPackageDefaultTestOnly",
                "getPackageDefaultTestOnly",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getPackageDefaultDeprecation",
                "getPackageDefaultDeprecation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPackageDefaultDeprecation",
                "getPackageDefaultDeprecation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ImmutableList",
                "ImmutableList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getPackageDefaultCopts",
                "getPackageDefaultCopts",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPackageDefaultCopts",
                "getPackageDefaultCopts",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nullable",
                "Nullable",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getAttributeType",
                "getAttributeType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAttributeType",
                "getAttributeType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nullable",
                "Nullable",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                "getAttributeDefinition",
                "getAttributeDefinition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAttributeDefinition",
                "getAttributeDefinition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "isAttributeValueExplicitlySpecified",
                "isAttributeValueExplicitlySpecified",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isAttributeValueExplicitlySpecified",
                "isAttributeValueExplicitlySpecified",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "getAttributeLocation",
                "getAttributeLocation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "owner",
                "owner",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAttributeLocation",
                "getAttributeLocation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attrName",
                "attrName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean divideInternally(double coverageThreshold, double rmsdThreshold, int minSequenceLength) throws StructureException { CESymmParameters params = new CESymmParameters(); params.setMinCoreLength(minSequenceLength); params.setGaps(false); CeSymmResult result = CeSymm.analyze(subunits.get(representative) .getRepresentativeAtoms(), params); if (!result.isSignificant()) return false; double rmsd = result.getMultipleAlignment().getScore( MultipleAlignmentScorer.RMSD); if (rmsd > rmsdThreshold) return false; double coverage = result.getMultipleAlignment().getCoverages().get(0) * result.getNumRepeats(); if (coverage < coverageThreshold) return false; logger.info(\"SubunitCluster is internally symmetric with {} repeats, \" + \"{} RMSD and {} coverage\", result.getNumRepeats(), rmsd, coverage); List<List<Integer>> alignedRes = result.getMultipleAlignment() .getBlock(0).getAlignRes(); List<List<Integer>> columns = new ArrayList<List<Integer>>(); for (int s = 0; s < alignedRes.size(); s++) columns.add(new ArrayList<Integer>(alignedRes.get(s).size())); for (int col = 0; col < alignedRes.get(0).size(); col++) { boolean missing = false; for (int s = 0; s < alignedRes.size(); s++) { if (!subunitEQR.get(representative).contains( alignedRes.get(s).get(col))) { missing = true; break; } } if (missing) continue; for (int s = 0; s < alignedRes.size(); s++) { columns.get(s).add( subunitEQR.get(representative).indexOf( alignedRes.get(s).get(col))); } } List<Subunit> newSubunits = new ArrayList<Subunit>(subunits.size() * columns.size()); List<List<Integer>> newSubunitEQR = new ArrayList<List<Integer>>( subunits.size() * columns.size()); for (int s = 0; s < subunits.size(); s++) { for (int r = 0; r < columns.size(); r++) { int start = subunitEQR.get(s).get(columns.get(r).get(0)); int end = subunitEQR.get(s).get( columns.get(r).get(columns.get(r).size() - 1)); Atom[] reprAtoms = Arrays.copyOfRange(subunits.get(s) .getRepresentativeAtoms(), start, end + 1); newSubunits.add(new Subunit(reprAtoms, subunits.get(s) .getName(), subunits.get(s).getIdentifier(), subunits .get(s).getStructure())); List<Integer> eqr = new ArrayList<Integer>(); for (int p = 0; p < columns.get(r).size(); p++) { eqr.add(subunitEQR.get(s).get(columns.get(r).get(p)) - start); } newSubunitEQR.add(eqr); } } subunits = newSubunits; subunitEQR = newSubunitEQR; for (int s = 0; s < subunits.size(); s++) { if (subunits.get(s).size() > subunits.get(representative).size()) representative = s; } method = SubunitClustererMethod.STRUCTURE; return true; }",
        "focal_tgt": "public boolean divideInternally(SubunitClustererParameters clusterParams) throws StructureException { CESymmParameters cesym_params = new CESymmParameters(); cesym_params.setMinCoreLength(clusterParams.getMinimumSequenceLength()); cesym_params.setGaps(false); CeSymmResult result = CeSymm.analyze(subunits.get(representative) .getRepresentativeAtoms(), cesym_params); if (!result.isSignificant()) return false; double rmsd = result.getMultipleAlignment().getScore( MultipleAlignmentScorer.RMSD); if (rmsd > clusterParams.getRMSDThreshold()) return false; double coverage = result.getMultipleAlignment().getCoverages().get(0) * result.getNumRepeats(); if (coverage < clusterParams.getStructureCoverageThreshold()) return false; logger.info(\"SubunitCluster is internally symmetric with {} repeats, \" + \"{} RMSD and {} coverage\", result.getNumRepeats(), rmsd, coverage); List<List<Integer>> alignedRes = result.getMultipleAlignment() .getBlock(0).getAlignRes(); List<List<Integer>> columns = new ArrayList<List<Integer>>(); for (int s = 0; s < alignedRes.size(); s++) columns.add(new ArrayList<Integer>(alignedRes.get(s).size())); for (int col = 0; col < alignedRes.get(0).size(); col++) { boolean missing = false; for (int s = 0; s < alignedRes.size(); s++) { if (!subunitEQR.get(representative).contains( alignedRes.get(s).get(col))) { missing = true; break; } } if (missing) continue; for (int s = 0; s < alignedRes.size(); s++) { columns.get(s).add( subunitEQR.get(representative).indexOf( alignedRes.get(s).get(col))); } } List<Subunit> newSubunits = new ArrayList<Subunit>(subunits.size() * columns.size()); List<List<Integer>> newSubunitEQR = new ArrayList<List<Integer>>( subunits.size() * columns.size()); for (int s = 0; s < subunits.size(); s++) { for (int r = 0; r < columns.size(); r++) { int start = subunitEQR.get(s).get(columns.get(r).get(0)); int end = subunitEQR.get(s).get( columns.get(r).get(columns.get(r).size() - 1)); Atom[] reprAtoms = Arrays.copyOfRange(subunits.get(s) .getRepresentativeAtoms(), start, end + 1); newSubunits.add(new Subunit(reprAtoms, subunits.get(s) .getName(), subunits.get(s).getIdentifier(), subunits .get(s).getStructure())); List<Integer> eqr = new ArrayList<Integer>(); for (int p = 0; p < columns.get(r).size(); p++) { eqr.add(subunitEQR.get(s).get(columns.get(r).get(p)) - start); } newSubunitEQR.add(eqr); } } subunits = newSubunits; subunitEQR = newSubunitEQR; for (int s = 0; s < subunits.size(); s++) { if (subunits.get(s).size() > subunits.get(representative).size()) representative = s; } method = SubunitClustererMethod.STRUCTURE; pseudoStoichiometric = true; return true; }",
        "test_src": "@Test public void testDivideInternally() throws StructureException, IOException { Structure s = StructureIO.getStructure(\"4e3e\"); SubunitCluster sc1 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(0)), \"chain 0\", null, s)); boolean divided = sc1.divideInternally(0.8, 3.0, 20); assertTrue(divided); assertEquals(sc1.size(), 2); assertTrue(sc1.length() < 178); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(1).length); }",
        "test_tgt": "@Test public void testDivideInternally() throws StructureException, IOException { Structure s = StructureIO.getStructure(\"4e3e\"); SubunitCluster sc1 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(0)), \"chain 0\", null, s)); SubunitClustererParameters clustererParameters = new SubunitClustererParameters(); clustererParameters.setStructureCoverageThreshold(0.8); clustererParameters.setRMSDThreshold(3.0); clustererParameters.setMinimumSequenceLength(20); boolean divided = sc1.divideInternally(clustererParameters); assertTrue(divided); assertEquals(sc1.size(), 2); assertTrue(sc1.length() < 178); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(1).length); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "divideInternally",
                "divideInternally",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "coverageThreshold",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "rmsdThreshold",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "minSequenceLength",
                "SubunitClustererParameters",
                "replace"
            ],
            [
                "",
                "clusterParams",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "StructureException",
                "StructureException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "CESymmParameters",
                "CESymmParameters",
                "equal"
            ],
            [
                "params",
                "cesym_params",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "CESymmParameters",
                "CESymmParameters",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "params",
                "cesym_params",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setMinCoreLength",
                "setMinCoreLength",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "minSequenceLength",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "params",
                "clusterParams",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMinimumSequenceLength",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "cesym_params",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setGaps",
                "setGaps",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "CeSymmResult",
                "CeSymmResult",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "CeSymm",
                "CeSymm",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "analyze",
                "analyze",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "representative",
                "representative",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRepresentativeAtoms",
                "getRepresentativeAtoms",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "params",
                "cesym_params",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isSignificant",
                "isSignificant",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "rmsd",
                "rmsd",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMultipleAlignment",
                "getMultipleAlignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getScore",
                "getScore",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "MultipleAlignmentScorer",
                "MultipleAlignmentScorer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "RMSD",
                "RMSD",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "rmsd",
                "rmsd",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "rmsdThreshold",
                "clusterParams",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRMSDThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "coverage",
                "coverage",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMultipleAlignment",
                "getMultipleAlignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCoverages",
                "getCoverages",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumRepeats",
                "getNumRepeats",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "coverage",
                "coverage",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "coverageThreshold",
                "clusterParams",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStructureCoverageThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "SubunitCluster",
                "SubunitCluster",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "internally",
                "internally",
                "equal"
            ],
            [
                "symmetric",
                "symmetric",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "repeats",
                "repeats",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "RMSD",
                "RMSD",
                "equal"
            ],
            [
                "and",
                "and",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "coverage",
                "coverage",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumRepeats",
                "getNumRepeats",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "rmsd",
                "rmsd",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "coverage",
                "coverage",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMultipleAlignment",
                "getMultipleAlignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getBlock",
                "getBlock",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAlignRes",
                "getAlignRes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "col",
                "col",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "col",
                "col",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "col",
                "col",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "representative",
                "representative",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "col",
                "col",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "representative",
                "representative",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "indexOf",
                "indexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "alignedRes",
                "alignedRes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "col",
                "col",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Subunit",
                "Subunit",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "newSubunits",
                "newSubunits",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Subunit",
                "Subunit",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "newSubunitEQR",
                "newSubunitEQR",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "end",
                "end",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Atom",
                "Atom",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "reprAtoms",
                "reprAtoms",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Arrays",
                "Arrays",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "copyOfRange",
                "copyOfRange",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRepresentativeAtoms",
                "getRepresentativeAtoms",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "end",
                "end",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "newSubunits",
                "newSubunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Subunit",
                "Subunit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reprAtoms",
                "reprAtoms",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getIdentifier",
                "getIdentifier",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStructure",
                "getStructure",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "eqr",
                "eqr",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "eqr",
                "eqr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "columns",
                "columns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "r",
                "r",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "newSubunitEQR",
                "newSubunitEQR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "eqr",
                "eqr",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "newSubunits",
                "newSubunits",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "subunitEQR",
                "subunitEQR",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "newSubunitEQR",
                "newSubunitEQR",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "subunits",
                "subunits",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "representative",
                "representative",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "representative",
                "representative",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "method",
                "method",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "SubunitClustererMethod",
                "SubunitClustererMethod",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STRUCTURE",
                "STRUCTURE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "pseudoStoichiometric",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean mergeStructure(SubunitCluster other, double maxRmsd, double minCoverage) throws StructureException { StructureAlignment algorithm = StructureAlignmentFactory .getAlgorithm(CeMain.algorithmName); return mergeStructure(other, maxRmsd, minCoverage, algorithm); }",
        "focal_tgt": "public boolean mergeStructure(SubunitCluster other, SubunitClustererParameters params) throws StructureException { StructureAlignment aligner = StructureAlignmentFactory.getAlgorithm(params.getSuperpositionAlgorithm()); ConfigStrucAligParams aligner_params = aligner.getParameters(); Method setOptimizeAlignment = null; try { setOptimizeAlignment = aligner_params.getClass().getMethod(\"setOptimizeAlignment\", boolean.class); } catch (NoSuchMethodException e) { } if (setOptimizeAlignment != null) { try { setOptimizeAlignment.invoke(aligner_params, params.isOptimizeAlignment()); } catch (IllegalAccessException|InvocationTargetException e) { logger.warn(\"Could not set alignment optimisation switch\"); } } AFPChain afp = aligner.align(this.subunits.get(this.representative) .getRepresentativeAtoms(), other.subunits.get(other.representative) .getRepresentativeAtoms()); MultipleAlignment msa = new MultipleAlignmentEnsembleImpl( afp, this.subunits.get(this.representative).getRepresentativeAtoms(), other.subunits.get(other.representative) .getRepresentativeAtoms(), false) .getMultipleAlignment(0); double structureCoverage = Math.min(msa.getCoverages().get(0), msa .getCoverages().get(1)); if(params.isUseStructureCoverage() && structureCoverage < params.getStructureCoverageThreshold()) { return false; } double rmsd = afp.getTotalRmsdOpt(); if (params.isUseRMSD() && rmsd > params.getRMSDThreshold()) { return false; } double tmScore = afp.getTMScore(); if (params.isUseTMScore() && tmScore < params.getTMThreshold()) { return false; } logger.info(String.format(\"SubunitClusters are structurally similar with \" + \"%.2f RMSD %.2f coverage\", rmsd, structureCoverage)); List<List<Integer>> alignedRes = msa.getBlock(0).getAlignRes(); List<Integer> thisAligned = new ArrayList<Integer>(); List<Integer> otherAligned = new ArrayList<Integer>(); for (int p = 0; p < msa.length(); p++) { if (alignedRes.get(0).get(p) == null) continue; if (alignedRes.get(1).get(p) == null) continue; int thisIndex = alignedRes.get(0).get(p); int otherIndex = alignedRes.get(1).get(p); if (this.subunitEQR.get(this.representative).contains(thisIndex) && other.subunitEQR.get(other.representative).contains( otherIndex)) { thisAligned.add(thisIndex); otherAligned.add(otherIndex); } } List<Integer> thisRemove = new ArrayList<Integer>(); List<Integer> otherRemove = new ArrayList<Integer>(); for (int t = 0; t < this.subunitEQR.get(this.representative).size(); t++) { if (!thisAligned.contains(this.subunitEQR.get(this.representative) .get(t))) thisRemove.add(t); } for (int t = 0; t < other.subunitEQR.get(other.representative).size(); t++) { if (!otherAligned.contains(other.subunitEQR.get( other.representative).get(t))) otherRemove.add(t); } Collections.sort(thisRemove); Collections.reverse(thisRemove); Collections.sort(otherRemove); Collections.reverse(otherRemove); for (int t = 0; t < thisRemove.size(); t++) { for (List<Integer> eqr : this.subunitEQR) { int column = thisRemove.get(t); eqr.remove(column); } } for (int t = 0; t < otherRemove.size(); t++) { for (List<Integer> eqr : other.subunitEQR) { int column = otherRemove.get(t); eqr.remove(column); } } if (this.subunits.get(this.representative).size() < other.subunits.get( other.representative).size()) this.representative = other.representative + subunits.size(); this.subunits.addAll(other.subunits); this.subunitEQR.addAll(other.subunitEQR); this.method = SubunitClustererMethod.STRUCTURE; pseudoStoichiometric = true; return true; }",
        "test_src": "@Test public void testMergeStructure() throws StructureException, IOException { Structure s = StructureIO.getStructure(\"4hhb\"); SubunitCluster sc1 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(0)), \"chain 0\", null, s)); SubunitCluster sc2 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(1)), \"chain 1\", null, s)); SubunitCluster sc3 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(2)), \"chain 2\", null, s)); SubunitCluster sc4 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(3)), \"chain 3\", null, s)); boolean merged13 = sc1.mergeStructure(sc3, 3.0, 0.9); boolean merged24 = sc2.mergeStructure(sc4, 3.0, 0.9); assertTrue(merged13); assertTrue(merged24); assertEquals(sc1.size(), 2); assertEquals(sc2.size(), 2); assertEquals(sc1.length(), 141); assertEquals(sc2.length(), 146); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(1).length); assertEquals(sc2.getAlignedAtomsSubunit(0).length, sc2.getAlignedAtomsSubunit(1).length); boolean merged = sc1.mergeStructure(sc2, 3.0, 0.9); assertTrue(merged); assertEquals(sc1.size(), 4); assertEquals(sc1.length(), 140, 2); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(2).length); }",
        "test_tgt": "@Test public void testMergeStructure() throws StructureException, IOException { Structure s = StructureIO.getStructure(\"4hhb\"); SubunitCluster sc1 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(0)), \"chain 0\", null, s)); SubunitCluster sc2 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(1)), \"chain 1\", null, s)); SubunitCluster sc3 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(2)), \"chain 2\", null, s)); SubunitCluster sc4 = new SubunitCluster( new Subunit(StructureTools.getRepresentativeAtomArray(s .getChainByIndex(3)), \"chain 3\", null, s)); SubunitClustererParameters clustererParameters = new SubunitClustererParameters(); clustererParameters.setRMSDThreshold(3.0); clustererParameters.setStructureCoverageThreshold(0.9); boolean merged13 = sc1.mergeStructure(sc3,clustererParameters); boolean merged24 = sc2.mergeStructure(sc4,clustererParameters); assertTrue(merged13); assertTrue(merged24); assertEquals(sc1.size(), 2); assertEquals(sc2.size(), 2); assertEquals(sc1.length(), 141); assertEquals(sc2.length(), 146); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(1).length); assertEquals(sc2.getAlignedAtomsSubunit(0).length, sc2.getAlignedAtomsSubunit(1).length); boolean merged = sc1.mergeStructure(sc2, clustererParameters); assertTrue(merged); assertEquals(sc1.size(), 4); assertEquals(sc1.length(), 140, 2); assertEquals(sc1.getAlignedAtomsSubunit(0).length, sc1.getAlignedAtomsSubunit(2).length); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "mergeStructure",
                "mergeStructure",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SubunitCluster",
                "SubunitCluster",
                "equal"
            ],
            [
                "other",
                "other",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "maxRmsd",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "minCoverage",
                "SubunitClustererParameters",
                "replace"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "StructureException",
                "StructureException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StructureAlignment",
                "StructureAlignment",
                "equal"
            ],
            [
                "algorithm",
                "aligner",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "StructureAlignmentFactory",
                "StructureAlignmentFactory",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAlgorithm",
                "getAlgorithm",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CeMain",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "algorithmName",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "params",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getSuperpositionAlgorithm",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "ConfigStrucAligParams",
                "insert"
            ],
            [
                "",
                "aligner_params",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "aligner",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getParameters",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Method",
                "insert"
            ],
            [
                "",
                "setOptimizeAlignment",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "setOptimizeAlignment",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "aligner_params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getClass",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMethod",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "setOptimizeAlignment",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "NoSuchMethodException",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "setOptimizeAlignment",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "setOptimizeAlignment",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "invoke",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "aligner_params",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isOptimizeAlignment",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "IllegalAccessException",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "InvocationTargetException",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "logger",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "warn",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Could",
                "insert"
            ],
            [
                "",
                "not",
                "insert"
            ],
            [
                "",
                "set",
                "insert"
            ],
            [
                "",
                "alignment",
                "insert"
            ],
            [
                "",
                "optimisation",
                "insert"
            ],
            [
                "",
                "switch",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "AFPChain",
                "insert"
            ],
            [
                "",
                "afp",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "aligner",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "align",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRepresentativeAtoms",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRepresentativeAtoms",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "MultipleAlignment",
                "insert"
            ],
            [
                "",
                "msa",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "MultipleAlignmentEnsembleImpl",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "afp",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRepresentativeAtoms",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRepresentativeAtoms",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMultipleAlignment",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "double",
                "insert"
            ],
            [
                "",
                "structureCoverage",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "Math",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "min",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "msa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getCoverages",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "msa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getCoverages",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isUseStructureCoverage",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "structureCoverage",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getStructureCoverageThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "mergeStructure",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "other",
                "false",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "double",
                "insert"
            ],
            [
                "",
                "rmsd",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "afp",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getTotalRmsdOpt",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isUseRMSD",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "rmsd",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getRMSDThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "double",
                "insert"
            ],
            [
                "",
                "tmScore",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "afp",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getTMScore",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isUseTMScore",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "tmScore",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "params",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getTMThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "logger",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "info",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "SubunitClusters",
                "insert"
            ],
            [
                "",
                "are",
                "insert"
            ],
            [
                "",
                "structurally",
                "insert"
            ],
            [
                "",
                "similar",
                "insert"
            ],
            [
                "",
                "with",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "2f",
                "insert"
            ],
            [
                "",
                "RMSD",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "2f",
                "insert"
            ],
            [
                "",
                "coverage",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "maxRmsd",
                "rmsd",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "minCoverage",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "algorithm",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "structureCoverage",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "alignedRes",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "msa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getBlock",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getAlignRes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "thisAligned",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "otherAligned",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "msa",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "alignedRes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "continue",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "alignedRes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "continue",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "thisIndex",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "alignedRes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "otherIndex",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "alignedRes",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contains",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "thisIndex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contains",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "otherIndex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "thisAligned",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "thisIndex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "otherAligned",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "otherIndex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ArrayList",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "thisAligned",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contains",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "otherAligned",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contains",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "Collections",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Collections",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "reverse",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Collections",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Collections",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "reverse",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "eqr",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "column",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "thisRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "eqr",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "remove",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "column",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "eqr",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "column",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "otherRemove",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "eqr",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "remove",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "column",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "representative",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "size",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addAll",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunits",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addAll",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "other",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "subunitEQR",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "method",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "SubunitClustererMethod",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "STRUCTURE",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "pseudoStoichiometric",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "@Override public double getPercentageOfIdentity() { double seqid = getNumIdenticals(); double length = getLength() - getAlignedSequence(1).getNumGapPositions() - getAlignedSequence(2).getNumGapPositions(); return seqid / length; }",
        "focal_tgt": "@Override public double getPercentageOfIdentity(boolean countGaps) { double seqid = getNumIdenticals(); double length = getLength(); if (!countGaps) { length = length - getAlignedSequence(1).getNumGapPositions() - getAlignedSequence(2).getNumGapPositions(); } return seqid / length; }",
        "test_src": "@Test public void testGetPercentageOfIdentity() { assertEquals(global.getPercentageOfIdentity(), 1.0, 0.01); assertEquals(local.getPercentageOfIdentity(), 1.0, 0.01); }",
        "test_tgt": "@Test public void testGetPercentageOfIdentity() { assertEquals(global.getPercentageOfIdentity(false), 1.0, 0.01); assertEquals(local.getPercentageOfIdentity(false), 1.0, 0.01); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "getPercentageOfIdentity",
                "getPercentageOfIdentity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "countGaps",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "seqid",
                "seqid",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getNumIdenticals",
                "getNumIdenticals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getLength",
                "getLength",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "countGaps",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "getAlignedSequence",
                "getAlignedSequence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumGapPositions",
                "getNumGapPositions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "getAlignedSequence",
                "getAlignedSequence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumGapPositions",
                "getNumGapPositions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "seqid",
                "seqid",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "private HttpResponse deploy(String filename) throws Exception { File archive = FileUtils.toFile(getClass().getResource(\"/\" + filename)); ByteArrayOutputStream bos = new ByteArrayOutputStream(); try { ByteStreams.copy(new FileInputStream(archive), bos); } finally { bos.close(); } HttpPut put = GatewayFastTestsSuite.getPUT(\"/v2/apps\"); put.setHeader(GatewayAuthenticator.CONTINUUITY_API_KEY, \"api-key-example\"); put.setHeader(\"X-Archive-Name\", filename); put.setEntity(new ByteArrayEntity(bos.toByteArray())); return GatewayFastTestsSuite.PUT(put); }",
        "focal_tgt": "private HttpResponse deploy(Class<? extends Application> application) throws Exception { Manifest manifest = new Manifest(); manifest.getMainAttributes().put(ManifestFields.MANIFEST_VERSION, \"1.0\"); manifest.getMainAttributes().put(ManifestFields.MAIN_CLASS, application.getName()); ByteArrayOutputStream bos = new ByteArrayOutputStream(); final JarOutputStream jarOut = new JarOutputStream(bos, manifest); final String pkgName = application.getPackage().getName(); try { Dependencies.findClassDependencies(application.getClassLoader(), new Dependencies.ClassAcceptor() { @Override public boolean accept(String className, URL classUrl, URL classPathUrl) { try { if (className.startsWith(pkgName)) { jarOut.putNextEntry(new JarEntry(className.replace('.', '/') + \".class\")); InputStream in = classUrl.openStream(); try { ByteStreams.copy(in, jarOut); } finally { in.close(); } return true; } return false; } catch (Exception e) { throw Throwables.propagate(e); } } }, application.getName()); } finally { jarOut.close(); } HttpPut put = GatewayFastTestsSuite.getPUT(\"/v2/apps\"); put.setHeader(GatewayAuthenticator.CONTINUUITY_API_KEY, \"api-key-example\"); put.setHeader(\"X-Archive-Name\", application.getSimpleName() + \".jar\"); put.setEntity(new ByteArrayEntity(bos.toByteArray())); return GatewayFastTestsSuite.PUT(put); }",
        "test_src": "@Test public void testDeploy() throws Exception { HttpResponse response = deploy(\"WordCount.jar\"); Assert.assertEquals(200, response.getStatusLine().getStatusCode()); }",
        "test_tgt": "@Test public void testDeploy() throws Exception { HttpResponse response = deploy(WordCount.class); Assert.assertEquals(200, response.getStatusLine().getStatusCode()); }",
        "label": 1,
        "edit_seq": [
            [
                "private",
                "private",
                "equal"
            ],
            [
                "HttpResponse",
                "HttpResponse",
                "equal"
            ],
            [
                "deploy",
                "deploy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "filename",
                "Class",
                "replace"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "extends",
                "insert"
            ],
            [
                "",
                "Application",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "File",
                "",
                "delete"
            ],
            [
                "archive",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "FileUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "toFile",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "getClass",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getResource",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "/",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "filename",
                "Manifest",
                "replace"
            ],
            [
                "",
                "manifest",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Manifest",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "manifest",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMainAttributes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ManifestFields",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "MANIFEST_VERSION",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "manifest",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getMainAttributes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "put",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ManifestFields",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "MAIN_CLASS",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ByteArrayOutputStream",
                "ByteArrayOutputStream",
                "equal"
            ],
            [
                "bos",
                "bos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ByteArrayOutputStream",
                "ByteArrayOutputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "JarOutputStream",
                "insert"
            ],
            [
                "",
                "jarOut",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "JarOutputStream",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "bos",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "manifest",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "pkgName",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getPackage",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "Dependencies",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "findClassDependencies",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getClassLoader",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Dependencies",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ClassAcceptor",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "",
                "public",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "accept",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "className",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "URL",
                "insert"
            ],
            [
                "",
                "classUrl",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "URL",
                "insert"
            ],
            [
                "",
                "classPathUrl",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "className",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "startsWith",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pkgName",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "jarOut",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "putNextEntry",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "JarEntry",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "className",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "replace",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "InputStream",
                "insert"
            ],
            [
                "",
                "in",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "classUrl",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "openStream",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "ByteStreams",
                "ByteStreams",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "FileInputStream",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "archive",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "bos",
                "in",
                "replace"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "jarOut",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "finally",
                "finally",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "bos",
                "in",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "close",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "Throwables",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "propagate",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "finally",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "jarOut",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "HttpPut",
                "HttpPut",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "GatewayFastTestsSuite",
                "GatewayFastTestsSuite",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPUT",
                "getPUT",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "v2",
                "v2",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "apps",
                "apps",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHeader",
                "setHeader",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "GatewayAuthenticator",
                "GatewayAuthenticator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "CONTINUUITY_API_KEY",
                "CONTINUUITY_API_KEY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "api",
                "api",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "example",
                "example",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHeader",
                "setHeader",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "X",
                "X",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "Archive",
                "Archive",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "filename",
                "application",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getSimpleName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "jar",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setEntity",
                "setEntity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ByteArrayEntity",
                "ByteArrayEntity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bos",
                "bos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toByteArray",
                "toByteArray",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "GatewayFastTestsSuite",
                "GatewayFastTestsSuite",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PUT",
                "PUT",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static double HypergeometricCdf(int k, int n, int Kp, int Np) { if(k<0 || n<0 || Kp<0 || Np<0) { throw new IllegalArgumentException(\"All the parameters must be positive.\"); } Kp = Math.max(k, Kp); Np = Math.max(n, Np); double probabilitySum = approxHypergeometricCdf(k,n,Kp,Np); return probabilitySum; }",
        "focal_tgt": "public static double hypergeometricCdf(int k, int n, int Kp, int Np) { if(k<0 || n<0 || Kp<0 || Np<0) { throw new IllegalArgumentException(\"All the parameters must be positive.\"); } Kp = Math.max(k, Kp); Np = Math.max(n, Np); double probabilitySum = approxHypergeometricCdf(k,n,Kp,Np); return probabilitySum; }",
        "test_src": "@Test public void testHypergeometricCdf() { logger.info(\"HypergeometricCdf\"); int k = 3; int n = 10; int Kp = 30; int Np = 100; double expResult = 0.65401998866081; double result = DiscreteDistributions.HypergeometricCdf(k, n, Kp, Np); assertEquals(expResult, result, TestConfiguration.DOUBLE_ACCURACY_HIGH); }",
        "test_tgt": "@Test public void testHypergeometricCdf() { logger.info(\"HypergeometricCdf\"); int k = 3; int n = 10; int Kp = 30; int Np = 100; double expResult = 0.65401998866081; double result = DiscreteDistributions.hypergeometricCdf(k, n, Kp, Np); assertEquals(expResult, result, TestConfiguration.DOUBLE_ACCURACY_HIGH); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "HypergeometricCdf",
                "hypergeometricCdf",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "Kp",
                "Kp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "Np",
                "Np",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "Kp",
                "Kp",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "Np",
                "Np",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "positive",
                "positive",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Kp",
                "Kp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Kp",
                "Kp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Np",
                "Np",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Np",
                "Np",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "probabilitySum",
                "probabilitySum",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "approxHypergeometricCdf",
                "approxHypergeometricCdf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Kp",
                "Kp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Np",
                "Np",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "probabilitySum",
                "probabilitySum",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Map<Object, ColumnType> getColumns() { return Collections.unmodifiableMap(columns); }",
        "focal_tgt": "public Map<Object, TypeInference.DataType> getXDataTypes() { return Collections.unmodifiableMap(xDataTypes); }",
        "test_src": "@Test public void testGetColumns() { TestUtils.log(this.getClass(), \"getColumns\"); RandomSingleton.getInstance().setSeed(TestConfiguration.RANDOM_SEED); DatabaseConfiguration dbConf = TestUtils.getDBConfig(); Dataset instance = new Dataset(dbConf); AssociativeArray xData1 = new AssociativeArray(); xData1.put(\"1\", true); instance.add(new Record(xData1, null)); AssociativeArray xData2 = new AssociativeArray(); xData2.put(\"2\", 1.0); instance.add(new Record(xData2, null)); AssociativeArray xData3 = new AssociativeArray(); xData3.put(\"3\", (short)1); instance.add(new Record(xData3, null)); AssociativeArray xData4 = new AssociativeArray(); xData4.put(\"4\", \"s\"); instance.add(new Record(xData4, null)); Map<Object, Dataset.ColumnType> expResult = new LinkedHashMap<>(); expResult.put(\"1\", Dataset.ColumnType.DUMMYVAR); expResult.put(\"2\", Dataset.ColumnType.NUMERICAL); expResult.put(\"3\", Dataset.ColumnType.ORDINAL); expResult.put(\"4\", Dataset.ColumnType.CATEGORICAL); Map<Object, Dataset.ColumnType> result = instance.getColumns(); assertEquals(expResult, result); }",
        "test_tgt": "@Test public void testGetColumns() { TestUtils.log(this.getClass(), \"getColumns\"); RandomSingleton.getInstance().setSeed(TestConfiguration.RANDOM_SEED); DatabaseConfiguration dbConf = TestUtils.getDBConfig(); Dataset instance = new Dataset(dbConf); AssociativeArray xData1 = new AssociativeArray(); xData1.put(\"1\", true); instance.add(new Record(xData1, null)); AssociativeArray xData2 = new AssociativeArray(); xData2.put(\"2\", 1.0); instance.add(new Record(xData2, null)); AssociativeArray xData3 = new AssociativeArray(); xData3.put(\"3\", (short)1); instance.add(new Record(xData3, null)); AssociativeArray xData4 = new AssociativeArray(); xData4.put(\"4\", \"s\"); instance.add(new Record(xData4, null)); Map<Object, TypeInference.DataType> expResult = new LinkedHashMap<>(); expResult.put(\"1\", TypeInference.DataType.BOOLEAN); expResult.put(\"2\", TypeInference.DataType.NUMERICAL); expResult.put(\"3\", TypeInference.DataType.ORDINAL); expResult.put(\"4\", TypeInference.DataType.CATEGORICAL); Map<Object, TypeInference.DataType> result = instance.getXDataTypes(); assertEquals(expResult, result); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ColumnType",
                "TypeInference",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "DataType",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getColumns",
                "getXDataTypes",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Collections",
                "Collections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "unmodifiableMap",
                "unmodifiableMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "columns",
                "xDataTypes",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public List<StoredEvent> allStoredEventsSince(Date occurredFrom) { return null; }",
        "focal_tgt": "@Override public List<StoredEvent> findStoredEventsSince(Date occurredFrom) { return null; }",
        "test_src": "@Test public void testAllStoredEventsSince() { System.out.println(\"allStoredEventsSince\"); Date occurredFrom = null; HibernateEventStore instance = new HibernateEventStore(); List<StoredEvent> expResult = null; List<StoredEvent> result = instance.allStoredEventsSince(occurredFrom); assertEquals(expResult, result); fail(\"The test case is a prototype.\"); }",
        "test_tgt": "@Test public void testFindStoredEventsSince() { System.out.println(\"findStoredEventsSince\"); Date occurredFrom = null; HibernateEventStore instance = new HibernateEventStore(); List<StoredEvent> expResult = null; List<StoredEvent> result = instance.findStoredEventsSince(occurredFrom); assertEquals(expResult, result); fail(\"The test case is a prototype.\"); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "StoredEvent",
                "StoredEvent",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "allStoredEventsSince",
                "findStoredEventsSince",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "occurredFrom",
                "occurredFrom",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void putAll(Map<? extends K, ? extends Object> m) { boolean multi = (m instanceof MultiMap); if (multi) { for (Map.Entry<? extends K, ? extends Object> entry : m.entrySet()) { _map.put(entry.getKey(),LazyList.clone(entry.getValue())); } } else { _map.putAll(m); } }",
        "focal_tgt": "@Override public void putAll(Map<? extends String, ? extends Object> m) { boolean multi = (m instanceof MultiMap); if (multi) { for (Map.Entry<? extends String, ? extends Object> entry : m.entrySet()) { _map.put(entry.getKey(),LazyList.clone(entry.getValue())); } } else { _map.putAll(m); } }",
        "test_src": "@Test public void testPutAll_MultiMap_Simple() { MultiMap<String> mm = new MultiMap<String>(); assertMapSize(mm,0); MultiMap<String> input = new MultiMap<String>(); input.put(\"food\",\"apple\"); input.put(\"color\",\"red\"); input.put(\"amount\",\"bushel\"); mm.putAll(input); assertMapSize(mm,3); assertValues(mm,\"food\",\"apple\"); assertValues(mm,\"color\",\"red\"); assertValues(mm,\"amount\",\"bushel\"); }",
        "test_tgt": "@Test public void testPutAll_MultiMap_Simple() { MultiMap mm = new MultiMap(); assertMapSize(mm,0); MultiMap input = new MultiMap(); input.put(\"food\",\"apple\"); input.put(\"color\",\"red\"); input.put(\"amount\",\"bushel\"); mm.putAll(input); assertMapSize(mm,3); assertValues(mm,\"food\",\"apple\"); assertValues(mm,\"color\",\"red\"); assertValues(mm,\"amount\",\"bushel\"); }",
        "label": 1,
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "putAll",
                "putAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "K",
                "String",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "m",
                "m",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "multi",
                "multi",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "m",
                "m",
                "equal"
            ],
            [
                "instanceof",
                "instanceof",
                "equal"
            ],
            [
                "MultiMap",
                "MultiMap",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "multi",
                "multi",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "K",
                "String",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "m",
                "m",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "entrySet",
                "entrySet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "_map",
                "_map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "LazyList",
                "LazyList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clone",
                "clone",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "_map",
                "_map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "putAll",
                "putAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "m",
                "m",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void transact(Runnable work) { transact( () -> { work.run(); return null; }); }",
        "focal_tgt": "void transact(Runnable work) { transact( () -> { work.run(); return null; }); }",
        "test_src": "@Test public void testTransact_getsNewTimestampOnEachTry() { ofy().transact(new VoidWork() { DateTime firstAttemptTime; @Override public void vrun() { if (firstAttemptTime == null) { firstAttemptTime = ofy().getTransactionTime(); sleepUninterruptibly(10, MILLISECONDS); throw new ConcurrentModificationException(); } assertThat(ofy().getTransactionTime()).isGreaterThan(firstAttemptTime); }}); }",
        "test_tgt": "@Test public void testTransact_getsNewTimestampOnEachTry() { tm().transact(new Runnable() { DateTime firstAttemptTime; @Override public void run() { if (firstAttemptTime == null) { firstAttemptTime = tm().getTransactionTime(); sleepUninterruptibly(10, MILLISECONDS); throw new ConcurrentModificationException(); } assertThat(tm().getTransactionTime()).isGreaterThan(firstAttemptTime); }}); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "",
                "delete"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "transact",
                "transact",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Runnable",
                "Runnable",
                "equal"
            ],
            [
                "work",
                "work",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "transact",
                "transact",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "work",
                "work",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "run",
                "run",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@GuardedBy(\"this\") public synchronized KeysetManager promote(int keyId) throws GeneralSecurityException { for (int i = 0; i < keysetBuilder.getKeyCount(); i++) { Keyset.Key key = keysetBuilder.getKey(i); if (key.getKeyId() == keyId) { if (!key.getStatus().equals(KeyStatusType.ENABLED)) { throw new GeneralSecurityException( \"cannot promote key because it's not enabled: \" + keyId); } keysetBuilder.setPrimaryKeyId(keyId); return this; } } throw new GeneralSecurityException(\"key not found: \" + keyId); }",
        "focal_tgt": "@GuardedBy(\"this\") public synchronized KeysetManager setPrimary(int keyId) throws GeneralSecurityException { for (int i = 0; i < keysetBuilder.getKeyCount(); i++) { Keyset.Key key = keysetBuilder.getKey(i); if (key.getKeyId() == keyId) { if (!key.getStatus().equals(KeyStatusType.ENABLED)) { throw new GeneralSecurityException( \"cannot set key as primary because it's not enabled: \" + keyId); } keysetBuilder.setPrimaryKeyId(keyId); return this; } } throw new GeneralSecurityException(\"key not found: \" + keyId); }",
        "test_src": "@Test public void testPromote_shouldPromoteKey() throws Exception { int primaryKeyId = 42; int newPrimaryKeyId = 43; KeysetHandle handle = KeysetHandle.fromKeyset( TestUtil.createKeyset( createEnabledKey(primaryKeyId), createEnabledKey(newPrimaryKeyId))); Keyset keyset = KeysetManager .withKeysetHandle(handle) .promote(newPrimaryKeyId) .getKeysetHandle() .getKeyset(); assertThat(keyset.getKeyCount()).isEqualTo(2); assertThat(keyset.getPrimaryKeyId()).isEqualTo(newPrimaryKeyId); }",
        "test_tgt": "@Test public void testSetPrimary_shouldSetPrimary() throws Exception { int primaryKeyId = 42; int newPrimaryKeyId = 43; KeysetHandle handle = KeysetHandle.fromKeyset( TestUtil.createKeyset( createEnabledKey(primaryKeyId), createEnabledKey(newPrimaryKeyId))); Keyset keyset = KeysetManager .withKeysetHandle(handle) .setPrimary(newPrimaryKeyId) .getKeysetHandle() .getKeyset(); assertThat(keyset.getKeyCount()).isEqualTo(2); assertThat(keyset.getPrimaryKeyId()).isEqualTo(newPrimaryKeyId); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "GuardedBy",
                "GuardedBy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "synchronized",
                "synchronized",
                "equal"
            ],
            [
                "KeysetManager",
                "KeysetManager",
                "equal"
            ],
            [
                "promote",
                "setPrimary",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "keyId",
                "keyId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "GeneralSecurityException",
                "GeneralSecurityException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "keysetBuilder",
                "keysetBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKeyCount",
                "getKeyCount",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Keyset",
                "Keyset",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "keysetBuilder",
                "keysetBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKeyId",
                "getKeyId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "keyId",
                "keyId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStatus",
                "getStatus",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "KeyStatusType",
                "KeyStatusType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ENABLED",
                "ENABLED",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "GeneralSecurityException",
                "GeneralSecurityException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "promote",
                "set",
                "replace"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "",
                "as",
                "insert"
            ],
            [
                "",
                "primary",
                "insert"
            ],
            [
                "because",
                "because",
                "equal"
            ],
            [
                "it",
                "it",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "enabled",
                "enabled",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "keyId",
                "keyId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "keysetBuilder",
                "keysetBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPrimaryKeyId",
                "setPrimaryKeyId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "keyId",
                "keyId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "GeneralSecurityException",
                "GeneralSecurityException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "keyId",
                "keyId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Map<GridCacheVersion, WALPointer> currentlyPreparedTxs() { assert stateLock.writeLock().isHeldByCurrentThread(); return U.sealMap(currentlyPreparedTxs); }",
        "focal_tgt": "public Set<GridCacheVersion> currentlyPreparedTxs() { assert stateLock.writeLock().isHeldByCurrentThread(); return U.sealSet(preparedCommittedTxsCounters.keySet()); }",
        "test_src": "@Test public void testCurrentlyPreparedTxs() { txPrepare(1); txKeyWrite(1, 10); txKeyWrite(1, 11); txPrepare(2); txKeyWrite(2, 20); txKeyWrite(2, 21); txKeyWrite(2, 22); txPrepare(3); txKeyWrite(3, 30); txCommit(2); tracker.writeLockState(); try { Map<GridCacheVersion, WALPointer> currentlyPreparedTxs = tracker.currentlyPreparedTxs(); assertEquals(2, currentlyPreparedTxs.size()); assertTrue(currentlyPreparedTxs.containsKey(nearXidVersion(1))); assertTrue(currentlyPreparedTxs.containsKey(nearXidVersion(3))); } finally { tracker.writeUnlockState(); } txKeyWrite(3, 31); txCommit(3); tracker.writeLockState(); try { Map<GridCacheVersion, WALPointer> currentlyPreparedTxs = tracker.currentlyPreparedTxs(); assertEquals(1, currentlyPreparedTxs.size()); assertTrue(currentlyPreparedTxs.containsKey(nearXidVersion(1))); } finally { tracker.writeUnlockState(); } }",
        "test_tgt": "@Test public void testCurrentlyPreparedTxs() { txPrepare(1); txKeyWrite(1, 10); txKeyWrite(1, 11); txPrepare(2); txKeyWrite(2, 20); txKeyWrite(2, 21); txKeyWrite(2, 22); txPrepare(3); txKeyWrite(3, 30); txCommit(2); tracker.writeLockState(); try { Set<GridCacheVersion> currentlyPreparedTxs = tracker.currentlyPreparedTxs(); assertEquals(2, currentlyPreparedTxs.size()); assertTrue(currentlyPreparedTxs.contains(nearXidVersion(1))); assertTrue(currentlyPreparedTxs.contains(nearXidVersion(3))); } finally { tracker.writeUnlockState(); } txKeyWrite(3, 31); txCommit(3); tracker.writeLockState(); try { Set<GridCacheVersion> currentlyPreparedTxs = tracker.currentlyPreparedTxs(); assertEquals(1, currentlyPreparedTxs.size()); assertTrue(currentlyPreparedTxs.contains(nearXidVersion(1))); } finally { tracker.writeUnlockState(); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Map",
                "Set",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "GridCacheVersion",
                "GridCacheVersion",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "WALPointer",
                "",
                "delete"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "currentlyPreparedTxs",
                "currentlyPreparedTxs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "assert",
                "assert",
                "equal"
            ],
            [
                "stateLock",
                "stateLock",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writeLock",
                "writeLock",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isHeldByCurrentThread",
                "isHeldByCurrentThread",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "U",
                "U",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sealMap",
                "sealSet",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentlyPreparedTxs",
                "preparedCommittedTxsCounters",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keySet",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static double[][] solve(double[][] A, double[][] B) { if (A.length == A[0].length) { LUDecomposition lu = new LUDecomposition(A); lu.solve(B); return B; } else { double[][] X = new double[A[0].length][B[0].length]; QRDecomposition qr = new QRDecomposition(A); qr.solve(B, X); return X; } }",
        "focal_tgt": "public static DenseMatrix solve(double[][] A, double[][] B) { DenseMatrix b = new ColumnMajorMatrix(B); DenseMatrix X = new ColumnMajorMatrix(A[0].length, B[0].length); if (A.length == A[0].length) { LUDecomposition lu = new LUDecomposition(A); lu.solve(b, X); } else { QRDecomposition qr = new QRDecomposition(A); qr.solve(b, X); } return X; }",
        "test_src": "@Test public void testSolve_doubleArrArr_doubleArrArr() { System.out.println(\"solve\"); double[][] A = { {0.9000, 0.4000, 0.7000}, {0.4000, 0.5000, 0.3000}, {0.7000, 0.3000, 0.8000} }; double[][] B2 = { {0.5, 0.2}, {0.5, 0.8}, {0.5, 0.3} }; double[][] X2 = { {-0.2027027, -1.2837838}, {0.8783784, 2.2297297}, {0.4729730, 0.6621622} }; double[][] x = Math.solve(A, B2); assertEquals(X2.length, x.length); assertEquals(X2[0].length, x[0].length); for (int i = 0; i < X2.length; i++) { for (int j = 0; j < X2[i].length; j++) { assertEquals(X2[i][j], x[i][j], 1E-7); } } }",
        "test_tgt": "@Test public void testSolve_doubleArrArr_doubleArrArr() { System.out.println(\"solve\"); double[][] A = { {0.9000, 0.4000, 0.7000}, {0.4000, 0.5000, 0.3000}, {0.7000, 0.3000, 0.8000} }; double[][] B2 = { {0.5, 0.2}, {0.5, 0.8}, {0.5, 0.3} }; double[][] X2 = { {-0.2027027, -1.2837838}, {0.8783784, 2.2297297}, {0.4729730, 0.6621622} }; DenseMatrix x = Math.solve(A, B2); assertEquals(X2.length, x.nrows()); assertEquals(X2[0].length, x.ncols()); for (int i = 0; i < X2.length; i++) { for (int j = 0; j < X2[i].length; j++) { assertEquals(X2[i][j], x.get(i, j), 1E-7); } } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "DenseMatrix",
                "replace"
            ],
            [
                "solve",
                "solve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "DenseMatrix",
                "insert"
            ],
            [
                "",
                "b",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ColumnMajorMatrix",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "B",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "DenseMatrix",
                "insert"
            ],
            [
                "",
                "X",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ColumnMajorMatrix",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "A",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "B",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LUDecomposition",
                "LUDecomposition",
                "equal"
            ],
            [
                "lu",
                "lu",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "LUDecomposition",
                "LUDecomposition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lu",
                "lu",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "solve",
                "solve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "B",
                "b",
                "replace"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "X",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "B",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "X",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "A",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "B",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "QRDecomposition",
                "QRDecomposition",
                "equal"
            ],
            [
                "qr",
                "qr",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "QRDecomposition",
                "QRDecomposition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "qr",
                "qr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "solve",
                "solve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "B",
                "b",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "X",
                "X",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "X",
                "X",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "public static double[] colSum(double[][] data) { double[] x = data[0].clone(); for (int i = 1; i < data.length; i++) { for (int j = 0; j < x.length; j++) { x[j] += data[i][j]; } } return x; }",
        "focal_tgt": "public static double[] colSums(double[][] data) { double[] x = data[0].clone(); for (int i = 1; i < data.length; i++) { for (int j = 0; j < x.length; j++) { x[j] += data[i][j]; } } return x; }",
        "test_src": "@Test public void testColSum() { System.out.println(\"colSum\"); double[][] A = { {0.7220180, 0.07121225, 0.6881997}, {-0.2648886, -0.89044952, 0.3700456}, {-0.6391588, 0.44947578, 0.6240573} }; double[] r = {-0.1820294, -0.3697615, 1.6823026}; double[] result = Math.colSum(A); for (int i = 0; i < r.length; i++) { assertEquals(result[i], r[i], 1E-7); } }",
        "test_tgt": "@Test public void testColSums() { System.out.println(\"colSums\"); double[][] A = { {0.7220180, 0.07121225, 0.6881997}, {-0.2648886, -0.89044952, 0.3700456}, {-0.6391588, 0.44947578, 0.6240573} }; double[] r = {-0.1820294, -0.3697615, 1.6823026}; double[] result = Math.colSums(A); for (int i = 0; i < r.length; i++) { assertEquals(result[i], r[i], 1E-7); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "colSum",
                "colSums",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clone",
                "clone",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public ICompletableFuture<Long> addAllAsync(@Nonnull Collection<? extends E> collection, @Nonnull OverflowPolicy overflowPolicy) { checkNotNull(collection, \"collection can't be null\"); checkNotNull(overflowPolicy, \"overflowPolicy can't be null\"); checkFalse(collection.isEmpty(), \"collection can't be empty\"); checkTrue(collection.size() <= MAX_BATCH_SIZE, \"collection can't be larger than \" + MAX_BATCH_SIZE); Operation op = new AddAllOperation(name, toDataArray(collection), overflowPolicy) .setPartitionId(partitionId); OperationService operationService = getOperationService(); return operationService.createInvocationBuilder(null, op, partitionId) .setCallTimeout(Long.MAX_VALUE) .invoke(); }",
        "focal_tgt": "@Override public CompletionStage<Long> addAllAsync(@Nonnull Collection<? extends E> collection, @Nonnull OverflowPolicy overflowPolicy) { checkNotNull(collection, \"collection can't be null\"); checkNotNull(overflowPolicy, \"overflowPolicy can't be null\"); checkFalse(collection.isEmpty(), \"collection can't be empty\"); checkTrue(collection.size() <= MAX_BATCH_SIZE, \"collection can't be larger than \" + MAX_BATCH_SIZE); Operation op = new AddAllOperation(name, toDataArray(collection), overflowPolicy) .setPartitionId(partitionId); OperationService operationService = getOperationService(); return operationService.createInvocationBuilder(null, op, partitionId) .setCallTimeout(Long.MAX_VALUE) .invoke(); }",
        "test_src": "@Test public void addAllAsync_manyTimesRoundTheRing() throws Exception { RingbufferConfig c = config.getRingbufferConfig(ringbuffer.getName()); Random random = new Random(); for (int iteration = 0; iteration < 1000; iteration++) { List<String> items = randomList(max(1, random.nextInt(c.getCapacity()))); long previousTailSeq = ringbuffer.tailSequence(); long result = ringbuffer.addAllAsync(items, OVERWRITE).get(); assertEquals(previousTailSeq + items.size(), ringbuffer.tailSequence()); if (ringbuffer.tailSequence() < c.getCapacity()) { assertEquals(0, ringbuffer.headSequence()); } else { assertEquals(ringbuffer.tailSequence() - c.getCapacity() + 1, ringbuffer.headSequence()); } assertEquals(ringbuffer.tailSequence(), result); long startSequence = previousTailSeq + 1; for (int k = 0; k < items.size(); k++) { assertEquals(items.get(k), ringbuffer.readOne(startSequence + k)); } } }",
        "test_tgt": "@Test public void addAllAsync_manyTimesRoundTheRing() throws Exception { RingbufferConfig c = config.getRingbufferConfig(ringbuffer.getName()); Random random = new Random(); for (int iteration = 0; iteration < 1000; iteration++) { List<String> items = randomList(max(1, random.nextInt(c.getCapacity()))); long previousTailSeq = ringbuffer.tailSequence(); long result = ringbuffer.addAllAsync(items, OVERWRITE).toCompletableFuture().get(); assertEquals(previousTailSeq + items.size(), ringbuffer.tailSequence()); if (ringbuffer.tailSequence() < c.getCapacity()) { assertEquals(0, ringbuffer.headSequence()); } else { assertEquals(ringbuffer.tailSequence() - c.getCapacity() + 1, ringbuffer.headSequence()); } assertEquals(ringbuffer.tailSequence(), result); long startSequence = previousTailSeq + 1; for (int k = 0; k < items.size(); k++) { assertEquals(items.get(k), ringbuffer.readOne(startSequence + k)); } } }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ICompletableFuture",
                "CompletionStage",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "addAllAsync",
                "addAllAsync",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nonnull",
                "Nonnull",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "E",
                "E",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nonnull",
                "Nonnull",
                "equal"
            ],
            [
                "OverflowPolicy",
                "OverflowPolicy",
                "equal"
            ],
            [
                "overflowPolicy",
                "overflowPolicy",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "overflowPolicy",
                "overflowPolicy",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "overflowPolicy",
                "overflowPolicy",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkFalse",
                "checkFalse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "isEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "empty",
                "empty",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkTrue",
                "checkTrue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "MAX_BATCH_SIZE",
                "MAX_BATCH_SIZE",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "larger",
                "larger",
                "equal"
            ],
            [
                "than",
                "than",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "MAX_BATCH_SIZE",
                "MAX_BATCH_SIZE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Operation",
                "Operation",
                "equal"
            ],
            [
                "op",
                "op",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "AddAllOperation",
                "AddAllOperation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "toDataArray",
                "toDataArray",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "overflowPolicy",
                "overflowPolicy",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPartitionId",
                "setPartitionId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "partitionId",
                "partitionId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "OperationService",
                "OperationService",
                "equal"
            ],
            [
                "operationService",
                "operationService",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getOperationService",
                "getOperationService",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "operationService",
                "operationService",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createInvocationBuilder",
                "createInvocationBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "op",
                "op",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partitionId",
                "partitionId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setCallTimeout",
                "setCallTimeout",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MAX_VALUE",
                "MAX_VALUE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "invoke",
                "invoke",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public final String getUntaggedName(String appName) throws VersioningSyntaxException { int colonIndex = appName.indexOf(EXPRESSION_SEPARATOR); if (colonIndex != -1) { if (colonIndex == (appName.length() - 1)) { throw new VersioningSyntaxException( LOCALSTRINGS.getLocalString(\"invalid.appname\", \"excepted version identifier after colon: {0}\", appName)); } return appName.substring(0, colonIndex); } return appName; }",
        "focal_tgt": "public static final String getUntaggedName(String appName) throws VersioningSyntaxException { if(appName != null && !appName.isEmpty()){ int colonIndex = appName.indexOf(EXPRESSION_SEPARATOR); if (colonIndex != -1) { if (colonIndex == (appName.length() - 1)) { throw new VersioningSyntaxException( LOCALSTRINGS.getLocalString(\"invalid.appname\", \"excepted version identifier after colon: {0}\", appName)); } return appName.substring(0, colonIndex); } } return appName; }",
        "test_src": "@Test public void testGetUntaggedName() throws VersioningSyntaxException { VersioningService instance = new VersioningService(); String expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR + \"RC-\" + VersioningService.EXPRESSION_WILDCARD; String result = instance.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR + \"RC-1.0.0\"; result = instance.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME; result = instance.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR; try { result = instance.getUntaggedName(expression); fail(\"the getUntagged method did not throw a VersioningSyntaxException\"); } catch(VersioningSyntaxException e){} }",
        "test_tgt": "@Test public void testGetUntaggedName() throws VersioningSyntaxException { String expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR + \"RC-\" + VersioningService.EXPRESSION_WILDCARD; String result = VersioningService.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR + \"RC-1.0.0\"; result = VersioningService.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME; result = VersioningService.getUntaggedName(expression); assertEquals(APPLICATION_NAME, result); expression = APPLICATION_NAME + VersioningService.EXPRESSION_SEPARATOR; try { result = VersioningService.getUntaggedName(expression); fail(\"the getUntagged method did not throw a VersioningSyntaxException\"); } catch(VersioningSyntaxException e){} }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "static",
                "insert"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getUntaggedName",
                "getUntaggedName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "VersioningSyntaxException",
                "VersioningSyntaxException",
                "equal"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "appName",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "appName",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isEmpty",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "colonIndex",
                "colonIndex",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "indexOf",
                "indexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "EXPRESSION_SEPARATOR",
                "EXPRESSION_SEPARATOR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "colonIndex",
                "colonIndex",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "colonIndex",
                "colonIndex",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "VersioningSyntaxException",
                "VersioningSyntaxException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "LOCALSTRINGS",
                "LOCALSTRINGS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getLocalString",
                "getLocalString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "invalid",
                "invalid",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "appname",
                "appname",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "excepted",
                "excepted",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "identifier",
                "identifier",
                "equal"
            ],
            [
                "after",
                "after",
                "equal"
            ],
            [
                "colon",
                "colon",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "substring",
                "substring",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "colonIndex",
                "colonIndex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "appName",
                "appName",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "Task modifyVApp(URI vAppURI, VApp vApp);",
        "focal_tgt": "Task editVApp(URI vAppURI, VApp vApp);",
        "test_src": "@Test(description = \"PUT /vApp/{id}\", dependsOnMethods = { \"testGetVApp\" }) public void testModifyVApp() { VApp newVApp = VApp.builder() .name(name(\"new-name-\")) .description(\"New Description\") .build(); vAppNames.add(newVApp.getName()); Task modifyVApp = vAppApi.modifyVApp(vApp.getHref(), newVApp); assertTrue(retryTaskSuccess.apply(modifyVApp), String.format(TASK_COMPLETE_TIMELY, \"modifyVApp\")); vApp = vAppApi.getVApp(vApp.getHref()); assertEquals(vApp.getName(), newVApp.getName(), String.format(OBJ_FIELD_EQ, VAPP, \"Name\", newVApp.getName(), vApp.getName())); assertEquals(vApp.getDescription(), newVApp.getDescription(), String.format(OBJ_FIELD_EQ, VAPP, \"Description\", newVApp.getDescription(), vApp.getDescription())); }",
        "test_tgt": "@Test(description = \"PUT /vApp/{id}\", dependsOnMethods = { \"testGetVApp\" }) public void testEditVApp() { VApp newVApp = VApp.builder().name(name(\"new-name-\")).description(\"New Description\").build(); vAppNames.add(newVApp.getName()); Task editVApp = vAppApi.editVApp(vApp.getHref(), newVApp); assertTrue(retryTaskSuccess.apply(editVApp), String.format(TASK_COMPLETE_TIMELY, \"editVApp\")); vApp = vAppApi.getVApp(vApp.getHref()); assertEquals(vApp.getName(), newVApp.getName(), String.format(OBJ_FIELD_EQ, VAPP, \"Name\", newVApp.getName(), vApp.getName())); assertEquals(vApp.getDescription(), newVApp.getDescription(), String.format(OBJ_FIELD_EQ, VAPP, \"Description\", newVApp.getDescription(), vApp.getDescription())); }",
        "label": 1,
        "edit_seq": [
            [
                "Task",
                "Task",
                "equal"
            ],
            [
                "modifyVApp",
                "editVApp",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "URI",
                "URI",
                "equal"
            ],
            [
                "vAppURI",
                "vAppURI",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "VApp",
                "VApp",
                "equal"
            ],
            [
                "vApp",
                "vApp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "Set<? extends Flavor> listFlavorsInDetail();",
        "focal_tgt": "PagedIterable<? extends Flavor> listInDetail();",
        "test_src": "@Test(description = \"GET /v${apiVersion}/{tenantId}/flavors/detail\") public void testListFlavorsInDetail() throws Exception { for (String zoneId : zones) { FlavorApi api = novaContext.getApi().getFlavorApiForZone(zoneId); Set<? extends Flavor> response = api.listFlavorsInDetail(); assertNotNull(response); assertFalse(response.isEmpty()); for (Flavor flavor : response) { assertNotNull(flavor.getId()); assertNotNull(flavor.getName()); assertNotNull(flavor.getLinks()); assertTrue(flavor.getRam() > 0); assertTrue(flavor.getDisk() > 0); assertTrue(flavor.getVcpus() > 0); } } }",
        "test_tgt": "@Test(description = \"GET /v${apiVersion}/{tenantId}/flavors/detail\") public void testListFlavorsInDetail() throws Exception { for (String zoneId : zones) { FlavorApi api = novaContext.getApi().getFlavorApiForZone(zoneId); Set<? extends Flavor> response = api.listInDetail().concat().toImmutableSet(); assertNotNull(response); assertFalse(response.isEmpty()); for (Flavor flavor : response) { assertNotNull(flavor.getId()); assertNotNull(flavor.getName()); assertNotNull(flavor.getLinks()); assertTrue(flavor.getRam() > 0); assertTrue(flavor.getDisk() > 0); assertTrue(flavor.getVcpus() > 0); } } }",
        "label": 1,
        "edit_seq": [
            [
                "Set",
                "PagedIterable",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "Flavor",
                "Flavor",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "listFlavorsInDetail",
                "listInDetail",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "Set<? extends Resource> listFlavors();",
        "focal_tgt": "PagedIterable<? extends Resource> list();",
        "test_src": "@Test(description = \"GET /v${apiVersion}/{tenantId}/flavors\") public void testListFlavors() throws Exception { for (String zoneId : zones) { FlavorApi api = novaContext.getApi().getFlavorApiForZone(zoneId); Set<? extends Resource> response = api.listFlavors(); assertNotNull(response); assertFalse(response.isEmpty()); for (Resource flavor : response) { assertNotNull(flavor.getId()); assertNotNull(flavor.getName()); assertNotNull(flavor.getLinks()); } } }",
        "test_tgt": "@Test(description = \"GET /v${apiVersion}/{tenantId}/flavors\") public void testListFlavors() throws Exception { for (String zoneId : zones) { FlavorApi api = novaContext.getApi().getFlavorApiForZone(zoneId); Set<? extends Resource> response = api.list().concat().toImmutableSet(); assertNotNull(response); assertFalse(response.isEmpty()); for (Resource flavor : response) { assertNotNull(flavor.getId()); assertNotNull(flavor.getName()); assertNotNull(flavor.getLinks()); } } }",
        "label": 1,
        "edit_seq": [
            [
                "Set",
                "PagedIterable",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "Resource",
                "Resource",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "listFlavors",
                "list",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static byte[] getChecksum(String algorithm, File file) throws FileNotFoundException, NoSuchAlgorithmException { InputStream fis = new FileInputStream(file); byte[] buffer = new byte[1024]; MessageDigest complete = MessageDigest.getInstance(algorithm); int numRead; try { do { numRead = fis.read(buffer); if (numRead > 0) { complete.update(buffer, 0, numRead); } } while (numRead != -1); } catch (IOException ex) { Logger.getLogger(Checksum.class.getName()).log(Level.SEVERE, null, ex); } finally { try { fis.close(); } catch (IOException ex) { Logger.getLogger(Checksum.class.getName()).log(Level.SEVERE, null, ex); } } return complete.digest(); }",
        "focal_tgt": "public static byte[] getChecksum(String algorithm, File file) throws NoSuchAlgorithmException, IOException { InputStream fis = null; byte[] buffer = new byte[1024]; MessageDigest complete = MessageDigest.getInstance(algorithm); int numRead; try { fis = new FileInputStream(file); do { numRead = fis.read(buffer); if (numRead > 0) { complete.update(buffer, 0, numRead); } } while (numRead != -1); } finally { if (fis != null) { try { fis.close(); } catch (IOException ex) { Logger.getLogger(Checksum.class.getName()).log(Level.SEVERE, null, ex); } } } return complete.digest(); }",
        "test_src": "@Test public void testGetChecksum_FileNotFound() throws Exception { System.out.println(\"getChecksum (invalid path)\"); String algorithm = \"MD5\"; File file = new File(\"not a valid file\"); boolean exceptionThrown = false; try { byte[] result = Checksum.getChecksum(algorithm, file); } catch (FileNotFoundException ex) { exceptionThrown = true; } assertTrue(exceptionThrown); }",
        "test_tgt": "@Test public void testGetChecksum_FileNotFound() throws Exception { System.out.println(\"getChecksum (invalid path)\"); String algorithm = \"MD5\"; File file = new File(\"not a valid file\"); boolean exceptionThrown = false; try { byte[] result = Checksum.getChecksum(algorithm, file); } catch (IOException ex) { exceptionThrown = true; } assertTrue(exceptionThrown); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "getChecksum",
                "getChecksum",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "algorithm",
                "algorithm",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "FileNotFoundException",
                "NoSuchAlgorithmException",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "NoSuchAlgorithmException",
                "IOException",
                "replace"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "InputStream",
                "InputStream",
                "equal"
            ],
            [
                "fis",
                "fis",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "FileInputStream",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "file",
                "",
                "delete"
            ],
            [
                ")",
                "null",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "buffer",
                "buffer",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1024",
                "1024",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "MessageDigest",
                "MessageDigest",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "MessageDigest",
                "MessageDigest",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getInstance",
                "getInstance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "algorithm",
                "algorithm",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "numRead",
                "numRead",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "fis",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "FileInputStream",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "file",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "do",
                "do",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "numRead",
                "numRead",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "fis",
                "fis",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "buffer",
                "buffer",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "numRead",
                "numRead",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "buffer",
                "buffer",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "numRead",
                "numRead",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "numRead",
                "numRead",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "finally",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "",
                "delete"
            ],
            [
                "ex",
                "fis",
                "replace"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "Logger",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getLogger",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Checksum",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "class",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getName",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "log",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Level",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "SEVERE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ex",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "finally",
                "",
                "delete"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fis",
                "fis",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getLogger",
                "getLogger",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Checksum",
                "Checksum",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Level",
                "Level",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEVERE",
                "SEVERE",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "digest",
                "digest",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void analyze(Dependency dependency) throws AnalysisException { String fileName = dependency.getFileName(); int pos = fileName.lastIndexOf(\".\"); if (pos > 0) { fileName = fileName.substring(0, pos - 1); } dependency.getProductEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); dependency.getVendorEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); if (fileName.matches(\".*\\\\d.*\")) { dependency.getVersionEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); } }",
        "focal_tgt": "public void analyze(Dependency dependency, Engine engine) throws AnalysisException { String fileName = dependency.getFileName(); int pos = fileName.lastIndexOf(\".\"); if (pos > 0) { fileName = fileName.substring(0, pos - 1); } dependency.getProductEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); dependency.getVendorEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); if (fileName.matches(\".*\\\\d.*\")) { dependency.getVersionEvidence().addEvidence(\"file\", \"name\", fileName, Evidence.Confidence.HIGH); } }",
        "test_src": "@Test public void testAnalyze() throws Exception { System.out.println(\"analyze\"); File file = new File(this.getClass().getClassLoader().getResource(\"struts2-core-2.1.2.jar\").getPath()); Dependency result = new Dependency(file); FileNameAnalyzer instance = new FileNameAnalyzer(); instance.analyze(result); assertTrue(result.getVendorEvidence().toString().toLowerCase().contains(\"struts\")); }",
        "test_tgt": "@Test public void testAnalyze() throws Exception { System.out.println(\"analyze\"); File file = new File(this.getClass().getClassLoader().getResource(\"struts2-core-2.1.2.jar\").getPath()); Dependency result = new Dependency(file); FileNameAnalyzer instance = new FileNameAnalyzer(); instance.analyze(result, null); assertTrue(result.getVendorEvidence().toString().toLowerCase().contains(\"struts\")); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "analyze",
                "analyze",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Dependency",
                "Dependency",
                "equal"
            ],
            [
                "dependency",
                "dependency",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Engine",
                "insert"
            ],
            [
                "",
                "engine",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "AnalysisException",
                "AnalysisException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "dependency",
                "dependency",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getFileName",
                "getFileName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lastIndexOf",
                "lastIndexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "substring",
                "substring",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pos",
                "pos",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "dependency",
                "dependency",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getProductEvidence",
                "getProductEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addEvidence",
                "addEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Evidence",
                "Evidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Confidence",
                "Confidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "HIGH",
                "HIGH",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "dependency",
                "dependency",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getVendorEvidence",
                "getVendorEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addEvidence",
                "addEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Evidence",
                "Evidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Confidence",
                "Confidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "HIGH",
                "HIGH",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "matches",
                "matches",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "dependency",
                "dependency",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getVersionEvidence",
                "getVersionEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addEvidence",
                "addEvidence",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Evidence",
                "Evidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Confidence",
                "Confidence",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "HIGH",
                "HIGH",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void removeProperty(String key) { LOCAL_SETTINGS.get().props.remove(key); }",
        "focal_tgt": "public void removeProperty(String key) { props.remove(key); }",
        "test_src": "@Test public void testRemoveProperty() { String key = \"SomeKey\"; String value = \"value\"; String dfault = \"default\"; Settings.setString(key, value); String ret = Settings.getString(key); Assert.assertEquals(value, ret); Settings.removeProperty(key); ret = Settings.getString(key, dfault); Assert.assertEquals(dfault, ret); }",
        "test_tgt": "@Test public void testRemoveProperty() { String key = \"SomeKey\"; String value = \"value\"; String dfault = \"default\"; getSettings().setString(key, value); String ret = getSettings().getString(key); Assert.assertEquals(value, ret); getSettings().removeProperty(key); ret = getSettings().getString(key, dfault); Assert.assertEquals(dfault, ret); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "",
                "delete"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "removeProperty",
                "removeProperty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOCAL_SETTINGS",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "props",
                "props",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public List<OffsetPosition> inAbbrevJournalNames(String s) { if (abbrevJournalPattern == null) { initJournals(); } List<OffsetPosition> results = abbrevJournalPattern.matcher(s); return results; }",
        "focal_tgt": "public List<OffsetPosition> tokenPositionsAbbrevJournalNames(String s) { if (abbrevJournalPattern == null) { initJournals(); } List<OffsetPosition> results = abbrevJournalPattern.matchToken(s); return results; }",
        "test_src": "@Test public void testInAbbrevJournalNames_case1() throws Exception { String input = \"Nature\"; List<OffsetPosition> journalsPositions = target.inAbbrevJournalNames(input); assertNotNull(journalsPositions); assertThat(journalsPositions, hasSize(1)); assertThat(journalsPositions.get(0).start, is(0)); }",
        "test_tgt": "@Test public void testInAbbrevJournalNames_case1() throws Exception { String input = \"Nature\"; List<OffsetPosition> journalsPositions = target.tokenPositionsAbbrevJournalNames(input); assertNotNull(journalsPositions); assertThat(journalsPositions, hasSize(1)); assertThat(journalsPositions.get(0).start, is(0)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "inAbbrevJournalNames",
                "tokenPositionsAbbrevJournalNames",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "abbrevJournalPattern",
                "abbrevJournalPattern",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "initJournals",
                "initJournals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "abbrevJournalPattern",
                "abbrevJournalPattern",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "matcher",
                "matchToken",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public List<OffsetPosition> matcher(List<String> tokens) { StringBuilder text = new StringBuilder(); for (String token : tokens) { text.append(processToken(token)); } return matcher(text.toString()); }",
        "focal_tgt": "public List<OffsetPosition> matchLayoutToken(List<LayoutToken> tokens) { return matchLayoutToken(tokens, true); }",
        "test_src": "@Test public void testMatcherList_location() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final List<OffsetPosition> offsetPositions = target.matcher(Arrays.asList(\"I\", \"m\", \"walking\", \"in\", \"The\", \"Bronx\")); assertThat(offsetPositions, hasSize(2)); assertThat(offsetPositions.get(0).start, is(4)); assertThat(offsetPositions.get(0).end, is(5)); assertThat(offsetPositions.get(1).start, is(5)); assertThat(offsetPositions.get(1).end, is(5)); }",
        "test_tgt": "@Test public void testMatcherList_location() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final String input = \"I'm walking in The Bronx\"; List<LayoutToken> tokenisedInput = GrobidAnalyzer.getInstance().tokenizeWithLayoutToken(input); final List<OffsetPosition> offsetPositions = target.matchLayoutToken(tokenisedInput); assertThat(offsetPositions, hasSize(2)); assertThat(offsetPositions.get(0).start, is(8)); assertThat(offsetPositions.get(0).end, is(10)); assertThat(offsetPositions.get(1).start, is(10)); assertThat(offsetPositions.get(1).end, is(10)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "matcher",
                "matchLayoutToken",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "LayoutToken",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "tokens",
                "tokens",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "StringBuilder",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "StringBuilder",
                "return",
                "replace"
            ],
            [
                "",
                "matchLayoutToken",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "tokens",
                "tokens",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "append",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "processToken",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ")",
                ",",
                "replace"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "matcher",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "toString",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "public List<OffsetPosition> match(String text) { List<OffsetPosition> results = new ArrayList<>(); List<Integer> startPosition = new ArrayList<>(); List<Integer> lastNonSeparatorPos = new ArrayList<>(); List<Map> currentMatches = new ArrayList<>(); int currentPos = 0; StringTokenizer st = new StringTokenizer(text, delimiters, true); while (st.hasMoreTokens()) { String token = st.nextToken(); if (token.equals(\" \")) { currentPos++; continue; } if (delimiters.indexOf(token) != -1) { currentPos++; continue; } if ((token.charAt(0) == '<') && (token.charAt(token.length() - 1) == '>')) { currentPos += token.length(); continue; } token = token.toLowerCase(); int i = 0; List<Map> matchesTreeList = new ArrayList<>(); List<Integer> matchesPosition = new ArrayList<>(); List<Integer> new_lastNonSeparatorPos = new ArrayList<>(); for (Map currentMatch : currentMatches) { Map childMatches = (Map) currentMatch.get(token); if (childMatches != null) { matchesTreeList.add(childMatches); matchesPosition.add(startPosition.get(i)); new_lastNonSeparatorPos.add(currentPos + token.length()); } childMatches = (Map) currentMatch.get(\"#\"); if (childMatches != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } Map match = (Map) terms.get(token); if (match != null) { matchesTreeList.add(match); matchesPosition.add(currentPos); new_lastNonSeparatorPos.add(currentPos + token.length()); } currentMatches = matchesTreeList; startPosition = matchesPosition; lastNonSeparatorPos = new_lastNonSeparatorPos; currentPos += token.length(); } int i = 0; if (currentMatches != null) { for (Map tt : currentMatches) { Map t2 = (Map) tt.get(\"#\"); if (t2 != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } } return results; }",
        "focal_tgt": "public List<OffsetPosition> matchCharacter(String text) { List<OffsetPosition> results = new ArrayList<>(); List<Integer> startPosition = new ArrayList<>(); List<Integer> lastNonSeparatorPos = new ArrayList<>(); List<Map> currentMatches = new ArrayList<>(); int currentPos = 0; StringTokenizer st = new StringTokenizer(text, delimiters, true); while (st.hasMoreTokens()) { String token = st.nextToken(); if (token.equals(\" \")) { currentPos++; continue; } if (delimiters.indexOf(token) != -1) { currentPos++; continue; } token = token.toLowerCase(); int i = 0; List<Map> matchesTreeList = new ArrayList<>(); List<Integer> matchesPosition = new ArrayList<>(); List<Integer> new_lastNonSeparatorPos = new ArrayList<>(); for (Map currentMatch : currentMatches) { Map childMatches = (Map) currentMatch.get(token); if (childMatches != null) { matchesTreeList.add(childMatches); matchesPosition.add(startPosition.get(i)); new_lastNonSeparatorPos.add(currentPos + token.length()); } childMatches = (Map) currentMatch.get(\"#\"); if (childMatches != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } Map match = (Map) terms.get(token); if (match != null) { matchesTreeList.add(match); matchesPosition.add(currentPos); new_lastNonSeparatorPos.add(currentPos + token.length()); } currentMatches = matchesTreeList; startPosition = matchesPosition; lastNonSeparatorPos = new_lastNonSeparatorPos; currentPos += token.length(); } int i = 0; if (currentMatches != null) { for (Map tt : currentMatches) { Map t2 = (Map) tt.get(\"#\"); if (t2 != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } } return results; }",
        "test_src": "@Test public void testMatchString_location() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final String input = \"I'm walking in The Bronx\"; final List<OffsetPosition> positions = target.match(input); assertThat(positions, hasSize(2)); assertThat(positions.get(0).start, is(15)); assertThat(positions.get(0).end, is(24)); assertThat(positions.get(1).start, is(19)); assertThat(positions.get(1).end, is(24)); }",
        "test_tgt": "@Test public void testMatchString_location() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final String input = \"I'm walking in The Bronx\"; final List<OffsetPosition> positions = target.matchCharacter(input); assertThat(positions, hasSize(2)); assertThat(positions.get(0).start, is(15)); assertThat(positions.get(0).end, is(24)); assertThat(positions.get(1).start, is(19)); assertThat(positions.get(1).end, is(24)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "match",
                "matchCharacter",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "StringTokenizer",
                "StringTokenizer",
                "equal"
            ],
            [
                "st",
                "st",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringTokenizer",
                "StringTokenizer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "delimiters",
                "delimiters",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "st",
                "st",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hasMoreTokens",
                "hasMoreTokens",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "st",
                "st",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "nextToken",
                "nextToken",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "delimiters",
                "delimiters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "indexOf",
                "indexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "charAt",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "charAt",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "currentPos",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "continue",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "terms",
                "terms",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "tt",
                "tt",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "t2",
                "t2",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "tt",
                "tt",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "t2",
                "t2",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public List<OffsetPosition> match(List<String> tokens) { List<OffsetPosition> results = new ArrayList<>(); List<Integer> startPosition = new ArrayList<>(); List<Integer> lastNonSeparatorPos = new ArrayList<>(); List<Map> currentMatches = new ArrayList<>(); int currentPos = 0; for (String token : tokens) { if (token.equals(\" \")) { currentPos++; continue; } if (delimiters.indexOf(token) != -1) { currentPos++; continue; } if ((token.charAt(0) == '<') && (token.charAt(token.length() - 1) == '>')) { currentPos++; continue; } token = token.toLowerCase(); int i = 0; List<Map> matchesTreeList = new ArrayList<>(); List<Integer> matchesPosition = new ArrayList<>(); List<Integer> new_lastNonSeparatorPos = new ArrayList<>(); for (Map currentMatch : currentMatches) { Map childMatches = (Map) currentMatch.get(token); if (childMatches != null) { matchesTreeList.add(childMatches); matchesPosition.add(startPosition.get(i)); new_lastNonSeparatorPos.add(currentPos); } childMatches = (Map) currentMatch.get(\"#\"); if (childMatches != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } Map match = (Map) terms.get(token); if (match != null) { matchesTreeList.add(match); matchesPosition.add(currentPos); new_lastNonSeparatorPos.add(currentPos); } currentMatches = matchesTreeList; startPosition = matchesPosition; lastNonSeparatorPos = new_lastNonSeparatorPos; currentPos++; } int i = 0; if (currentMatches != null) { for (Map tt : currentMatches) { Map t2 = (Map) tt.get(\"#\"); if (t2 != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } } return results; }",
        "focal_tgt": "public List<OffsetPosition> matchCharacterLayoutToken(List<LayoutToken> tokens) { List<OffsetPosition> results = new ArrayList<>(); List<Integer> startPosition = new ArrayList<>(); List<Integer> lastNonSeparatorPos = new ArrayList<>(); List<Map> currentMatches = new ArrayList<>(); int currentPos = 0; for (LayoutToken token : tokens) { if (token.getText().equals(\" \")) { currentPos++; continue; } if (delimiters.indexOf(token.getText()) != -1) { currentPos++; continue; } String tokenString = token.getText().toLowerCase(); int i = 0; List<Map> matchesTreeList = new ArrayList<>(); List<Integer> matchesPosition = new ArrayList<>(); List<Integer> new_lastNonSeparatorPos = new ArrayList<>(); for (Map currentMatch : currentMatches) { Map childMatches = (Map) currentMatch.get(tokenString); if (childMatches != null) { matchesTreeList.add(childMatches); matchesPosition.add(startPosition.get(i)); new_lastNonSeparatorPos.add(currentPos); } childMatches = (Map) currentMatch.get(\"#\"); if (childMatches != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } Map match = (Map) terms.get(tokenString); if (match != null) { matchesTreeList.add(match); matchesPosition.add(currentPos); new_lastNonSeparatorPos.add(currentPos); } currentMatches = matchesTreeList; startPosition = matchesPosition; lastNonSeparatorPos = new_lastNonSeparatorPos; currentPos++; } int i = 0; if (currentMatches != null) { for (Map tt : currentMatches) { Map t2 = (Map) tt.get(\"#\"); if (t2 != null) { OffsetPosition ofp = new OffsetPosition(startPosition.get(i), lastNonSeparatorPos.get(i)); results.add(ofp); } i++; } } return results; }",
        "test_src": "@Test public void testMatchList_location_1Match() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final String input = \"This is Bronx\"; final List<OffsetPosition> offsetPositions = target.match(Arrays.asList(input.split(\" \"))); assertThat(offsetPositions, hasSize(1)); assertThat(offsetPositions.get(0).start, is(2)); assertThat(offsetPositions.get(0).end, is(2)); }",
        "test_tgt": "@Test public void testMatchList_location_1Match() throws Exception { target = new FastMatcher(this.getClass().getResourceAsStream(\"location.txt\")); final String input = \"This is Bronx\"; List<LayoutToken> tokenisedInput = GrobidAnalyzer.getInstance().tokenizeWithLayoutToken(input); final List<OffsetPosition> offsetPositions = target.matchCharacterLayoutToken(tokenisedInput); assertThat(offsetPositions, hasSize(1)); assertThat(offsetPositions.get(0).start, is(4)); assertThat(offsetPositions.get(0).end, is(4)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "match",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "String",
                "matchCharacterLayoutToken",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "LayoutToken",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "tokens",
                "tokens",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "LayoutToken",
                "replace"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "tokens",
                "tokens",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "",
                "getText",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "delimiters",
                "delimiters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "indexOf",
                "indexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getText",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "String",
                "replace"
            ],
            [
                "",
                "tokenString",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "charAt",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "charAt",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "'",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "currentPos",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "continue",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "token",
                "getText",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ArrayList",
                "ArrayList",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "tokenString",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "currentMatch",
                "currentMatch",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "childMatches",
                "childMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "terms",
                "terms",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "tokenString",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "matchesTreeList",
                "matchesTreeList",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "matchesPosition",
                "matchesPosition",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new_lastNonSeparatorPos",
                "new_lastNonSeparatorPos",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "currentPos",
                "currentPos",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "tt",
                "tt",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "currentMatches",
                "currentMatches",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "t2",
                "t2",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "tt",
                "tt",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "t2",
                "t2",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OffsetPosition",
                "OffsetPosition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "startPosition",
                "startPosition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lastNonSeparatorPos",
                "lastNonSeparatorPos",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ofp",
                "ofp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public String downloadFileFromServer(String url, String fileName) throws Exception { String localDir = getLocalDownloadDirPath(); RemoteUrl remoteUrl = new RemoteUrl(url, hostList); return restfulMgr .downloadFromServer(remoteUrl, fileName, localDir, this.enableLocalDownloadDirInClassPath, retryTime, retrySleepSeconds); }",
        "focal_tgt": "public String downloadFileFromServer(String url, String fileName, String targetFileDir) throws Exception { String localDir = getLocalDownloadDirPath(); RemoteUrl remoteUrl = new RemoteUrl(url, hostList); return restfulMgr .downloadFromServer(remoteUrl, fileName, localDir, targetFileDir, retryTime, retrySleepSeconds); }",
        "test_src": "@Test public void testDownloadFileFromServer() throws Exception { final RestfulMgr restfulMgr = new RestfulMgrMock().getMockInstance(); FetcherMgr fetcherMgr = new FetcherMgrImpl(restfulMgr, 3, 5, true, \"\", new ArrayList<String>()); try { String valueString = fetcherMgr.downloadFileFromServer(requestUrl, RestfulMgrMock.defaultFileName); Assert.assertEquals(RestfulMgrMock.defaultFileName, valueString); } catch (Exception e) { e.printStackTrace(); Assert.assertTrue(false); } }",
        "test_tgt": "@Test public void testDownloadFileFromServer() throws Exception { final RestfulMgr restfulMgr = new RestfulMgrMock().getMockInstance(); FetcherMgr fetcherMgr = new FetcherMgrImpl(restfulMgr, 3, 5, true, \"\", new ArrayList<String>()); try { String valueString = fetcherMgr.downloadFileFromServer(requestUrl, RestfulMgrMock.defaultFileName, \"./disconf\"); Assert.assertEquals(RestfulMgrMock.defaultFileName, valueString); } catch (Exception e) { e.printStackTrace(); Assert.assertTrue(false); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "downloadFileFromServer",
                "downloadFileFromServer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "targetFileDir",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "localDir",
                "localDir",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getLocalDownloadDirPath",
                "getLocalDownloadDirPath",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RemoteUrl",
                "RemoteUrl",
                "equal"
            ],
            [
                "remoteUrl",
                "remoteUrl",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "RemoteUrl",
                "RemoteUrl",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "hostList",
                "hostList",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "restfulMgr",
                "restfulMgr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "downloadFromServer",
                "downloadFromServer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "remoteUrl",
                "remoteUrl",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "fileName",
                "fileName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "localDir",
                "localDir",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "enableLocalDownloadDirInClassPath",
                "targetFileDir",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "retryTime",
                "retryTime",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "retrySleepSeconds",
                "retrySleepSeconds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void setImage(ImageFloat32 image) { scaleSpace.initialize(image); usedScales.clear(); do { for (int i = 0; i < scaleSpace.getNumScales(); i++) { ImageFloat32 scaleImage = scaleSpace.getImageScale(i); double sigma = scaleSpace.computeSigmaScale(i); double pixelCurrentToInput = scaleSpace.pixelScaleCurrentToInput(); ImageScale scale = allScales.get(usedScales.size()); scale.derivX.reshape(scaleImage.width,scaleImage.height); scale.derivY.reshape(scaleImage.width,scaleImage.height); gradient.process(scaleImage,scale.derivX,scale.derivY); scale.imageToInput = pixelCurrentToInput; scale.sigma = sigma; usedScales.add(scale); } } while( scaleSpace.computeNextOctave() ); }",
        "focal_tgt": "public void setImage(GrayF32 image) { scaleSpace.initialize(image); usedScales.clear(); do { for (int i = 0; i < scaleSpace.getNumScales(); i++) { GrayF32 scaleImage = scaleSpace.getImageScale(i); double sigma = scaleSpace.computeSigmaScale(i); double pixelCurrentToInput = scaleSpace.pixelScaleCurrentToInput(); ImageScale scale = allScales.get(usedScales.size()); scale.derivX.reshape(scaleImage.width,scaleImage.height); scale.derivY.reshape(scaleImage.width,scaleImage.height); gradient.process(scaleImage,scale.derivX,scale.derivY); scale.imageToInput = pixelCurrentToInput; scale.sigma = sigma; usedScales.add(scale); } } while( scaleSpace.computeNextOctave() ); }",
        "test_src": "@Test public void setImage() { ImageFloat32 image = new ImageFloat32(640,480); GImageMiscOps.fillUniform(image,rand,0,200); UnrollSiftScaleSpaceGradient alg = new UnrollSiftScaleSpaceGradient(new SiftScaleSpace(-1,3,3,2)); alg.setImage(image); SiftScaleSpace ss = new SiftScaleSpace(-1,3,3,2); ss.initialize(image); ImageFloat32 derivX = new ImageFloat32(640,480); ImageFloat32 derivY = new ImageFloat32(640,480); int total = 0; do { for (int i = 0; i < ss.getNumScales(); i++, total++ ) { ImageFloat32 scaleImage = ss.getImageScale(i); derivX.reshape(scaleImage.width,scaleImage.height); derivY.reshape(scaleImage.width,scaleImage.height); GImageDerivativeOps.gradient(DerivativeType.THREE,scaleImage,derivX,derivY, BorderType.EXTENDED); UnrollSiftScaleSpaceGradient.ImageScale found = alg.usedScales.get(total); BoofTesting.assertEquals(derivX,found.derivX,1e-4); BoofTesting.assertEquals(derivY,found.derivY,1e-4); assertEquals(ss.computeSigmaScale(i),found.sigma,1e-4); assertEquals(image.width/(double)scaleImage.width,found.imageToInput,1e-4); } } while( ss.computeNextOctave() ); }",
        "test_tgt": "@Test public void setImage() { GrayF32 image = new GrayF32(640,480); GImageMiscOps.fillUniform(image,rand,0,200); UnrollSiftScaleSpaceGradient alg = new UnrollSiftScaleSpaceGradient(new SiftScaleSpace(-1,3,3,2)); alg.setImage(image); SiftScaleSpace ss = new SiftScaleSpace(-1,3,3,2); ss.initialize(image); GrayF32 derivX = new GrayF32(640,480); GrayF32 derivY = new GrayF32(640,480); int total = 0; do { for (int i = 0; i < ss.getNumScales(); i++, total++ ) { GrayF32 scaleImage = ss.getImageScale(i); derivX.reshape(scaleImage.width,scaleImage.height); derivY.reshape(scaleImage.width,scaleImage.height); GImageDerivativeOps.gradient(DerivativeType.THREE,scaleImage,derivX,derivY, BorderType.EXTENDED); UnrollSiftScaleSpaceGradient.ImageScale found = alg.usedScales.get(total); BoofTesting.assertEquals(derivX,found.derivX,1e-4); BoofTesting.assertEquals(derivY,found.derivY,1e-4); assertEquals(ss.computeSigmaScale(i),found.sigma,1e-4); assertEquals(image.width/(double)scaleImage.width,found.imageToInput,1e-4); } } while( ss.computeNextOctave() ); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "setImage",
                "setImage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ImageFloat32",
                "GrayF32",
                "replace"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "initialize",
                "initialize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "usedScales",
                "usedScales",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clear",
                "clear",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "do",
                "do",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumScales",
                "getNumScales",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ImageFloat32",
                "GrayF32",
                "replace"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getImageScale",
                "getImageScale",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "sigma",
                "sigma",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "computeSigmaScale",
                "computeSigmaScale",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "pixelCurrentToInput",
                "pixelCurrentToInput",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "pixelScaleCurrentToInput",
                "pixelScaleCurrentToInput",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ImageScale",
                "ImageScale",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "allScales",
                "allScales",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "usedScales",
                "usedScales",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivX",
                "derivX",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reshape",
                "reshape",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivY",
                "derivY",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reshape",
                "reshape",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "gradient",
                "gradient",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "process",
                "process",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleImage",
                "scaleImage",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivX",
                "derivX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivY",
                "derivY",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "imageToInput",
                "imageToInput",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pixelCurrentToInput",
                "pixelCurrentToInput",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sigma",
                "sigma",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "sigma",
                "sigma",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "usedScales",
                "usedScales",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "computeNextOctave",
                "computeNextOctave",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean fit( List<Point2D_I32> contour , GrowQueue_I32 input , GrowQueue_I32 output ) { this.contour = contour; output.setTo(input); removeDuplicates(output); if( output.size() <= 3 ) return false; computeSegmentEnergy(output); double total = 0; for (int i = 0; i < output.size(); i++) { total += energySegment[i]; } FitLinesToContour fit = new FitLinesToContour(); fit.setContour(contour); boolean modified = false; while( output.size() > 3 ) { double bestEnergy = total; boolean betterFound = false; bestCorners.reset(); for (int i = 0; i < output.size(); i++) { workCorners1.reset(); for (int j = 0; j < output.size(); j++) { if( i != j ) { workCorners1.add(output.get(j)); } } removeDuplicates(workCorners1); if( workCorners1.size() > 3 ) { int anchor0 = CircularIndex.addOffset(i, -2, workCorners1.size()); int anchor1 = CircularIndex.addOffset(i, 1, workCorners1.size()); if (fit.fitAnchored(anchor0, anchor1, workCorners1, workCorners2)) { double score = 0; for (int j = 0, k = workCorners2.size() - 1; j < workCorners2.size(); k = j, j++) { score += computeSegmentEnergy(workCorners2, k, j); } if (score < bestEnergy) { betterFound = true; bestEnergy = score; bestCorners.reset(); bestCorners.addAll(workCorners2); } } } } if ( betterFound ) { modified = true; total = bestEnergy; output.setTo(bestCorners); } else { break; } } return modified; }",
        "focal_tgt": "public boolean prune(List<Point2D_I32> contour, GrowQueue_I32 input, GrowQueue_I32 output) { this.contour = contour; output.setTo(input); removeDuplicates(output); if( output.size() <= 3 ) return false; computeSegmentEnergy(output); double total = 0; for (int i = 0; i < output.size(); i++) { total += energySegment[i]; } FitLinesToContour fit = new FitLinesToContour(); fit.setContour(contour); boolean modified = false; while( output.size() > 3 ) { double bestEnergy = total; boolean betterFound = false; bestCorners.reset(); for (int i = 0; i < output.size(); i++) { workCorners1.reset(); for (int j = 0; j < output.size(); j++) { if( i != j ) { workCorners1.add(output.get(j)); } } removeDuplicates(workCorners1); if( workCorners1.size() > 3 ) { int anchor0 = CircularIndex.addOffset(i, -2, workCorners1.size()); int anchor1 = CircularIndex.addOffset(i, 1, workCorners1.size()); if (fit.fitAnchored(anchor0, anchor1, workCorners1, workCorners2)) { double score = 0; for (int j = 0, k = workCorners2.size() - 1; j < workCorners2.size(); k = j, j++) { score += computeSegmentEnergy(workCorners2, k, j); } if (score < bestEnergy) { betterFound = true; bestEnergy = score; bestCorners.reset(); bestCorners.addAll(workCorners2); } } } } if ( betterFound ) { modified = true; total = bestEnergy; output.setTo(bestCorners); } else { break; } } return modified; }",
        "test_src": "@Test public void fit_obvious() { List<Point2D_I32> contours = createSquare(10,12,20,30); GrowQueue_I32 corners = createSquareCorners(10, 12, 20, 30); corners.add(corners.get(3)+4); MinimizeEnergyPrune alg = new MinimizeEnergyPrune(1); GrowQueue_I32 output = new GrowQueue_I32(); alg.fit(contours,corners,output); assertEquals(4, output.size()); for (int i = 0; i < 4; i++) { assertEquals(corners.get(i),output.get(i)); } }",
        "test_tgt": "@Test public void prune_obvious() { List<Point2D_I32> contours = createSquare(10,12,20,30); GrowQueue_I32 corners = createSquareCorners(10, 12, 20, 30); corners.add(corners.get(3)+4); MinimizeEnergyPrune alg = new MinimizeEnergyPrune(1); GrowQueue_I32 output = new GrowQueue_I32(); alg.prune(contours, corners, output); assertEquals(4, output.size()); checkMatched(corners, output); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "fit",
                "prune",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Point2D_I32",
                "Point2D_I32",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "contour",
                "contour",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "GrowQueue_I32",
                "GrowQueue_I32",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "GrowQueue_I32",
                "GrowQueue_I32",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contour",
                "contour",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "contour",
                "contour",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTo",
                "setTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "removeDuplicates",
                "removeDuplicates",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "computeSegmentEnergy",
                "computeSegmentEnergy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "energySegment",
                "energySegment",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "FitLinesToContour",
                "FitLinesToContour",
                "equal"
            ],
            [
                "fit",
                "fit",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FitLinesToContour",
                "FitLinesToContour",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fit",
                "fit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setContour",
                "setContour",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "contour",
                "contour",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "modified",
                "modified",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "bestEnergy",
                "bestEnergy",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "betterFound",
                "betterFound",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bestCorners",
                "bestCorners",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reset",
                "reset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reset",
                "reset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "removeDuplicates",
                "removeDuplicates",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "anchor0",
                "anchor0",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "CircularIndex",
                "CircularIndex",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addOffset",
                "addOffset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "anchor1",
                "anchor1",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "CircularIndex",
                "CircularIndex",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addOffset",
                "addOffset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fit",
                "fit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fitAnchored",
                "fitAnchored",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "anchor0",
                "anchor0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "anchor1",
                "anchor1",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workCorners1",
                "workCorners1",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "workCorners2",
                "workCorners2",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "score",
                "score",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "workCorners2",
                "workCorners2",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "workCorners2",
                "workCorners2",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "score",
                "score",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "computeSegmentEnergy",
                "computeSegmentEnergy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workCorners2",
                "workCorners2",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "k",
                "k",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "score",
                "score",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "bestEnergy",
                "bestEnergy",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "betterFound",
                "betterFound",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bestEnergy",
                "bestEnergy",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "score",
                "score",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bestCorners",
                "bestCorners",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reset",
                "reset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bestCorners",
                "bestCorners",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addAll",
                "addAll",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "workCorners2",
                "workCorners2",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "betterFound",
                "betterFound",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "modified",
                "modified",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bestEnergy",
                "bestEnergy",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTo",
                "setTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bestCorners",
                "bestCorners",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "modified",
                "modified",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "void computeCostInnerD(GrayU16 costXD, int idxCost, int idxLrPrev, int lengthLocalD ) { idxLrPrev += 1; for (int d = 1; d < lengthLocalD-1; d++, idxLrPrev++) { int cost = costXD.data[idxCost+d] & 0xFFFF; int b = workCostLr[idxLrPrev-1]&0xFFFF; int a = workCostLr[idxLrPrev ]&0xFFFF; int c = workCostLr[idxLrPrev+1]&0xFFFF; b += penalty1; c += penalty1; if( b < a ) a = b; if( c < a ) a = c; if( penalty2 < a ) a = penalty2; if( cost + a > Short.MAX_VALUE ) throw new RuntimeException(\"Egads\"); workCostLr[idxLrPrev+this.lengthD] = (short)(cost + a); } }",
        "focal_tgt": "void computeCostInnerD(GrayU16 costXD, int idxCost, int idxLrPrev, int lengthLocalD , short[] workCostLr) { idxLrPrev += 1; for (int d = 1; d < lengthLocalD-1; d++, idxLrPrev++) { int cost = costXD.data[idxCost+d] & 0xFFFF; int b = workCostLr[idxLrPrev-1]&0xFFFF; int a = workCostLr[idxLrPrev ]&0xFFFF; int c = workCostLr[idxLrPrev+1]&0xFFFF; b += penalty1; c += penalty1; if( b < a ) a = b; if( c < a ) a = c; if( penalty2 < a ) a = penalty2; if( cost + a > Short.MAX_VALUE ) throw new RuntimeException(\"Egads\"); workCostLr[idxLrPrev+this.lengthD] = (short)(cost + a); } }",
        "test_src": "@Test void computeCostInnerD() { Planar<GrayU16> costYXD = new Planar<>(GrayU16.class,rangeD,width,height); GImageMiscOps.fillUniform(costYXD,rand,0,SgmDisparityCost.MAX_COST); SgmCostAggregation alg = new SgmCostAggregation(); alg.init(costYXD); for (int i = 0; i < alg.workCostLr.length; i++) { alg.workCostLr[i] = (short)rand.nextInt(SgmDisparityCost.MAX_COST); } GrayU16 costXD = costYXD.getBand(2); int x = rangeD + 2; int pathI = 3; int idxCost = costXD.getIndex(0,x); int idxWork = alg.lengthD*pathI; alg.computeCostInnerD(costXD,idxCost,idxWork, rangeD); for (int d = 1; d < rangeD-1; d++) { int cost_p_d = costXD.get(d,x); int l0 = workArray(alg,pathI,d); int l1 = workArray(alg,pathI,d-1) + alg.penalty1; int l2 = workArray(alg,pathI,d+1) + alg.penalty1; int l3 = alg.penalty2; int v = min(min(min(l0,l1),l2),l3); int expected = cost_p_d + v; int found = workArray(alg,pathI+1,d); assertEquals(expected,found); } }",
        "test_tgt": "@Test void computeCostInnerD() { Planar<GrayU16> costYXD = new Planar<>(GrayU16.class,rangeD,width,height); GImageMiscOps.fillUniform(costYXD,rand,0,SgmDisparityCost.MAX_COST); SgmCostAggregation alg = new SgmCostAggregation(); alg.init(costYXD); short[] workCostLr = alg.workspace.get(0).workCostLr; for (int i = 0; i < workCostLr.length; i++) { workCostLr[i] = (short)rand.nextInt(SgmDisparityCost.MAX_COST); } GrayU16 costXD = costYXD.getBand(2); int x = rangeD + 2; int pathI = 3; int idxCost = costXD.getIndex(0,x); int idxWork = alg.lengthD*pathI; alg.computeCostInnerD(costXD,idxCost,idxWork, rangeD, workCostLr); for (int d = 1; d < rangeD-1; d++) { int cost_p_d = costXD.get(d,x); int l0 = workArray(alg,pathI,d); int l1 = workArray(alg,pathI,d-1) + alg.penalty1; int l2 = workArray(alg,pathI,d+1) + alg.penalty1; int l3 = alg.penalty2; int v = min(min(min(l0,l1),l2),l3); int expected = cost_p_d + v; int found = workArray(alg,pathI+1,d); assertEquals(expected,found); } }",
        "label": 1,
        "edit_seq": [
            [
                "void",
                "void",
                "equal"
            ],
            [
                "computeCostInnerD",
                "computeCostInnerD",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "GrayU16",
                "GrayU16",
                "equal"
            ],
            [
                "costXD",
                "costXD",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "idxCost",
                "idxCost",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "lengthLocalD",
                "lengthLocalD",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "short",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "workCostLr",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "lengthLocalD",
                "lengthLocalD",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "cost",
                "cost",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "costXD",
                "costXD",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idxCost",
                "idxCost",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "d",
                "d",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "0xFFFF",
                "0xFFFF",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "workCostLr",
                "workCostLr",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "0xFFFF",
                "0xFFFF",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "workCostLr",
                "workCostLr",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "0xFFFF",
                "0xFFFF",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "workCostLr",
                "workCostLr",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "0xFFFF",
                "0xFFFF",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "penalty1",
                "penalty1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "penalty1",
                "penalty1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "penalty2",
                "penalty2",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "penalty2",
                "penalty2",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "cost",
                "cost",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "Short",
                "Short",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MAX_VALUE",
                "MAX_VALUE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Egads",
                "Egads",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "workCostLr",
                "workCostLr",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "idxLrPrev",
                "idxLrPrev",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lengthD",
                "lengthD",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "short",
                "short",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "cost",
                "cost",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static <K extends Kernel2D> SteerableKernel<K> gaussian( Class<K> kernelType , int orderX , int orderY , int radius ) { if( orderX < 0 || orderX > 4 ) throw new IllegalArgumentException(\"derivX must be from 0 to 4 inclusive.\"); if( orderY < 0 || orderY > 4 ) throw new IllegalArgumentException(\"derivT must be from 0 to 4 inclusive.\"); int order = orderX + orderY; if( order > 4 ) { throw new IllegalArgumentException(\"The total order of x and y can't be greater than 4\"); } int maxOrder = Math.max(orderX,orderY); float sigma = (float)FactoryKernelGaussian.sigmaForRadius(radius,maxOrder); Class kernel1DType = FactoryKernel.get1DType(kernelType); Kernel1D kerX = FactoryKernelGaussian.derivativeK(kernel1DType,orderX,sigma,radius); Kernel1D kerY = FactoryKernelGaussian.derivativeK(kernel1DType,orderY,sigma,radius); Kernel2D kernel = GKernelMath.convolve(kerY,kerX); Kernel2D []basis = new Kernel2D[order+1]; ImageBase image = GKernelMath.convertToImage(kernel); ImageBase imageRotated = image._createNew(image.width,image.height); float centerX = image.width/2; float centerY = image.height/2; basis[0] = kernel; double angleStep = Math.PI/basis.length; for( int index = 1; index <= order; index++ ) { float angle = (float)(angleStep*index); GeneralizedImageOps.fill(imageRotated,0); DistortImageOps.rotate(image,imageRotated, TypeInterpolate.BILINEAR,centerX,centerY,angle); basis[index] = GKernelMath.convertToKernel(imageRotated); } SteerableKernel<K> ret; if( kernelType == Kernel2D_F32.class ) ret = (SteerableKernel<K>)new SteerableKernel_F32(); else ret = (SteerableKernel<K>)new SteerableKernel_I32(); ret.setBasis(FactorySteerCoefficients.polynomial(order),basis); return ret; }",
        "focal_tgt": "public static <K extends Kernel2D> SteerableKernel<K> gaussian(Class<K> kernelType, int orderX, int orderY, double sigma, int radius) { if( orderX < 0 || orderX > 4 ) throw new IllegalArgumentException(\"derivX must be from 0 to 4 inclusive.\"); if( orderY < 0 || orderY > 4 ) throw new IllegalArgumentException(\"derivT must be from 0 to 4 inclusive.\"); int order = orderX + orderY; if( order > 4 ) { throw new IllegalArgumentException(\"The total order of x and y can't be greater than 4\"); } int maxOrder = Math.max(orderX,orderY); if( sigma <= 0 ) sigma = (float)FactoryKernelGaussian.sigmaForRadius(radius,maxOrder); else if( radius <= 0 ) radius = FactoryKernelGaussian.radiusForSigma(sigma,maxOrder); Class kernel1DType = FactoryKernel.get1DType(kernelType); Kernel1D kerX = FactoryKernelGaussian.derivativeK(kernel1DType,orderX,sigma,radius); Kernel1D kerY = FactoryKernelGaussian.derivativeK(kernel1DType,orderY,sigma,radius); Kernel2D kernel = GKernelMath.convolve(kerY,kerX); Kernel2D []basis = new Kernel2D[order+1]; ImageBase image = GKernelMath.convertToImage(kernel); ImageBase imageRotated = image._createNew(image.width,image.height); float centerX = image.width/2; float centerY = image.height/2; basis[0] = kernel; double angleStep = Math.PI/basis.length; for( int index = 1; index <= order; index++ ) { float angle = (float)(angleStep*index); GeneralizedImageOps.fill(imageRotated,0); DistortImageOps.rotate(image,imageRotated, TypeInterpolate.BILINEAR,centerX,centerY,angle); basis[index] = GKernelMath.convertToKernel(imageRotated); } SteerableKernel<K> ret; if( kernelType == Kernel2D_F32.class ) ret = (SteerableKernel<K>)new SteerableKernel_F32(); else ret = (SteerableKernel<K>)new SteerableKernel_I32(); ret.setBasis(FactorySteerCoefficients.polynomial(order),basis); return ret; }",
        "test_src": "@Test public void gaussian() { for( int totalOrder = 1; totalOrder <= 4; totalOrder++ ) { for( int orderX = 0; orderX<= totalOrder; orderX++ ) { int orderY = totalOrder-orderX; SteerableKernel<Kernel2D_F32> alg = FactorySteerable.gaussian(Kernel2D_F32.class,orderX,orderY,10); Kernel2D_F32 k = alg.compute(0.1); boolean notZero = false; for( int y = 0; y < k.width; y++ ) { for( int x = 0; x < k.width; x++ ) { if( k.get(x,y) != 0 ) notZero=true; } } assertTrue(notZero); } } }",
        "test_tgt": "@Test public void gaussian() { for( int totalOrder = 1; totalOrder <= 4; totalOrder++ ) { for( int orderX = 0; orderX<= totalOrder; orderX++ ) { int orderY = totalOrder-orderX; SteerableKernel<Kernel2D_F32> alg = FactorySteerable.gaussian(Kernel2D_F32.class,orderX,orderY, -1, 10); Kernel2D_F32 k = alg.compute(0.1); boolean notZero = false; for( int y = 0; y < k.width; y++ ) { for( int x = 0; x < k.width; x++ ) { if( k.get(x,y) != 0 ) notZero=true; } } assertTrue(notZero); } } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "Kernel2D",
                "Kernel2D",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "SteerableKernel",
                "SteerableKernel",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "gaussian",
                "gaussian",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "kernelType",
                "kernelType",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "double",
                "insert"
            ],
            [
                "",
                "sigma",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "radius",
                "radius",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "derivX",
                "derivX",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                "inclusive",
                "inclusive",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "|",
                "|",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "derivT",
                "derivT",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                "inclusive",
                "inclusive",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "The",
                "The",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                "and",
                "and",
                "equal"
            ],
            [
                "y",
                "y",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "greater",
                "greater",
                "equal"
            ],
            [
                "than",
                "than",
                "equal"
            ],
            [
                "4",
                "4",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "maxOrder",
                "maxOrder",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sigma",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "sigma",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "float",
                "float",
                "equal"
            ],
            [
                "sigma",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "float",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "FactoryKernelGaussian",
                "FactoryKernelGaussian",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sigmaForRadius",
                "sigmaForRadius",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "radius",
                "radius",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "maxOrder",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "radius",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "radius",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "FactoryKernelGaussian",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "radiusForSigma",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sigma",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "maxOrder",
                "maxOrder",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "kernel1DType",
                "kernel1DType",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "FactoryKernel",
                "FactoryKernel",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get1DType",
                "get1DType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kernelType",
                "kernelType",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Kernel1D",
                "Kernel1D",
                "equal"
            ],
            [
                "kerX",
                "kerX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "FactoryKernelGaussian",
                "FactoryKernelGaussian",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivativeK",
                "derivativeK",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kernel1DType",
                "kernel1DType",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "orderX",
                "orderX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sigma",
                "sigma",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "radius",
                "radius",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Kernel1D",
                "Kernel1D",
                "equal"
            ],
            [
                "kerY",
                "kerY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "FactoryKernelGaussian",
                "FactoryKernelGaussian",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "derivativeK",
                "derivativeK",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kernel1DType",
                "kernel1DType",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "orderY",
                "orderY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sigma",
                "sigma",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "radius",
                "radius",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Kernel2D",
                "Kernel2D",
                "equal"
            ],
            [
                "kernel",
                "kernel",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "GKernelMath",
                "GKernelMath",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convolve",
                "convolve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kerY",
                "kerY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "kerX",
                "kerX",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Kernel2D",
                "Kernel2D",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "basis",
                "basis",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Kernel2D",
                "Kernel2D",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ImageBase",
                "ImageBase",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "GKernelMath",
                "GKernelMath",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convertToImage",
                "convertToImage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kernel",
                "kernel",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ImageBase",
                "ImageBase",
                "equal"
            ],
            [
                "imageRotated",
                "imageRotated",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "_createNew",
                "_createNew",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "float",
                "float",
                "equal"
            ],
            [
                "centerX",
                "centerX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "float",
                "float",
                "equal"
            ],
            [
                "centerY",
                "centerY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "basis",
                "basis",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "kernel",
                "kernel",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "angleStep",
                "angleStep",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PI",
                "PI",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "basis",
                "basis",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "float",
                "float",
                "equal"
            ],
            [
                "angle",
                "angle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "float",
                "float",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "angleStep",
                "angleStep",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "GeneralizedImageOps",
                "GeneralizedImageOps",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fill",
                "fill",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "imageRotated",
                "imageRotated",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "DistortImageOps",
                "DistortImageOps",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "rotate",
                "rotate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "image",
                "image",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "imageRotated",
                "imageRotated",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TypeInterpolate",
                "TypeInterpolate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "BILINEAR",
                "BILINEAR",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "centerX",
                "centerX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "centerY",
                "centerY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "angle",
                "angle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "basis",
                "basis",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "GKernelMath",
                "GKernelMath",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convertToKernel",
                "convertToKernel",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "imageRotated",
                "imageRotated",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "SteerableKernel",
                "SteerableKernel",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "kernelType",
                "kernelType",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Kernel2D_F32",
                "Kernel2D_F32",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SteerableKernel",
                "SteerableKernel",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "SteerableKernel_F32",
                "SteerableKernel_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SteerableKernel",
                "SteerableKernel",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "SteerableKernel_I32",
                "SteerableKernel_I32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setBasis",
                "setBasis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "FactorySteerCoefficients",
                "FactorySteerCoefficients",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "polynomial",
                "polynomial",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "order",
                "order",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "basis",
                "basis",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static PointTransform_F32 fullView( IntrinsicParameters param, IntrinsicParameters paramAdj , boolean adjToDistorted ) { PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true, true); RectangleLength2D_F32 bound = DistortImageOps.boundBox_F32(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); double scaleX = bound.width/param.width; double scaleY = bound.height/param.height; double scale = Math.max(scaleX, scaleY); double deltaX = bound.x0; double deltaY = bound.y0; DenseMatrix64F A = new DenseMatrix64F(3,3,true,scale,0,deltaX,0,scale,deltaY,0,0,1); return adjustmentTransform(param, paramAdj, adjToDistorted, remove_p_to_p, A); }",
        "focal_tgt": "public static PointTransform_F32 transform_F32(AdjustmentType type, IntrinsicParameters param, IntrinsicParameters paramAdj, boolean adjToDistorted) { PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true, true); RectangleLength2D_F32 bound; if( type == AdjustmentType.FULL_VIEW ) { bound = DistortImageOps.boundBox_F32(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); } else if( type == AdjustmentType.SHRINK) { bound = LensDistortionOps.boundBoxInside(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); LensDistortionOps.roundInside(bound); } else { throw new IllegalArgumentException(\"Unsupported type \"+type); } double scaleX = bound.width/param.width; double scaleY = bound.height/param.height; double scale,deltaX,deltaY; if( type == AdjustmentType.FULL_VIEW ) { scale = Math.max(scaleX, scaleY); deltaX = bound.x0; deltaY = bound.y0; } else { scale = Math.min(scaleX, scaleY); deltaX = bound.x0 + (scaleX-scale)*param.width/2.0; deltaY = bound.y0 + (scaleY-scale)*param.height/2.0; } DenseMatrix64F A = new DenseMatrix64F(3,3,true,scale,0,deltaX,0,scale,deltaY,0,0,1); return adjustmentTransform_F32(param, paramAdj, adjToDistorted, remove_p_to_p, A); }",
        "test_src": "@Test public void fullView_Transform() { IntrinsicParameters param = new IntrinsicParameters(). fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(0.1, 0.05); PointTransform_F32 adjToDist = LensDistortionOps.fullView(param, null, true); PointTransform_F32 distToAdj = LensDistortionOps.fullView(param, null, false); checkBorderOutside(adjToDist,distToAdj); param = new IntrinsicParameters(). fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(-0.1,-0.05); adjToDist = LensDistortionOps.fullView(param, null, true); distToAdj = LensDistortionOps.fullView(param, null, false); checkBorderOutside(adjToDist,distToAdj); }",
        "test_tgt": "@Test public void transform_F32_fullView() { IntrinsicParameters param = new IntrinsicParameters(). fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(0.1, 0.05); PointTransform_F32 adjToDist = LensDistortionOps.transform_F32(AdjustmentType.FULL_VIEW, param, null, true); PointTransform_F32 distToAdj = LensDistortionOps.transform_F32(AdjustmentType.FULL_VIEW, param, null, false); checkBorderOutside(adjToDist,distToAdj); param = new IntrinsicParameters(). fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(-0.1,-0.05); adjToDist = LensDistortionOps.transform_F32(AdjustmentType.FULL_VIEW, param, null, true); distToAdj = LensDistortionOps.transform_F32(AdjustmentType.FULL_VIEW, param, null, false); checkBorderOutside(adjToDist,distToAdj); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "PointTransform_F32",
                "PointTransform_F32",
                "equal"
            ],
            [
                "fullView",
                "",
                "delete"
            ],
            [
                "(",
                "transform_F32",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "IntrinsicParameters",
                "IntrinsicParameters",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "IntrinsicParameters",
                "IntrinsicParameters",
                "equal"
            ],
            [
                "paramAdj",
                "paramAdj",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "adjToDistorted",
                "adjToDistorted",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "PointTransform_F32",
                "PointTransform_F32",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "distortTransform",
                "distortTransform",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "undistort_F32",
                "undistort_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RectangleLength2D_F32",
                "RectangleLength2D_F32",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FULL_VIEW",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "DistortImageOps",
                "DistortImageOps",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "boundBox_F32",
                "boundBox_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "PointToPixelTransform_F32",
                "PointToPixelTransform_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "SHRINK",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "LensDistortionOps",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "boundBoxInside",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "width",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "height",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "PointToPixelTransform_F32",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "remove_p_to_p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "LensDistortionOps",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "roundInside",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "IllegalArgumentException",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Unsupported",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scaleX",
                "scaleX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scaleY",
                "scaleY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "deltaX",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "deltaY",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FULL_VIEW",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleX",
                "scaleX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scaleY",
                "scaleY",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "deltaX",
                "deltaX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "x0",
                "x0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "deltaY",
                "deltaY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "y0",
                "y0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "Math",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "min",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "scaleX",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "scaleY",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "deltaX",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "x0",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "scaleX",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "*",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "width",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "2",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "deltaY",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "y0",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "scaleY",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "*",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "height",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "2",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "DenseMatrix64F",
                "DenseMatrix64F",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "DenseMatrix64F",
                "DenseMatrix64F",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "deltaX",
                "deltaX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "deltaY",
                "deltaY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "adjustmentTransform",
                "adjustmentTransform_F32",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "paramAdj",
                "paramAdj",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "adjToDistorted",
                "adjToDistorted",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static PointTransform_F32 allInside( IntrinsicParameters param, IntrinsicParameters paramAdj , boolean adjToDistorted ) { PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true, true); RectangleLength2D_F32 bound = LensDistortionOps.boundBoxInside(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); LensDistortionOps.roundInside(bound); double scaleX = bound.width/param.width; double scaleY = bound.height/param.height; double scale = Math.min(scaleX, scaleY); double deltaX = bound.x0 + (scaleX-scale)*param.width/2.0; double deltaY = bound.y0 + (scaleY-scale)*param.height/2.0; DenseMatrix64F A = new DenseMatrix64F(3,3,true,scale,0,deltaX,0,scale,deltaY,0,0,1); return adjustmentTransform(param, paramAdj, adjToDistorted, remove_p_to_p, A); }",
        "focal_tgt": "public static PointTransform_F32 transform_F32(AdjustmentType type, IntrinsicParameters param, IntrinsicParameters paramAdj, boolean adjToDistorted) { PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true, true); RectangleLength2D_F32 bound; if( type == AdjustmentType.FULL_VIEW ) { bound = DistortImageOps.boundBox_F32(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); } else if( type == AdjustmentType.SHRINK) { bound = LensDistortionOps.boundBoxInside(param.width, param.height, new PointToPixelTransform_F32(remove_p_to_p)); LensDistortionOps.roundInside(bound); } else { throw new IllegalArgumentException(\"Unsupported type \"+type); } double scaleX = bound.width/param.width; double scaleY = bound.height/param.height; double scale,deltaX,deltaY; if( type == AdjustmentType.FULL_VIEW ) { scale = Math.max(scaleX, scaleY); deltaX = bound.x0; deltaY = bound.y0; } else { scale = Math.min(scaleX, scaleY); deltaX = bound.x0 + (scaleX-scale)*param.width/2.0; deltaY = bound.y0 + (scaleY-scale)*param.height/2.0; } DenseMatrix64F A = new DenseMatrix64F(3,3,true,scale,0,deltaX,0,scale,deltaY,0,0,1); return adjustmentTransform_F32(param, paramAdj, adjToDistorted, remove_p_to_p, A); }",
        "test_src": "@Test public void allInside_Transform() { IntrinsicParameters param = new IntrinsicParameters().fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(0.1, 1e-4); PointTransform_F32 adjToDist = LensDistortionOps.allInside(param, null, true); PointTransform_F32 distToAdj = LensDistortionOps.allInside(param, null, false); checkInside(adjToDist, distToAdj); param = new IntrinsicParameters().fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(-0.1,-1e-4); adjToDist = LensDistortionOps.allInside(param, null, true); distToAdj = LensDistortionOps.allInside(param, null, false); checkInside(adjToDist, distToAdj); }",
        "test_tgt": "@Test public void transform_F32_shrink() { IntrinsicParameters param = new IntrinsicParameters().fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(0.1, 1e-4); PointTransform_F32 adjToDist = LensDistortionOps.transform_F32(AdjustmentType.SHRINK, param, null, true); PointTransform_F32 distToAdj = LensDistortionOps.transform_F32(AdjustmentType.SHRINK, param, null, false); checkInside(adjToDist, distToAdj); param = new IntrinsicParameters().fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(-0.1,-1e-4); adjToDist = LensDistortionOps.transform_F32(AdjustmentType.SHRINK, param, null, true); distToAdj = LensDistortionOps.transform_F32(AdjustmentType.SHRINK, param, null, false); checkInside(adjToDist, distToAdj); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "PointTransform_F32",
                "PointTransform_F32",
                "equal"
            ],
            [
                "allInside",
                "",
                "delete"
            ],
            [
                "(",
                "transform_F32",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "IntrinsicParameters",
                "IntrinsicParameters",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "IntrinsicParameters",
                "IntrinsicParameters",
                "equal"
            ],
            [
                "paramAdj",
                "paramAdj",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "adjToDistorted",
                "adjToDistorted",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "PointTransform_F32",
                "PointTransform_F32",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "distortTransform",
                "distortTransform",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "undistort_F32",
                "undistort_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RectangleLength2D_F32",
                "RectangleLength2D_F32",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FULL_VIEW",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "DistortImageOps",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "boundBox_F32",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "width",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "param",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "height",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "PointToPixelTransform_F32",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "remove_p_to_p",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "SHRINK",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "LensDistortionOps",
                "LensDistortionOps",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "boundBoxInside",
                "boundBoxInside",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "PointToPixelTransform_F32",
                "PointToPixelTransform_F32",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LensDistortionOps",
                "LensDistortionOps",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "roundInside",
                "roundInside",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "IllegalArgumentException",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Unsupported",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scaleX",
                "scaleX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scaleY",
                "scaleY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "deltaX",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "deltaY",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "type",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "AdjustmentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FULL_VIEW",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "",
                "max",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "scaleX",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "scaleY",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "deltaX",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "x0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "deltaY",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "bound",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "y0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "scale",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "Math",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "min",
                "min",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleX",
                "scaleX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scaleY",
                "scaleY",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "deltaX",
                "deltaX",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "x0",
                "x0",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleX",
                "scaleX",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "width",
                "width",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "deltaY",
                "deltaY",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bound",
                "bound",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "y0",
                "y0",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleY",
                "scaleY",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "height",
                "height",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "DenseMatrix64F",
                "DenseMatrix64F",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "DenseMatrix64F",
                "DenseMatrix64F",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "3",
                "3",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "deltaX",
                "deltaX",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "deltaY",
                "deltaY",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "adjustmentTransform",
                "adjustmentTransform_F32",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "paramAdj",
                "paramAdj",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "adjToDistorted",
                "adjToDistorted",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "remove_p_to_p",
                "remove_p_to_p",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void hessian( ImageFloat32 integral, int skip , int size , ImageFloat32 intensity) { ImplIntegralImageFeatureIntensity.hessianBorder(integral,skip,size,intensity); ImplIntegralImageFeatureIntensity.hessianInner(integral,skip,size,intensity); }",
        "focal_tgt": "public static void hessian(GrayF32 integral, int skip , int size , GrayF32 intensity) { ImplIntegralImageFeatureIntensity.hessianBorder(integral,skip,size,intensity); ImplIntegralImageFeatureIntensity.hessianInner(integral,skip,size,intensity); }",
        "test_src": "@Test public void hessian_F32() { ImageFloat32 original = new ImageFloat32(width,height); ImageFloat32 integral = new ImageFloat32(width,height); ImageFloat32 found = new ImageFloat32(width,height); ImageFloat32 expected = new ImageFloat32(width,height); GImageMiscOps.fillUniform(original, rand, 0, 50); IntegralImageOps.transform(original,integral); int size = 9; for( int skip = 1; skip <= 4; skip++ ) { found.reshape(width/skip,height/skip); expected.reshape(width/skip,height/skip); ImplIntegralImageFeatureIntensity.hessianNaive(integral,skip,size,expected); IntegralImageFeatureIntensity.hessian(integral,skip,size,found); BoofTesting.assertEquals(expected,found, 1e-4f); } }",
        "test_tgt": "@Test public void hessian_F32() { GrayF32 original = new GrayF32(width,height); GrayF32 integral = new GrayF32(width,height); GrayF32 found = new GrayF32(width,height); GrayF32 expected = new GrayF32(width,height); GImageMiscOps.fillUniform(original, rand, 0, 50); IntegralImageOps.transform(original,integral); int size = 9; for( int skip = 1; skip <= 4; skip++ ) { found.reshape(width/skip,height/skip); expected.reshape(width/skip,height/skip); ImplIntegralImageFeatureIntensity.hessianNaive(integral,skip,size,expected); IntegralImageFeatureIntensity.hessian(integral,skip,size,found); BoofTesting.assertEquals(expected,found, 1e-4f); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "hessian",
                "hessian",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ImageFloat32",
                "GrayF32",
                "replace"
            ],
            [
                "integral",
                "integral",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ImageFloat32",
                "GrayF32",
                "replace"
            ],
            [
                "intensity",
                "intensity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ImplIntegralImageFeatureIntensity",
                "ImplIntegralImageFeatureIntensity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hessianBorder",
                "hessianBorder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "integral",
                "integral",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "intensity",
                "intensity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ImplIntegralImageFeatureIntensity",
                "ImplIntegralImageFeatureIntensity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hessianInner",
                "hessianInner",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "integral",
                "integral",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "intensity",
                "intensity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "void findErrorLocatorBM( int syndromes[] , int length , GrowQueue_I8 errorLocator ) { GrowQueue_I8 C = errorLocator; GrowQueue_I8 B = new GrowQueue_I8(); initToOne(C,length+1); initToOne(B,length+1); GrowQueue_I8 tmp = new GrowQueue_I8(length); int b = 1; for (int n = 0; n < length; n++) { int delta = syndromes[n]; for (int j = 1; j < C.size; j++) { delta ^= math.multiply(C.data[C.size-j-1]&0xFF, syndromes[n-j]); } B.data[B.size++] = 0; if( delta != 0 ) { int scale = math.multiply(delta, math.inverse(b)); math.polyAddScaleB(C, B, scale, tmp); if (2 * C.size > length) { } else { B.setTo(C); b = delta; } C.setTo(tmp); } } removeLeadingZeros(C); }",
        "focal_tgt": "void findErrorLocatorPolynomialBM(int syndromes[] , int length , GrowQueue_I8 errorLocator ) { GrowQueue_I8 C = errorLocator; GrowQueue_I8 B = new GrowQueue_I8(); initToOne(C,length+1); initToOne(B,length+1); GrowQueue_I8 tmp = new GrowQueue_I8(length); int b = 1; for (int n = 0; n < length; n++) { int delta = syndromes[n]; for (int j = 1; j < C.size; j++) { delta ^= math.multiply(C.data[C.size-j-1]&0xFF, syndromes[n-j]); } B.data[B.size++] = 0; if( delta != 0 ) { int scale = math.multiply(delta, math.inverse(b)); math.polyAddScaleB(C, B, scale, tmp); if (2 * C.size > length) { } else { B.setTo(C); b = delta; } C.setTo(tmp); } } removeLeadingZeros(C); }",
        "test_src": "@Test public void findErrorLocatorBM() { GrowQueue_I8 message = GrowQueue_I8.parseHex( \"[ 0x40, 0xd2, 0x75, 0x47, 0x76, 0x17, 0x32, 0x06, 0x27, 0x26, 0x96, 0xc6, 0xc6, 0x96, 0x70, 0xec ]\"); GrowQueue_I8 ecc = new GrowQueue_I8(); int nsyn = 10; int syndromes[] = new int[nsyn]; ReidSolomonCodes alg = new ReidSolomonCodes(8,primitive8); alg.generator(nsyn); alg.computeECC(message,ecc); message.data[0] = 0; alg.computeSyndromes(message,ecc,syndromes); GrowQueue_I8 errorLocator = new GrowQueue_I8(); alg.findErrorLocatorBM(syndromes,nsyn,errorLocator); assertEquals(2,errorLocator.size); assertEquals(3,errorLocator.get(0)); assertEquals(1,errorLocator.get(1)); message.data[6] = 10; alg.computeSyndromes(message,ecc,syndromes); alg.findErrorLocatorBM(syndromes,nsyn,errorLocator); assertEquals(3,errorLocator.size); assertEquals(238,errorLocator.get(0)&0xFF); assertEquals(89,errorLocator.get(1)); assertEquals(1,errorLocator.get(2)); }",
        "test_tgt": "@Test public void findErrorLocatorPolynomialBM() { GrowQueue_I8 message = GrowQueue_I8.parseHex( \"[ 0x40, 0xd2, 0x75, 0x47, 0x76, 0x17, 0x32, 0x06, 0x27, 0x26, 0x96, 0xc6, 0xc6, 0x96, 0x70, 0xec ]\"); GrowQueue_I8 ecc = new GrowQueue_I8(); int nsyn = 10; int syndromes[] = new int[nsyn]; ReidSolomonCodes alg = new ReidSolomonCodes(8,primitive8); alg.generator(nsyn); alg.computeECC(message,ecc); message.data[0] = 0; alg.computeSyndromes(message,ecc,syndromes); GrowQueue_I8 errorLocator = new GrowQueue_I8(); alg.findErrorLocatorPolynomialBM(syndromes,nsyn,errorLocator); assertEquals(2,errorLocator.size); assertEquals(3,errorLocator.get(0)); assertEquals(1,errorLocator.get(1)); message.data[6] = 10; alg.computeSyndromes(message,ecc,syndromes); alg.findErrorLocatorPolynomialBM(syndromes,nsyn,errorLocator); assertEquals(3,errorLocator.size); assertEquals(238,errorLocator.get(0)&0xFF); assertEquals(89,errorLocator.get(1)); assertEquals(1,errorLocator.get(2)); }",
        "label": 1,
        "edit_seq": [
            [
                "void",
                "void",
                "equal"
            ],
            [
                "findErrorLocatorBM",
                "findErrorLocatorPolynomialBM",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "syndromes",
                "syndromes",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "errorLocator",
                "errorLocator",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "errorLocator",
                "errorLocator",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "initToOne",
                "initToOne",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "initToOne",
                "initToOne",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "tmp",
                "tmp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "GrowQueue_I8",
                "GrowQueue_I8",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "delta",
                "delta",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "syndromes",
                "syndromes",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "delta",
                "delta",
                "equal"
            ],
            [
                "^",
                "^",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "math",
                "math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "multiply",
                "multiply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "0xFF",
                "0xFF",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "syndromes",
                "syndromes",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "j",
                "j",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "delta",
                "delta",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "math",
                "math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "multiply",
                "multiply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "delta",
                "delta",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "math",
                "math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "inverse",
                "inverse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "math",
                "math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "polyAddScaleB",
                "polyAddScaleB",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tmp",
                "tmp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "B",
                "B",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTo",
                "setTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "delta",
                "delta",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTo",
                "setTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tmp",
                "tmp",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "removeLeadingZeros",
                "removeLeadingZeros",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static <T extends ImageSingleBand> PyramidFloat<T> scaleSpace( double scaleSpace[], Class<T> imageType ) { double[] scaleFactors = new double[ scaleSpace.length ]; for( int i = 0; i < scaleSpace.length; i++ ) { scaleFactors[i] = 1; } double[] sigmas = new double[ scaleSpace.length ]; sigmas[0] = scaleSpace[0]; for( int i = 1; i < scaleSpace.length; i++ ) { double c = scaleSpace[i]; double b = scaleSpace[i-1]; sigmas[i] = Math.sqrt(c*c-b*b); } return floatGaussian(scaleFactors,sigmas,imageType); }",
        "focal_tgt": "public static <T extends ImageGray> PyramidFloat<T> scaleSpace( double scaleSpace[], Class<T> imageType ) { double[] scaleFactors = new double[ scaleSpace.length ]; for( int i = 0; i < scaleSpace.length; i++ ) { scaleFactors[i] = 1; } double[] sigmas = new double[ scaleSpace.length ]; sigmas[0] = scaleSpace[0]; for( int i = 1; i < scaleSpace.length; i++ ) { double c = scaleSpace[i]; double b = scaleSpace[i-1]; sigmas[i] = Math.sqrt(c*c-b*b); } return floatGaussian(scaleFactors,sigmas,imageType); }",
        "test_src": "@Test public void scaleSpace() { double ss[] = new double[]{1,2,4,6,8,10}; PyramidFloat<ImageFloat32> pyramid = FactoryPyramid.scaleSpacePyramid(ss, ImageFloat32.class); for( int i = 0; i < ss.length; i++ ) { assertEquals(ss[i],pyramid.getSigma(i),1e-8); assertEquals(ss[i],pyramid.getScale(i),1e-8); if( i > 1) assertTrue(Math.abs(ss[i] - ((PyramidFloatGaussianScale)pyramid).getSigmaLayers()[i])>0.1); } }",
        "test_tgt": "@Test public void scaleSpace() { double ss[] = new double[]{1,2,4,6,8,10}; PyramidFloat<GrayF32> pyramid = FactoryPyramid.scaleSpacePyramid(ss, GrayF32.class); for( int i = 0; i < ss.length; i++ ) { assertEquals(ss[i],pyramid.getSigma(i),1e-8); assertEquals(ss[i],pyramid.getScale(i),1e-8); if( i > 1) assertTrue(Math.abs(ss[i] - ((PyramidFloatGaussianScale)pyramid).getSigmaLayers()[i])>0.1); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "ImageSingleBand",
                "ImageGray",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "PyramidFloat",
                "PyramidFloat",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "imageType",
                "imageType",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "scaleFactors",
                "scaleFactors",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "scaleFactors",
                "scaleFactors",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "sigmas",
                "sigmas",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "sigmas",
                "sigmas",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "scaleSpace",
                "scaleSpace",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "sigmas",
                "sigmas",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "i",
                "i",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sqrt",
                "sqrt",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "c",
                "c",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "floatGaussian",
                "floatGaussian",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scaleFactors",
                "scaleFactors",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sigmas",
                "sigmas",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "imageType",
                "imageType",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Pair<FindToken, Boolean> copy(FindToken startToken) throws IOException, StoreException { boolean sourceHasProblems = false; FindToken lastToken; FindToken token = startToken; do { lastToken = token; FindInfo findInfo = src.findEntriesSince(lastToken, fetchSizeInBytes); List<MessageInfo> messageInfos = findInfo.getMessageEntries(); for (MessageInfo messageInfo : messageInfos) { logger.trace(\"Processing {} - isDeleted: {}, isExpired {}\", messageInfo.getStoreKey(), messageInfo.isDeleted(), messageInfo.isExpired()); if (!messageInfo.isExpired() && !messageInfo.isDeleted()) { if (messageInfo.getSize() > Integer.MAX_VALUE) { throw new IllegalStateException(\"Cannot copy blobs whose size > Integer.MAX_VALUE\"); } if (tgt.findMissingKeys(Collections.singletonList(messageInfo.getStoreKey())).size() == 1) { int size = (int) messageInfo.getSize(); StoreInfo storeInfo = src.get(Collections.singletonList(messageInfo.getStoreKey()), EnumSet.allOf(StoreGetOptions.class)); MessageReadSet readSet = storeInfo.getMessageReadSet(); byte[] buf = new byte[size]; readSet.writeTo(0, new ByteBufferChannel(ByteBuffer.wrap(buf)), 0, size); Message message = new Message(messageInfo, new ByteArrayInputStream(buf)); for (Transformer transformer : transformers) { message = transformer.transform(message); } MessageFormatWriteSet writeSet = new MessageFormatWriteSet(message.getStream(), Collections.singletonList(message.getMessageInfo()), false); tgt.put(writeSet); logger.trace(\"Copied {} as {}\", messageInfo.getStoreKey(), message.getMessageInfo().getStoreKey()); } else { logger.warn(\"Found a duplicate entry for {} while copying data\", messageInfo.getStoreKey()); sourceHasProblems = true; } } } token = findInfo.getFindToken(); logger.info(\"[{}] [{}] {}% copied\", Thread.currentThread().getName(), storeId, df.format(token.getBytesRead() * 100.0 / src.getSizeInBytes())); } while (!token.equals(lastToken)); return new Pair<>(token, sourceHasProblems); }",
        "focal_tgt": "public Pair<FindToken, Boolean> copy(FindToken startToken) throws Exception { boolean sourceHasProblems = false; FindToken lastToken; FindToken token = startToken; do { lastToken = token; FindInfo findInfo = src.findEntriesSince(lastToken, fetchSizeInBytes); List<MessageInfo> messageInfos = findInfo.getMessageEntries(); for (MessageInfo messageInfo : messageInfos) { logger.trace(\"Processing {} - isDeleted: {}, isExpired {}\", messageInfo.getStoreKey(), messageInfo.isDeleted(), messageInfo.isExpired()); if (!messageInfo.isExpired() && !messageInfo.isDeleted()) { if (messageInfo.getSize() > Integer.MAX_VALUE) { throw new IllegalStateException(\"Cannot copy blobs whose size > Integer.MAX_VALUE\"); } if (tgt.findMissingKeys(Collections.singletonList(messageInfo.getStoreKey())).size() == 1) { int size = (int) messageInfo.getSize(); StoreInfo storeInfo = src.get(Collections.singletonList(messageInfo.getStoreKey()), EnumSet.allOf(StoreGetOptions.class)); MessageReadSet readSet = storeInfo.getMessageReadSet(); byte[] buf = new byte[size]; readSet.writeTo(0, new ByteBufferChannel(ByteBuffer.wrap(buf)), 0, size); Message message = new Message(messageInfo, new ByteArrayInputStream(buf)); for (Transformer transformer : transformers) { message = transformer.transform(message); } MessageFormatWriteSet writeSet = new MessageFormatWriteSet(message.getStream(), Collections.singletonList(message.getMessageInfo()), false); tgt.put(writeSet); logger.trace(\"Copied {} as {}\", messageInfo.getStoreKey(), message.getMessageInfo().getStoreKey()); } else { logger.warn(\"Found a duplicate entry for {} while copying data\", messageInfo.getStoreKey()); sourceHasProblems = true; } } } token = findInfo.getFindToken(); logger.info(\"[{}] [{}] {}% copied\", Thread.currentThread().getName(), storeId, df.format(token.getBytesRead() * 100.0 / src.getSizeInBytes())); } while (!token.equals(lastToken)); return new Pair<>(token, sourceHasProblems); }",
        "test_src": "@Test public void copyTest() throws IOException, StoreException { storeCopier.copy(new StoreFindTokenFactory(STORE_KEY_FACTORY).getNewFindToken()); storeCopier.close(); StoreMetrics storeMetrics = new StoreMetrics(new MetricRegistry()); Files.copy(new File(srcDir, StoreDescriptor.STORE_DESCRIPTOR_FILENAME).toPath(), new File(tgtDir, StoreDescriptor.STORE_DESCRIPTOR_FILENAME).toPath(), StandardCopyOption.REPLACE_EXISTING); BlobStore tgt = new BlobStore(STORE_ID, storeConfig, null, null, DISK_IO_SCHEDULER, StoreTestUtils.DEFAULT_DISK_SPACE_ALLOCATOR, storeMetrics, storeMetrics, tgtDir.getAbsolutePath(), STORE_CAPACITY, STORE_KEY_FACTORY, null, null, time); tgt.start(); try { StoreKey[] failKeys = {expiredId, deletedId}; for (StoreKey key : failKeys) { try { tgt.get(Collections.singletonList(key), EnumSet.allOf(StoreGetOptions.class)); fail(\"Should have failed to get \" + key); } catch (StoreException e) { assertEquals(\"Unexpected StoreErrorCode\", StoreErrorCodes.ID_Not_Found, e.getErrorCode()); } } StoreInfo storeInfo = tgt.get(Collections.singletonList(putId), EnumSet.noneOf(StoreGetOptions.class)); MessageInfo messageInfo = storeInfo.getMessageReadSetInfo().get(0); assertEquals(\"Size does not match\", putData.length, messageInfo.getSize()); assertEquals(\"Size does not match\", putData.length, storeInfo.getMessageReadSet().sizeInBytes(0)); assertFalse(\"Should not be deleted or expired\", messageInfo.isDeleted() || messageInfo.isExpired()); ByteBufferChannel channel = new ByteBufferChannel(ByteBuffer.allocate(putData.length)); storeInfo.getMessageReadSet().writeTo(0, channel, 0, putData.length); assertArrayEquals(\"Data put does not match data copied\", putData, channel.getBuffer().array()); } finally { tgt.shutdown(); } }",
        "test_tgt": "@Test public void copyTest() throws Exception { storeCopier.copy(new StoreFindTokenFactory(STORE_KEY_FACTORY).getNewFindToken()); storeCopier.close(); StoreMetrics storeMetrics = new StoreMetrics(new MetricRegistry()); Files.copy(new File(srcDir, StoreDescriptor.STORE_DESCRIPTOR_FILENAME).toPath(), new File(tgtDir, StoreDescriptor.STORE_DESCRIPTOR_FILENAME).toPath(), StandardCopyOption.REPLACE_EXISTING); BlobStore tgt = new BlobStore(STORE_ID, storeConfig, null, null, DISK_IO_SCHEDULER, StoreTestUtils.DEFAULT_DISK_SPACE_ALLOCATOR, storeMetrics, storeMetrics, tgtDir.getAbsolutePath(), STORE_CAPACITY, STORE_KEY_FACTORY, null, null, time); tgt.start(); try { StoreKey[] failKeys = {expiredId, deletedId}; for (StoreKey key : failKeys) { try { tgt.get(Collections.singletonList(key), EnumSet.allOf(StoreGetOptions.class)); fail(\"Should have failed to get \" + key); } catch (StoreException e) { assertEquals(\"Unexpected StoreErrorCode\", StoreErrorCodes.ID_Not_Found, e.getErrorCode()); } } StoreInfo storeInfo = tgt.get(Collections.singletonList(putId), EnumSet.noneOf(StoreGetOptions.class)); MessageInfo messageInfo = storeInfo.getMessageReadSetInfo().get(0); assertEquals(\"Size does not match\", putData.length, messageInfo.getSize()); assertEquals(\"Size does not match\", putData.length, storeInfo.getMessageReadSet().sizeInBytes(0)); assertFalse(\"Should not be deleted or expired\", messageInfo.isDeleted() || messageInfo.isExpired()); ByteBufferChannel channel = new ByteBufferChannel(ByteBuffer.allocate(putData.length)); storeInfo.getMessageReadSet().writeTo(0, channel, 0, putData.length); assertArrayEquals(\"Data put does not match data copied\", putData, channel.getBuffer().array()); } finally { tgt.shutdown(); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Pair",
                "Pair",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "FindToken",
                "FindToken",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "FindToken",
                "FindToken",
                "equal"
            ],
            [
                "startToken",
                "startToken",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "StoreException",
                "Exception",
                "replace"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "sourceHasProblems",
                "sourceHasProblems",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FindToken",
                "FindToken",
                "equal"
            ],
            [
                "lastToken",
                "lastToken",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FindToken",
                "FindToken",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "startToken",
                "startToken",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "do",
                "do",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "lastToken",
                "lastToken",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FindInfo",
                "FindInfo",
                "equal"
            ],
            [
                "findInfo",
                "findInfo",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "src",
                "src",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "findEntriesSince",
                "findEntriesSince",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lastToken",
                "lastToken",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "fetchSizeInBytes",
                "fetchSizeInBytes",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "MessageInfo",
                "MessageInfo",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "messageInfos",
                "messageInfos",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "findInfo",
                "findInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessageEntries",
                "getMessageEntries",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "MessageInfo",
                "MessageInfo",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "messageInfos",
                "messageInfos",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Processing",
                "Processing",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "isDeleted",
                "isDeleted",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "isExpired",
                "isExpired",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isDeleted",
                "isDeleted",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isExpired",
                "isExpired",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isExpired",
                "isExpired",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isDeleted",
                "isDeleted",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getSize",
                "getSize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MAX_VALUE",
                "MAX_VALUE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalStateException",
                "IllegalStateException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cannot",
                "Cannot",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "blobs",
                "blobs",
                "equal"
            ],
            [
                "whose",
                "whose",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MAX_VALUE",
                "MAX_VALUE",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tgt",
                "tgt",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "findMissingKeys",
                "findMissingKeys",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collections",
                "Collections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "singletonList",
                "singletonList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getSize",
                "getSize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "StoreInfo",
                "StoreInfo",
                "equal"
            ],
            [
                "storeInfo",
                "storeInfo",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "src",
                "src",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collections",
                "Collections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "singletonList",
                "singletonList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "EnumSet",
                "EnumSet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "allOf",
                "allOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "StoreGetOptions",
                "StoreGetOptions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "MessageReadSet",
                "MessageReadSet",
                "equal"
            ],
            [
                "readSet",
                "readSet",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "storeInfo",
                "storeInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessageReadSet",
                "getMessageReadSet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "readSet",
                "readSet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writeTo",
                "writeTo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ByteBufferChannel",
                "ByteBufferChannel",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ByteBuffer",
                "ByteBuffer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "wrap",
                "wrap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Message",
                "Message",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Message",
                "Message",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ByteArrayInputStream",
                "ByteArrayInputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "buf",
                "buf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Transformer",
                "Transformer",
                "equal"
            ],
            [
                "transformer",
                "transformer",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "transformers",
                "transformers",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "transformer",
                "transformer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "transform",
                "transform",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "MessageFormatWriteSet",
                "MessageFormatWriteSet",
                "equal"
            ],
            [
                "writeSet",
                "writeSet",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "MessageFormatWriteSet",
                "MessageFormatWriteSet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStream",
                "getStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Collections",
                "Collections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "singletonList",
                "singletonList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessageInfo",
                "getMessageInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "tgt",
                "tgt",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "writeSet",
                "writeSet",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Copied",
                "Copied",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "as",
                "as",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getMessageInfo",
                "getMessageInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Found",
                "Found",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "duplicate",
                "duplicate",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "copying",
                "copying",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "messageInfo",
                "messageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getStoreKey",
                "getStoreKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "sourceHasProblems",
                "sourceHasProblems",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "findInfo",
                "findInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getFindToken",
                "getFindToken",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "copied",
                "copied",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Thread",
                "Thread",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentThread",
                "currentThread",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getName",
                "getName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "storeId",
                "storeId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "df",
                "df",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getBytesRead",
                "getBytesRead",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "100",
                "100",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "src",
                "src",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getSizeInBytes",
                "getSizeInBytes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lastToken",
                "lastToken",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Pair",
                "Pair",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sourceHasProblems",
                "sourceHasProblems",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "int replenishConnections(ConnectionFactory connectionFactory) { int connectionsInitiated = 0; Iterator<HostPortPoolManager> iter = poolManagersBelowMinActiveConnections.iterator(); while (iter.hasNext()) { HostPortPoolManager poolManager = iter.next(); try { if (poolManager.dataNodeId.getState() == HardwareState.AVAILABLE) { while (!poolManager.hasMinActiveConnections()) { String connId = connectionFactory.connect(poolManager.host, poolManager.port); poolManager.incrementPoolCount(); connectionIdToPoolManager.put(connId, poolManager); totalManagedConnectionsCount++; connectionsInitiated++; } iter.remove(); } } catch (IOException e) { LOGGER.warn(\"Encountered exception while replenishing connections to {}:{}.\", poolManager.host, poolManager.port.getPort(), e); } } return connectionsInitiated; }",
        "focal_tgt": "int replenishConnections(ConnectionFactory connectionFactory, int maxNewConnectionsPerHost) { int newConnections = 0; Iterator<HostPortPoolManager> iter = poolManagersBelowMinActiveConnections.iterator(); while (iter.hasNext()) { HostPortPoolManager poolManager = iter.next(); try { if (poolManager.dataNodeId.getState() == HardwareState.AVAILABLE) { int newConnectionsToHost = 0; while (newConnectionsToHost < maxNewConnectionsPerHost && !poolManager.hasMinActiveConnections()) { String connId = connectionFactory.connect(poolManager.host, poolManager.port); poolManager.incrementPoolCount(); connectionIdToPoolManager.put(connId, poolManager); totalManagedConnectionsCount++; newConnections++; newConnectionsToHost++; } if (poolManager.hasMinActiveConnections()) { iter.remove(); } } } catch (IOException e) { LOGGER.warn(\"Encountered exception while replenishing connections to {}:{}.\", poolManager.host, poolManager.port.getPort(), e); } } return newConnections; }",
        "test_src": "@Test public void testReplenishConnections() { connectionTracker = new ConnectionTracker(routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText, routerConfig.routerScalingUnitMaxConnectionsPerPortSsl); int minActiveConnectionsCount = 0; int totalConnectionsCount = 0; int availableCount = 0; MockDataNodeId dataNodeId1 = new MockDataNodeId(\"host1\", Collections.singletonList(plainTextPort), Collections.emptyList(), \"DC1\"); MockDataNodeId dataNodeId2 = new MockDataNodeId(\"host2\", Arrays.asList(plainTextPort, sslPort), Collections.emptyList(), \"DC1\"); dataNodeId2.setSslEnabledDataCenters(Collections.singletonList(\"DC1\")); connectionTracker.setMinimumActiveConnectionsPercentage(dataNodeId1, 50); minActiveConnectionsCount += 50 * routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText / 100; connectionTracker.setMinimumActiveConnectionsPercentage(dataNodeId2, 200); minActiveConnectionsCount += routerConfig.routerScalingUnitMaxConnectionsPerPortSsl; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection); totalConnectionsCount += minActiveConnectionsCount; assertCounts(totalConnectionsCount, availableCount); List<String> newConnections = getNewlyEstablishedConnections(); newConnections.forEach(connectionTracker::checkInConnection); availableCount += minActiveConnectionsCount; assertCounts(totalConnectionsCount, availableCount); Assert.assertTrue(connectionTracker.mayCreateNewConnection(\"host1\", plainTextPort, dataNodeId1)); Assert.assertFalse(connectionTracker.mayCreateNewConnection(\"host2\", sslPort, dataNodeId2)); newConnections.stream().limit(2).forEach(connectionTracker::removeConnection); totalConnectionsCount -= 2; availableCount -= 2; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection); totalConnectionsCount += 2; assertCounts(totalConnectionsCount, availableCount); newConnections = getNewlyEstablishedConnections(); newConnections.forEach(connectionTracker::checkInConnection); availableCount += 2; assertCounts(totalConnectionsCount, availableCount); String conn1 = connectionTracker.checkOutConnection(\"host1\", plainTextPort, dataNodeId1); Assert.assertNotNull(conn1); String conn2 = connectionTracker.checkOutConnection(\"host2\", sslPort, dataNodeId2); Assert.assertNotNull(conn2); availableCount -= 2; assertCounts(totalConnectionsCount, availableCount); connectionTracker.removeConnection(conn1); connectionTracker.checkInConnection(conn2); totalConnectionsCount -= 1; availableCount += 1; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection); totalConnectionsCount += 1; assertCounts(totalConnectionsCount, availableCount); }",
        "test_tgt": "@Test public void testReplenishConnections() { connectionTracker = new ConnectionTracker(routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText, routerConfig.routerScalingUnitMaxConnectionsPerPortSsl); int minActiveConnectionsCount = 0; int totalConnectionsCount = 0; int availableCount = 0; MockDataNodeId dataNodeId1 = new MockDataNodeId(\"host1\", Collections.singletonList(plainTextPort), Collections.emptyList(), \"DC1\"); MockDataNodeId dataNodeId2 = new MockDataNodeId(\"host2\", Arrays.asList(plainTextPort, sslPort), Collections.emptyList(), \"DC1\"); dataNodeId2.setSslEnabledDataCenters(Collections.singletonList(\"DC1\")); connectionTracker.setMinimumActiveConnectionsPercentage(dataNodeId1, 50); minActiveConnectionsCount += 50 * routerConfig.routerScalingUnitMaxConnectionsPerPortPlainText / 100; connectionTracker.setMinimumActiveConnectionsPercentage(dataNodeId2, 200); minActiveConnectionsCount += routerConfig.routerScalingUnitMaxConnectionsPerPortSsl; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection, Integer.MAX_VALUE); totalConnectionsCount += minActiveConnectionsCount; assertCounts(totalConnectionsCount, availableCount); List<String> newConnections = getNewlyEstablishedConnections(); newConnections.forEach(connectionTracker::checkInConnection); availableCount += minActiveConnectionsCount; assertCounts(totalConnectionsCount, availableCount); Assert.assertTrue(connectionTracker.mayCreateNewConnection(\"host1\", plainTextPort, dataNodeId1)); Assert.assertFalse(connectionTracker.mayCreateNewConnection(\"host2\", sslPort, dataNodeId2)); newConnections.stream().limit(2).forEach(connectionTracker::removeConnection); totalConnectionsCount -= 2; availableCount -= 2; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection, Integer.MAX_VALUE); totalConnectionsCount += 2; assertCounts(totalConnectionsCount, availableCount); newConnections = getNewlyEstablishedConnections(); newConnections.forEach(connectionTracker::checkInConnection); availableCount += 2; assertCounts(totalConnectionsCount, availableCount); String conn1 = connectionTracker.checkOutConnection(\"host1\", plainTextPort, dataNodeId1); Assert.assertNotNull(conn1); String conn2 = connectionTracker.checkOutConnection(\"host2\", sslPort, dataNodeId2); Assert.assertNotNull(conn2); availableCount -= 2; assertCounts(totalConnectionsCount, availableCount); connectionTracker.removeConnection(conn1); connectionTracker.checkInConnection(conn2); totalConnectionsCount -= 1; availableCount += 1; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection, Integer.MAX_VALUE); totalConnectionsCount += 1; assertCounts(totalConnectionsCount, availableCount); String connId; while ((connId = connectionTracker.checkOutConnection(\"host2\", sslPort, dataNodeId2)) != null) { connectionTracker.removeConnection(connId); } totalConnectionsCount -= 2; availableCount -= 2; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection, 1); totalConnectionsCount += 1; assertCounts(totalConnectionsCount, availableCount); connectionTracker.replenishConnections(this::mockNewConnection, 1); totalConnectionsCount += 1; assertCounts(totalConnectionsCount, availableCount); }",
        "label": 1,
        "edit_seq": [
            [
                "int",
                "int",
                "equal"
            ],
            [
                "replenishConnections",
                "replenishConnections",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ConnectionFactory",
                "ConnectionFactory",
                "equal"
            ],
            [
                "connectionFactory",
                "connectionFactory",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "maxNewConnectionsPerHost",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "connectionsInitiated",
                "newConnections",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "HostPortPoolManager",
                "HostPortPoolManager",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "iter",
                "iter",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "poolManagersBelowMinActiveConnections",
                "poolManagersBelowMinActiveConnections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "iter",
                "iter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hasNext",
                "hasNext",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "HostPortPoolManager",
                "HostPortPoolManager",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "iter",
                "iter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "dataNodeId",
                "dataNodeId",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getState",
                "getState",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "HardwareState",
                "HardwareState",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "AVAILABLE",
                "AVAILABLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "newConnectionsToHost",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "newConnectionsToHost",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "maxNewConnectionsPerHost",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hasMinActiveConnections",
                "hasMinActiveConnections",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "connId",
                "connId",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "connectionFactory",
                "connectionFactory",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "connect",
                "connect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "host",
                "host",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "port",
                "port",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "incrementPoolCount",
                "incrementPoolCount",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "connectionIdToPoolManager",
                "connectionIdToPoolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "connId",
                "connId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "totalManagedConnectionsCount",
                "totalManagedConnectionsCount",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "connectionsInitiated",
                "newConnections",
                "replace"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "newConnectionsToHost",
                "insert"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "poolManager",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "hasMinActiveConnections",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "iter",
                "iter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Encountered",
                "Encountered",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "replenishing",
                "replenishing",
                "equal"
            ],
            [
                "connections",
                "connections",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "host",
                "host",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "poolManager",
                "poolManager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "port",
                "port",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getPort",
                "getPort",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "connectionsInitiated",
                "newConnections",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static File getMuleHomeFile() { return isStandalone() ? new File(MULE_HOME) : null; }",
        "focal_tgt": "public static File getMuleHome() { return isStandalone() ? new File(MULE_HOME) : null; }",
        "test_src": "@Test public void testGetMuleHomeFile() { File muleHome = MuleContainerBootstrapUtils.getMuleHomeFile(); assertNotNull(muleHome.getAbsolutePath()); }",
        "test_tgt": "@Test public void testGetMuleHomeFile() { File muleHome = MuleContainerBootstrapUtils.getMuleHome(); assertNotNull(muleHome.getAbsolutePath()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "getMuleHomeFile",
                "getMuleHome",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "isStandalone",
                "isStandalone",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "MULE_HOME",
                "MULE_HOME",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@RequestMapping(\"/save\") @PreAuthorize(\"hasAnyRole('A') or #user.id == #updatedUser.id\") public String saveOrUpdateUserDetail(User user, ModelMap model, @ModelAttribute(\"user\") User updatedUser, @RequestParam(required = false) String followersStr) { checkArgument(updatedUser.validate()); if (user.getRole() == Role.USER) { User updatedUserInDb = userService.getUserById(updatedUser.getUserId()); checkNotNull(updatedUserInDb); updatedUser.setRole(updatedUserInDb.getRole()); checkArgument(updatedUserInDb.getId().equals(updatedUser.getId()), \"Illegal request to update user:%s\", updatedUser); } if (updatedUser.exist()) { userService.saveUser(updatedUser, followersStr); } else { userService.saveUser(updatedUser); } model.clear(); if (user.getId().equals(updatedUser.getId())) { return \"redirect:/\"; } else { return \"redirect:/user/\"; } }",
        "focal_tgt": "@RequestMapping(\"/save\") @PreAuthorize(\"hasAnyRole('A') or #user.id == #updatedUser.id\") public String saveUser(User user, ModelMap model, @ModelAttribute(\"user\") User updatedUser) { checkArgument(updatedUser.validate()); if (user.getRole() == Role.USER) { User updatedUserInDb = userService.getUserById(updatedUser.getUserId()); checkNotNull(updatedUserInDb); updatedUser.setRole(updatedUserInDb.getRole()); checkArgument(updatedUserInDb.getId().equals(updatedUser.getId()), \"Illegal request to update user:%s\", updatedUser); } saveUser(updatedUser); model.clear(); if (user.getId().equals(updatedUser.getId())) { return \"redirect:/\"; } else { return \"redirect:/user/\"; } }",
        "test_src": "@Test public void testSaveOrUpdateUserDetail() { ModelMap model = new ModelMap(); User currUser = getTestUser(); currUser.setUserName(\"new name\"); userController.saveOrUpdateUserDetail(currUser, model, currUser, null); userController.getUserDetail(getTestUser(), model, currUser.getUserId()); User user = (User) model.get(\"user\"); assertThat(user.getUserName(), is(\"new name\")); assertThat(user.getPassword(), is(currUser.getPassword())); User admin = getAdminUser(); User temp = new User(\"temp1\", \"temp1\", \"temp1\", \"temp@nhn.com\", Role.USER); userController.saveOrUpdateUserDetail(admin, model, temp, null); temp = new User(\"temp2\", \"temp2\", \"temp2\", \"temp@nhn.com\", Role.USER); userController.saveOrUpdateUserDetail(admin, model, temp, null); model.clear(); userController.saveOrUpdateUserDetail(currUser, model, currUser, \"temp1, temp2\"); userController.getUserDetail(getTestUser(), model, currUser.getUserId()); user = (User) model.get(\"user\"); assertThat(user.getFollowers().size(), is(2)); assertThat(user.getFollowers().get(0).getUserId(), is(\"temp1\")); }",
        "test_tgt": "@Test public void testSaveOrUpdateUserDetail() { ModelMap model = new ModelMap(); User currUser = getTestUser(); currUser.setUserName(\"new name\"); userController.saveUser(currUser, model, currUser); userController.getUserDetail(getTestUser(), model, currUser.getUserId()); User user = (User) model.get(\"user\"); assertThat(user.getUserName(), is(\"new name\")); assertThat(user.getPassword(), is(currUser.getPassword())); User admin = getAdminUser(); User temp = new User(\"temp1\", \"temp1\", \"temp1\", \"temp@nhn.com\", Role.USER); userController.saveUser(admin, model, temp); temp = new User(\"temp2\", \"temp2\", \"temp2\", \"temp@nhn.com\", Role.USER); userController.saveUser(admin, model, temp); model.clear(); currUser.setFollowersStr(\"temp1, temp2\"); userController.saveUser(currUser, model, currUser); userController.getUserDetail(getTestUser(), model, currUser.getUserId()); user = (User) model.get(\"user\"); assertThat(user.getFollowers().size(), is(2)); assertThat(user.getFollowers().get(0).getUserId(), is(\"temp1\")); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "RequestMapping",
                "RequestMapping",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "save",
                "save",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "PreAuthorize",
                "PreAuthorize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "hasAnyRole",
                "hasAnyRole",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "A",
                "A",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "or",
                "or",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "#",
                "#",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "saveOrUpdateUserDetail",
                "saveUser",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ModelMap",
                "ModelMap",
                "equal"
            ],
            [
                "model",
                "model",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "ModelAttribute",
                "ModelAttribute",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "@",
                "",
                "delete"
            ],
            [
                "RequestParam",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "required",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "false",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "followersStr",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "checkArgument",
                "checkArgument",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRole",
                "getRole",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Role",
                "Role",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "USER",
                "USER",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "updatedUserInDb",
                "updatedUserInDb",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "userService",
                "userService",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getUserById",
                "getUserById",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getUserId",
                "getUserId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUserInDb",
                "updatedUserInDb",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setRole",
                "setRole",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUserInDb",
                "updatedUserInDb",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getRole",
                "getRole",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkArgument",
                "checkArgument",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUserInDb",
                "updatedUserInDb",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "updatedUser",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "exist",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "userService",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "saveUser",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "updatedUser",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "followersStr",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "userService",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "saveUser",
                "saveUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "model",
                "model",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clear",
                "clear",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "updatedUser",
                "updatedUser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "redirect",
                "redirect",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "redirect",
                "redirect",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void put(final boolean v) { if (v) { this.buffer[offset++] = BOOLEAN_TRUE; } else { this.buffer[offset++] = BOOLEAN_FALSE; } }",
        "focal_tgt": "@Override public void putBoolean(final boolean v) { if (v) { this.buffer[offset++] = BOOLEAN_TRUE; } else { this.buffer[offset++] = BOOLEAN_FALSE; } }",
        "test_src": "@Test public void testBoolean() { Buffer buffer = new FixedBuffer(16); buffer.put(true); buffer.put(false); Buffer read = new FixedBuffer(buffer.getBuffer()); boolean b = read.readBoolean(); Assert.assertEquals(true, b); boolean c = read.readBoolean(); Assert.assertEquals(false, c); }",
        "test_tgt": "@Test public void testBoolean() { Buffer buffer = new FixedBuffer(16); buffer.putBoolean(true); buffer.putBoolean(false); Buffer read = new FixedBuffer(buffer.getBuffer()); boolean b = read.readBoolean(); Assert.assertEquals(true, b); boolean c = read.readBoolean(); Assert.assertEquals(false, c); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "put",
                "putBoolean",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "v",
                "v",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "v",
                "v",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "buffer",
                "buffer",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "offset",
                "offset",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BOOLEAN_TRUE",
                "BOOLEAN_TRUE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "buffer",
                "buffer",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "offset",
                "offset",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BOOLEAN_FALSE",
                "BOOLEAN_FALSE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Order cloneForDiscontinuing() { Order newOrder = new Order(); newOrder.setCareSetting(this.getCareSetting()); newOrder.setConcept(this.getConcept()); newOrder.setAction(Action.DISCONTINUE); newOrder.setPreviousOrder(this); return newOrder; }",
        "focal_tgt": "public Order cloneForDiscontinuing() throws IllegalAccessException, InstantiationException { Order newOrder = this.getClass().newInstance(); newOrder.setCareSetting(this.getCareSetting()); newOrder.setConcept(this.getConcept()); newOrder.setAction(Action.DISCONTINUE); newOrder.setPreviousOrder(this); return newOrder; }",
        "test_src": "@Test @Verifies(value = \"set this care setting to new order\", method = \"cloneForDiscontinuing(Order)\") public void cloneForDiscontinuing_shouldSetThisCareSettingToNewOrder() { Order anOrder = new Order(); CareSetting careSetting = new CareSetting(); anOrder.setCareSetting(careSetting); Order orderThatCanDiscontinueTheOrder = anOrder.cloneForDiscontinuing(); assertEquals(anOrder.getCareSetting(), orderThatCanDiscontinueTheOrder.getCareSetting()); }",
        "test_tgt": "@Test @Verifies(value = \"set this care setting to new order\", method = \"cloneForDiscontinuing(Order)\") public void cloneForDiscontinuing_shouldSetThisCareSettingToNewOrder() throws Exception { Order anOrder = new Order(); CareSetting careSetting = new CareSetting(); anOrder.setCareSetting(careSetting); Order orderThatCanDiscontinueTheOrder = anOrder.cloneForDiscontinuing(); assertEquals(anOrder.getCareSetting(), orderThatCanDiscontinueTheOrder.getCareSetting()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Order",
                "Order",
                "equal"
            ],
            [
                "cloneForDiscontinuing",
                "cloneForDiscontinuing",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "IllegalAccessException",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "InstantiationException",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Order",
                "Order",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Order",
                "this",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getClass",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "newInstance",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setCareSetting",
                "setCareSetting",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCareSetting",
                "getCareSetting",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setConcept",
                "setConcept",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getConcept",
                "getConcept",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setAction",
                "setAction",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Action",
                "Action",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "DISCONTINUE",
                "DISCONTINUE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPreviousOrder",
                "setPreviousOrder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "newOrder",
                "newOrder",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String getConstructor(String yangName, JavaAttributeInfo attr, int generatedJavaFiles) { String attributeName = attr.getAttributeName(); String constructor; if ((generatedJavaFiles & GENERATE_SERVICE_AND_MANAGER) != 0) { constructor = EIGHT_SPACE_INDENTATION + THIS + PERIOD + getCamelCase(attributeName, null) + SPACE + EQUAL + SPACE + BUILDER.toLowerCase() + OBJECT + PERIOD + GET_METHOD_PREFIX + getCapitalCase(getCamelCase(attributeName, null)) + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN + NEW_LINE; } else { constructor = EIGHT_SPACE_INDENTATION + THIS + PERIOD + getCamelCase(attributeName, null) + SPACE + EQUAL + SPACE + BUILDER.toLowerCase() + OBJECT + PERIOD + getCamelCase(attributeName, null) + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN + NEW_LINE; } return constructor; }",
        "focal_tgt": "public static String getConstructor(String yangName, JavaAttributeInfo attr, int generatedJavaFiles, YangPluginConfig pluginConfig) { String attributeName = attr.getAttributeName(); String constructor; if ((generatedJavaFiles & GENERATE_SERVICE_AND_MANAGER) != 0) { constructor = EIGHT_SPACE_INDENTATION + THIS + PERIOD + getCamelCase(attributeName, pluginConfig.getConflictResolver()) + SPACE + EQUAL + SPACE + BUILDER.toLowerCase() + OBJECT + PERIOD + GET_METHOD_PREFIX + getCapitalCase(getCamelCase(attributeName, pluginConfig.getConflictResolver())) + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN + NEW_LINE; } else { constructor = EIGHT_SPACE_INDENTATION + THIS + PERIOD + getCamelCase(attributeName, pluginConfig.getConflictResolver()) + SPACE + EQUAL + SPACE + BUILDER.toLowerCase() + OBJECT + PERIOD + getCamelCase(attributeName, pluginConfig.getConflictResolver()) + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN + NEW_LINE; } return constructor; }",
        "test_src": "@Test public void getConstructorTest() { JavaAttributeInfo testAttr = getTestAttribute(); String method = getConstructor(CLASS_NAME, testAttr, GENERATE_SERVICE_AND_MANAGER); assertThat(true, is(method.contains(THIS + PERIOD + CLASS_NAME + SPACE + EQUAL + SPACE + \"builder\" + OBJECT + PERIOD + GET_METHOD_PREFIX + \"Testname\" + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN))); }",
        "test_tgt": "@Test public void getConstructorTest() { JavaAttributeInfo testAttr = getTestAttribute(); YangPluginConfig pluginConfig = new YangPluginConfig(); String method = getConstructor(CLASS_NAME, testAttr, GENERATE_SERVICE_AND_MANAGER, pluginConfig); assertThat(true, is(method.contains(THIS + PERIOD + CLASS_NAME + SPACE + EQUAL + SPACE + \"builder\" + OBJECT + PERIOD + GET_METHOD_PREFIX + \"Testname\" + OPEN_PARENTHESIS + CLOSE_PARENTHESIS + SEMI_COLAN))); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getConstructor",
                "getConstructor",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "yangName",
                "yangName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "JavaAttributeInfo",
                "JavaAttributeInfo",
                "equal"
            ],
            [
                "attr",
                "attr",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "generatedJavaFiles",
                "generatedJavaFiles",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "YangPluginConfig",
                "insert"
            ],
            [
                "",
                "pluginConfig",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "attr",
                "attr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getAttributeName",
                "getAttributeName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "generatedJavaFiles",
                "generatedJavaFiles",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "GENERATE_SERVICE_AND_MANAGER",
                "GENERATE_SERVICE_AND_MANAGER",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "EIGHT_SPACE_INDENTATION",
                "EIGHT_SPACE_INDENTATION",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "THIS",
                "THIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getCamelCase",
                "getCamelCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "pluginConfig",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getConflictResolver",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "EQUAL",
                "EQUAL",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "BUILDER",
                "BUILDER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "OBJECT",
                "OBJECT",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "GET_METHOD_PREFIX",
                "GET_METHOD_PREFIX",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getCapitalCase",
                "getCapitalCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "getCamelCase",
                "getCamelCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "pluginConfig",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getConflictResolver",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "OPEN_PARENTHESIS",
                "OPEN_PARENTHESIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "CLOSE_PARENTHESIS",
                "CLOSE_PARENTHESIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SEMI_COLAN",
                "SEMI_COLAN",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "NEW_LINE",
                "NEW_LINE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "EIGHT_SPACE_INDENTATION",
                "EIGHT_SPACE_INDENTATION",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "THIS",
                "THIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getCamelCase",
                "getCamelCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "pluginConfig",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getConflictResolver",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "EQUAL",
                "EQUAL",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "BUILDER",
                "BUILDER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "OBJECT",
                "OBJECT",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getCamelCase",
                "getCamelCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "attributeName",
                "attributeName",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "pluginConfig",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getConflictResolver",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "OPEN_PARENTHESIS",
                "OPEN_PARENTHESIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "CLOSE_PARENTHESIS",
                "CLOSE_PARENTHESIS",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SEMI_COLAN",
                "SEMI_COLAN",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "NEW_LINE",
                "NEW_LINE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public Map<TunnelId, PceccTunnelInfo> getTunnelInfos() { return tunnelInfoMap.entrySet().stream() .collect(Collectors.toMap(Map.Entry::getKey, e -> (PceccTunnelInfo) e.getValue().value())); }",
        "focal_tgt": "@Override public Map<TunnelId, ResourceConsumer> getTunnelInfos() { return tunnelInfoMap.entrySet().stream() .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().value())); }",
        "test_src": "@Test public void testGetTunnelInfos() { testAddTunnelInfo(); Map<TunnelId, PceccTunnelInfo> tunnelInfoMap = distrPceStore.getTunnelInfos(); assertThat(tunnelInfoMap, is(notNullValue())); assertThat(tunnelInfoMap.isEmpty(), is(false)); assertThat(tunnelInfoMap.size(), is(2)); }",
        "test_tgt": "@Test public void testGetTunnelInfos() { testAddTunnelInfo(); Map<TunnelId, ResourceConsumer> tunnelInfoMap = distrPceStore.getTunnelInfos(); assertThat(tunnelInfoMap, is(notNullValue())); assertThat(tunnelInfoMap.isEmpty(), is(false)); assertThat(tunnelInfoMap.size(), is(2)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "TunnelId",
                "TunnelId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "PceccTunnelInfo",
                "ResourceConsumer",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getTunnelInfos",
                "getTunnelInfos",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "tunnelInfoMap",
                "tunnelInfoMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "entrySet",
                "entrySet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toMap",
                "toMap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PceccTunnelInfo",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public PceccTunnelInfo getTunnelInfo(TunnelId tunnelId) { checkNotNull(tunnelId, TUNNEL_ID_NULL); return tunnelInfoMap.get(tunnelId) == null ? null : tunnelInfoMap.get(tunnelId).value(); }",
        "focal_tgt": "@Override public ResourceConsumer getTunnelInfo(TunnelId tunnelId) { checkNotNull(tunnelId, TUNNEL_ID_NULL); return tunnelInfoMap.get(tunnelId) == null ? null : tunnelInfoMap.get(tunnelId).value(); }",
        "test_src": "@Test public void testGetTunnelInfo() { testAddTunnelInfo(); assertThat(tunnelId1, is(notNullValue())); assertThat(distrPceStore.getTunnelInfo(tunnelId1), is(pceccTunnelInfo1)); assertThat(tunnelId2, is(notNullValue())); assertThat(distrPceStore.getTunnelInfo(tunnelId2), is(pceccTunnelInfo2)); }",
        "test_tgt": "@Test public void testGetTunnelInfo() { testAddTunnelInfo(); assertThat(tunnelId1, is(notNullValue())); assertThat(distrPceStore.getTunnelInfo(tunnelId1), is(tunnelConsumerId1)); assertThat(tunnelId2, is(notNullValue())); assertThat(distrPceStore.getTunnelInfo(tunnelId2), is(tunnelConsumerId2)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "PceccTunnelInfo",
                "ResourceConsumer",
                "replace"
            ],
            [
                "getTunnelInfo",
                "getTunnelInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TunnelId",
                "TunnelId",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TUNNEL_ID_NULL",
                "TUNNEL_ID_NULL",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "tunnelInfoMap",
                "tunnelInfoMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "tunnelInfoMap",
                "tunnelInfoMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void addTunnelInfo(TunnelId tunnelId, PceccTunnelInfo pceccTunnelInfo) { checkNotNull(tunnelId, TUNNEL_ID_NULL); checkNotNull(pceccTunnelInfo, PCECC_TUNNEL_INFO_NULL); tunnelInfoMap.put(tunnelId, pceccTunnelInfo); }",
        "focal_tgt": "@Override public void addTunnelInfo(TunnelId tunnelId, ResourceConsumer tunnelConsumerId) { checkNotNull(tunnelId, TUNNEL_ID_NULL); checkNotNull(tunnelConsumerId, PCECC_TUNNEL_INFO_NULL); tunnelInfoMap.put(tunnelId, tunnelConsumerId); }",
        "test_src": "@Test public void testAddTunnelInfo() { distrPceStore.storageService = new TestStorageService(); distrPceStore.activate(); distrPceStore.addTunnelInfo(tunnelId1, pceccTunnelInfo1); assertThat(distrPceStore.existsTunnelInfo(tunnelId1), is(true)); assertThat(distrPceStore.getTunnelInfo(tunnelId1), is(pceccTunnelInfo1)); distrPceStore.addTunnelInfo(tunnelId2, pceccTunnelInfo2); assertThat(distrPceStore.existsTunnelInfo(tunnelId2), is(true)); assertThat(distrPceStore.getTunnelInfo(tunnelId2), is(pceccTunnelInfo2)); }",
        "test_tgt": "@Test public void testAddTunnelInfo() { distrPceStore.storageService = new TestStorageService(); distrPceStore.activate(); distrPceStore.addTunnelInfo(tunnelId1, tunnelConsumerId1); assertThat(distrPceStore.existsTunnelInfo(tunnelId1), is(true)); assertThat(distrPceStore.getTunnelInfo(tunnelId1), is(tunnelConsumerId1)); distrPceStore.addTunnelInfo(tunnelId2, tunnelConsumerId2); assertThat(distrPceStore.existsTunnelInfo(tunnelId2), is(true)); assertThat(distrPceStore.getTunnelInfo(tunnelId2), is(tunnelConsumerId2)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "addTunnelInfo",
                "addTunnelInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TunnelId",
                "TunnelId",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "PceccTunnelInfo",
                "",
                "delete"
            ],
            [
                "pceccTunnelInfo",
                "ResourceConsumer",
                "replace"
            ],
            [
                "",
                "tunnelConsumerId",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TUNNEL_ID_NULL",
                "TUNNEL_ID_NULL",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "checkNotNull",
                "checkNotNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pceccTunnelInfo",
                "tunnelConsumerId",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "PCECC_TUNNEL_INFO_NULL",
                "PCECC_TUNNEL_INFO_NULL",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "tunnelInfoMap",
                "tunnelInfoMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tunnelId",
                "tunnelId",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pceccTunnelInfo",
                "tunnelConsumerId",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Ethernet buildNdpSolicit(byte[] targetIp, byte[] sourceIp, byte[] destinationIp, byte[] sourceMac, byte[] destinationMac, VlanId vlan) { if (targetIp.length != Ip6Address.BYTE_LENGTH || sourceIp.length != Ip6Address.BYTE_LENGTH || destinationIp.length != Ip6Address.BYTE_LENGTH || sourceMac.length != MacAddress.MAC_ADDRESS_LENGTH || destinationMac.length != MacAddress.MAC_ADDRESS_LENGTH) { return null; } Ethernet ethernet = new Ethernet(); ethernet.setEtherType(Ethernet.TYPE_IPV6) .setDestinationMACAddress(destinationMac) .setSourceMACAddress(sourceMac); ethernet.setVlanID(vlan.id()); IPv6 ipv6 = new IPv6(); ipv6.setSourceAddress(sourceIp); ipv6.setDestinationAddress(destinationIp); ipv6.setHopLimit((byte) 255); ICMP6 icmp6 = new ICMP6(); icmp6.setIcmpType(ICMP6.NEIGHBOR_SOLICITATION); icmp6.setIcmpCode((byte) 0); NeighborSolicitation ns = new NeighborSolicitation(); ns.setTargetAddress(targetIp); if (!Arrays.equals(sourceIp, Ip6Address.ZERO.toOctets())) { ns.addOption(NeighborDiscoveryOptions.TYPE_SOURCE_LL_ADDRESS, sourceMac); } icmp6.setPayload(ns); ipv6.setPayload(icmp6); ethernet.setPayload(ipv6); return ethernet; }",
        "focal_tgt": "public static Ethernet buildNdpSolicit(Ip6Address targetIp, Ip6Address sourceIp, Ip6Address destinationIp, MacAddress sourceMac, MacAddress destinationMac, VlanId vlan) { checkNotNull(targetIp, \"Target IP address cannot be null\"); checkNotNull(sourceIp, \"Source IP address cannot be null\"); checkNotNull(destinationIp, \"Destination IP address cannot be null\"); checkNotNull(sourceMac, \"Source MAC address cannot be null\"); checkNotNull(destinationMac, \"Destination MAC address cannot be null\"); checkNotNull(vlan, \"Vlan cannot be null\"); Ethernet ethernet = new Ethernet(); ethernet.setEtherType(Ethernet.TYPE_IPV6) .setDestinationMACAddress(destinationMac) .setSourceMACAddress(sourceMac); ethernet.setVlanID(vlan.id()); IPv6 ipv6 = new IPv6(); ipv6.setSourceAddress(sourceIp.toOctets()); ipv6.setDestinationAddress(destinationIp.toOctets()); ipv6.setHopLimit(NDP_HOP_LIMIT); ICMP6 icmp6 = new ICMP6(); icmp6.setIcmpType(ICMP6.NEIGHBOR_SOLICITATION); icmp6.setIcmpCode(RESERVED_CODE); NeighborSolicitation ns = new NeighborSolicitation(); ns.setTargetAddress(targetIp.toOctets()); if (!Arrays.equals(sourceIp.toOctets(), Ip6Address.ZERO.toOctets())) { ns.addOption(NeighborDiscoveryOptions.TYPE_SOURCE_LL_ADDRESS, sourceMac.toBytes()); } icmp6.setPayload(ns); ipv6.setPayload(icmp6); ethernet.setPayload(ipv6); return ethernet; }",
        "test_src": "@Test public void testBuildNdpSolicit() throws Exception { Ethernet ethPacket = NeighborSolicitation.buildNdpSolicit(TARGET_IP.toOctets(), SRC_IP.toOctets(), DST_IP.toOctets(), SRC_MAC.toBytes(), DST_MAC.toBytes(), VLAN_ID); IPv6 ipPacket = (IPv6) ethPacket.getPayload(); ICMP6 icmp6Packet = (ICMP6) ipPacket.getPayload(); NeighborSolicitation nsPacket = (NeighborSolicitation) icmp6Packet.getPayload(); assertEquals(\"Non-DAD NS should have 1 option\", 1, nsPacket.getOptions().size()); assertEquals(\"The option should be SRC_LL_ADDR type\", TYPE_SOURCE_LL_ADDRESS, nsPacket.getOptions().stream().findFirst().get().type()); }",
        "test_tgt": "@Test public void testBuildNdpSolicit() throws Exception { final Ethernet ethPacket = NeighborSolicitation.buildNdpSolicit(TARGET_IP, SRC_IP, DST_IP, SRC_MAC, DST_MAC, VLAN_ID); assertTrue(ethPacket.getDestinationMAC().equals(DST_MAC)); assertTrue(ethPacket.getSourceMAC().equals(SRC_MAC)); assertTrue(ethPacket.getEtherType() == Ethernet.TYPE_IPV6); assertTrue(ethPacket.getVlanID() == VLAN_ID.id()); final IPv6 ipPacket = (IPv6) ethPacket.getPayload(); assertArrayEquals(ipPacket.getSourceAddress(), SRC_IP.toOctets()); assertArrayEquals(ipPacket.getDestinationAddress(), DST_IP.toOctets()); final ICMP6 icmp6Packet = (ICMP6) ipPacket.getPayload(); final NeighborSolicitation nsPacket = (NeighborSolicitation) icmp6Packet.getPayload(); assertArrayEquals(nsPacket.getTargetAddress(), TARGET_IP.toOctets()); assertEquals(\"Non-DAD NS should have 1 option\", 1, nsPacket.getOptions().size()); assertEquals(\"The option should be SRC_LL_ADDR type\", TYPE_SOURCE_LL_ADDRESS, nsPacket.getOptions().stream().findFirst().get().type()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "buildNdpSolicit",
                "buildNdpSolicit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "Ip6Address",
                "replace"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "sourceIp",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "Ip6Address",
                "replace"
            ],
            [
                "",
                "sourceIp",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Ip6Address",
                "insert"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "sourceMac",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "MacAddress",
                "replace"
            ],
            [
                "",
                "sourceMac",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "MacAddress",
                "insert"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "VlanId",
                "VlanId",
                "equal"
            ],
            [
                "vlan",
                "vlan",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "checkNotNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "sourceIp",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Target",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sourceIp",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Source",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "sourceMac",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "MacAddress",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAC_ADDRESS_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Destination",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sourceMac",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Source",
                "insert"
            ],
            [
                "",
                "MAC",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "MacAddress",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAC_ADDRESS_LENGTH",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Destination",
                "insert"
            ],
            [
                "",
                "MAC",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "vlan",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Vlan",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setEtherType",
                "setEtherType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "TYPE_IPV6",
                "TYPE_IPV6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setDestinationMACAddress",
                "setDestinationMACAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setSourceMACAddress",
                "setSourceMACAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceMac",
                "sourceMac",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setVlanID",
                "setVlanID",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "vlan",
                "vlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "IPv6",
                "IPv6",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IPv6",
                "IPv6",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setSourceAddress",
                "setSourceAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceIp",
                "sourceIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setDestinationAddress",
                "setDestinationAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHopLimit",
                "setHopLimit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "255",
                "NDP_HOP_LIMIT",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setIcmpType",
                "setIcmpType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NEIGHBOR_SOLICITATION",
                "NEIGHBOR_SOLICITATION",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setIcmpCode",
                "setIcmpCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "0",
                "RESERVED_CODE",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "NeighborSolicitation",
                "NeighborSolicitation",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "NeighborSolicitation",
                "NeighborSolicitation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTargetAddress",
                "setTargetAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "Arrays",
                "Arrays",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceIp",
                "sourceIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Ip6Address",
                "Ip6Address",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ZERO",
                "ZERO",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toOctets",
                "toOctets",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addOption",
                "addOption",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "NeighborDiscoveryOptions",
                "NeighborDiscoveryOptions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "TYPE_SOURCE_LL_ADDRESS",
                "TYPE_SOURCE_LL_ADDRESS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sourceMac",
                "sourceMac",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toBytes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Ethernet buildNdpSolicit(byte[] targetIp, byte[] sourceIp, byte[] destinationIp, byte[] sourceMac, byte[] destinationMac, VlanId vlan) { if (targetIp.length != Ip6Address.BYTE_LENGTH || sourceIp.length != Ip6Address.BYTE_LENGTH || destinationIp.length != Ip6Address.BYTE_LENGTH || sourceMac.length != MacAddress.MAC_ADDRESS_LENGTH || destinationMac.length != MacAddress.MAC_ADDRESS_LENGTH) { return null; } Ethernet ethernet = new Ethernet(); ethernet.setEtherType(Ethernet.TYPE_IPV6) .setDestinationMACAddress(destinationMac) .setSourceMACAddress(sourceMac); ethernet.setVlanID(vlan.id()); IPv6 ipv6 = new IPv6(); ipv6.setSourceAddress(sourceIp); ipv6.setDestinationAddress(destinationIp); ipv6.setHopLimit((byte) 255); ICMP6 icmp6 = new ICMP6(); icmp6.setIcmpType(ICMP6.NEIGHBOR_SOLICITATION); icmp6.setIcmpCode((byte) 0); NeighborSolicitation ns = new NeighborSolicitation(); ns.setTargetAddress(targetIp); if (!Arrays.equals(sourceIp, Ip6Address.ZERO.toOctets())) { ns.addOption(NeighborDiscoveryOptions.TYPE_SOURCE_LL_ADDRESS, sourceMac); } icmp6.setPayload(ns); ipv6.setPayload(icmp6); ethernet.setPayload(ipv6); return ethernet; }",
        "focal_tgt": "public static Ethernet buildNdpSolicit(Ip6Address targetIp, Ip6Address sourceIp, Ip6Address destinationIp, MacAddress sourceMac, MacAddress destinationMac, VlanId vlan) { checkNotNull(targetIp, \"Target IP address cannot be null\"); checkNotNull(sourceIp, \"Source IP address cannot be null\"); checkNotNull(destinationIp, \"Destination IP address cannot be null\"); checkNotNull(sourceMac, \"Source MAC address cannot be null\"); checkNotNull(destinationMac, \"Destination MAC address cannot be null\"); checkNotNull(vlan, \"Vlan cannot be null\"); Ethernet ethernet = new Ethernet(); ethernet.setEtherType(Ethernet.TYPE_IPV6) .setDestinationMACAddress(destinationMac) .setSourceMACAddress(sourceMac); ethernet.setVlanID(vlan.id()); IPv6 ipv6 = new IPv6(); ipv6.setSourceAddress(sourceIp.toOctets()); ipv6.setDestinationAddress(destinationIp.toOctets()); ipv6.setHopLimit(NDP_HOP_LIMIT); ICMP6 icmp6 = new ICMP6(); icmp6.setIcmpType(ICMP6.NEIGHBOR_SOLICITATION); icmp6.setIcmpCode(RESERVED_CODE); NeighborSolicitation ns = new NeighborSolicitation(); ns.setTargetAddress(targetIp.toOctets()); if (!Arrays.equals(sourceIp.toOctets(), Ip6Address.ZERO.toOctets())) { ns.addOption(NeighborDiscoveryOptions.TYPE_SOURCE_LL_ADDRESS, sourceMac.toBytes()); } icmp6.setPayload(ns); ipv6.setPayload(icmp6); ethernet.setPayload(ipv6); return ethernet; }",
        "test_src": "@Test public void testBuildNdpSolicitDad() throws Exception { Ethernet ethPacket = NeighborSolicitation.buildNdpSolicit(TARGET_IP.toOctets(), Ip6Address.ZERO.toOctets(), DST_IP.toOctets(), SRC_MAC.toBytes(), DST_MAC.toBytes(), VLAN_ID); IPv6 ipPacket = (IPv6) ethPacket.getPayload(); ICMP6 icmp6Packet = (ICMP6) ipPacket.getPayload(); NeighborSolicitation nsPacket = (NeighborSolicitation) icmp6Packet.getPayload(); assertEquals(\"DAD NS should have no option\", 0, nsPacket.getOptions().size()); }",
        "test_tgt": "@Test public void testBuildNdpSolicitDad() throws Exception { Ethernet ethPacket = NeighborSolicitation.buildNdpSolicit(TARGET_IP, Ip6Address.ZERO, DST_IP, SRC_MAC, DST_MAC, VLAN_ID); IPv6 ipPacket = (IPv6) ethPacket.getPayload(); ICMP6 icmp6Packet = (ICMP6) ipPacket.getPayload(); NeighborSolicitation nsPacket = (NeighborSolicitation) icmp6Packet.getPayload(); assertEquals(\"DAD NS should have no option\", 0, nsPacket.getOptions().size()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "buildNdpSolicit",
                "buildNdpSolicit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "Ip6Address",
                "replace"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "sourceIp",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "Ip6Address",
                "replace"
            ],
            [
                "",
                "sourceIp",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Ip6Address",
                "insert"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "sourceMac",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "MacAddress",
                "replace"
            ],
            [
                "",
                "sourceMac",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "MacAddress",
                "insert"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "VlanId",
                "VlanId",
                "equal"
            ],
            [
                "vlan",
                "vlan",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "checkNotNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "sourceIp",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Target",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sourceIp",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Source",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Ip6Address",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BYTE_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "sourceMac",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "MacAddress",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAC_ADDRESS_LENGTH",
                "",
                "delete"
            ],
            [
                "|",
                "",
                "delete"
            ],
            [
                "|",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Destination",
                "insert"
            ],
            [
                "",
                "IP",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "sourceMac",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Source",
                "insert"
            ],
            [
                "",
                "MAC",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "MacAddress",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAC_ADDRESS_LENGTH",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                ",",
                "replace"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Destination",
                "insert"
            ],
            [
                "",
                "MAC",
                "insert"
            ],
            [
                "",
                "address",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "checkNotNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "vlan",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Vlan",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setEtherType",
                "setEtherType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Ethernet",
                "Ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "TYPE_IPV6",
                "TYPE_IPV6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setDestinationMACAddress",
                "setDestinationMACAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "destinationMac",
                "destinationMac",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setSourceMACAddress",
                "setSourceMACAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceMac",
                "sourceMac",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setVlanID",
                "setVlanID",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "vlan",
                "vlan",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "IPv6",
                "IPv6",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IPv6",
                "IPv6",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setSourceAddress",
                "setSourceAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceIp",
                "sourceIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setDestinationAddress",
                "setDestinationAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "destinationIp",
                "destinationIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHopLimit",
                "setHopLimit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "255",
                "NDP_HOP_LIMIT",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setIcmpType",
                "setIcmpType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ICMP6",
                "ICMP6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NEIGHBOR_SOLICITATION",
                "NEIGHBOR_SOLICITATION",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setIcmpCode",
                "setIcmpCode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "0",
                "RESERVED_CODE",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "NeighborSolicitation",
                "NeighborSolicitation",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "NeighborSolicitation",
                "NeighborSolicitation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setTargetAddress",
                "setTargetAddress",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "targetIp",
                "targetIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "Arrays",
                "Arrays",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sourceIp",
                "sourceIp",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toOctets",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Ip6Address",
                "Ip6Address",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ZERO",
                "ZERO",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toOctets",
                "toOctets",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addOption",
                "addOption",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "NeighborDiscoveryOptions",
                "NeighborDiscoveryOptions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "TYPE_SOURCE_LL_ADDRESS",
                "TYPE_SOURCE_LL_ADDRESS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "sourceMac",
                "sourceMac",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toBytes",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ns",
                "ns",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "icmp6",
                "icmp6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPayload",
                "setPayload",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ipv6",
                "ipv6",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ethernet",
                "ethernet",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String getRootPackage(byte version, String nameSpace, String revision, YangToJavaNamingConflictUtil conflictResolver) { String pkg; pkg = DEFAULT_BASE_PKG; pkg = pkg + PERIOD; pkg = pkg + getYangVersion(version); pkg = pkg + PERIOD; pkg = pkg + getPkgFromNameSpace(nameSpace, conflictResolver); pkg = pkg + PERIOD; pkg = pkg + getYangRevisionStr(revision); return pkg.toLowerCase(); }",
        "focal_tgt": "public static String getRootPackage(byte version, String nameSpace, Date revision, YangToJavaNamingConflictUtil conflictResolver) { String pkg; pkg = DEFAULT_BASE_PKG; pkg = pkg + PERIOD; pkg = pkg + getYangVersion(version); pkg = pkg + PERIOD; pkg = pkg + getPkgFromNameSpace(nameSpace, conflictResolver); pkg = pkg + PERIOD; pkg = pkg + getYangRevisionStr(revision); return pkg.toLowerCase(); }",
        "test_src": "@Test public void getRootPackageTest() { conflictResolver.setPrefixForIdentifier(null); String rootPackage = getRootPackage((byte) 1, CHILD_PACKAGE, DATE1, conflictResolver); assertThat(rootPackage.equals(DEFAULT_BASE_PKG + PERIOD + VERSION_NUMBER + PERIOD + CHILD_WITH_PERIOD + PERIOD + DATE_WITH_REV1), is(true)); }",
        "test_tgt": "@Test public void getRootPackageTest() throws ParseException { conflictResolver.setPrefixForIdentifier(null); Date date = simpleDateFormat.parse(DATE1); String rootPackage = getRootPackage((byte) 1, CHILD_PACKAGE, date, conflictResolver); assertThat(rootPackage.equals(DEFAULT_BASE_PKG + PERIOD + VERSION_NUMBER + PERIOD + CHILD_WITH_PERIOD + PERIOD + DATE_WITH_REV1), is(true)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getRootPackage",
                "getRootPackage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "nameSpace",
                "nameSpace",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "Date",
                "replace"
            ],
            [
                "revision",
                "revision",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "YangToJavaNamingConflictUtil",
                "YangToJavaNamingConflictUtil",
                "equal"
            ],
            [
                "conflictResolver",
                "conflictResolver",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "DEFAULT_BASE_PKG",
                "DEFAULT_BASE_PKG",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getYangVersion",
                "getYangVersion",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getPkgFromNameSpace",
                "getPkgFromNameSpace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "nameSpace",
                "nameSpace",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "conflictResolver",
                "conflictResolver",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getYangRevisionStr",
                "getYangRevisionStr",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "revision",
                "revision",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String getRootPackage(byte version, String nameSpace, String revision, YangToJavaNamingConflictUtil conflictResolver) { String pkg; pkg = DEFAULT_BASE_PKG; pkg = pkg + PERIOD; pkg = pkg + getYangVersion(version); pkg = pkg + PERIOD; pkg = pkg + getPkgFromNameSpace(nameSpace, conflictResolver); pkg = pkg + PERIOD; pkg = pkg + getYangRevisionStr(revision); return pkg.toLowerCase(); }",
        "focal_tgt": "public static String getRootPackage(byte version, String nameSpace, Date revision, YangToJavaNamingConflictUtil conflictResolver) { String pkg; pkg = DEFAULT_BASE_PKG; pkg = pkg + PERIOD; pkg = pkg + getYangVersion(version); pkg = pkg + PERIOD; pkg = pkg + getPkgFromNameSpace(nameSpace, conflictResolver); pkg = pkg + PERIOD; pkg = pkg + getYangRevisionStr(revision); return pkg.toLowerCase(); }",
        "test_src": "@Test public void getRootPackageWithRevTest() { String rootPkgWithRev = getRootPackage((byte) 1, CHILD_PACKAGE, DATE2, null); assertThat(rootPkgWithRev.equals( DEFAULT_BASE_PKG + PERIOD + VERSION_NUMBER + PERIOD + CHILD_WITH_PERIOD + PERIOD + DATE_WITH_REV2), is(true)); }",
        "test_tgt": "@Test public void getRootPackageWithRevTest() throws ParseException { Date date = simpleDateFormat.parse(DATE2); String rootPkgWithRev = getRootPackage((byte) 1, CHILD_PACKAGE, date, null); assertThat(rootPkgWithRev.equals( DEFAULT_BASE_PKG + PERIOD + VERSION_NUMBER + PERIOD + CHILD_WITH_PERIOD + PERIOD + DATE_WITH_REV2), is(true)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getRootPackage",
                "getRootPackage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "nameSpace",
                "nameSpace",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "Date",
                "replace"
            ],
            [
                "revision",
                "revision",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "YangToJavaNamingConflictUtil",
                "YangToJavaNamingConflictUtil",
                "equal"
            ],
            [
                "conflictResolver",
                "conflictResolver",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "DEFAULT_BASE_PKG",
                "DEFAULT_BASE_PKG",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getYangVersion",
                "getYangVersion",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getPkgFromNameSpace",
                "getPkgFromNameSpace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "nameSpace",
                "nameSpace",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "conflictResolver",
                "conflictResolver",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "PERIOD",
                "PERIOD",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "getYangRevisionStr",
                "getYangRevisionStr",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "revision",
                "revision",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "pkg",
                "pkg",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toLowerCase",
                "toLowerCase",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void addPackageInfo(File path, String classInfo, String pack, boolean isChildNode) throws IOException { if (pack.contains(ORG)) { String[] strArray = pack.split(ORG); pack = ORG + strArray[1]; } try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, isChildNode)); bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN); bufferedWriter.close(); fileWriter.close(); } catch (IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } }",
        "focal_tgt": "public static void addPackageInfo(File path, String classInfo, String pack, boolean isChildNode, YangPluginConfig pluginConfig) throws IOException { pack = parsePkg(pack); try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, isChildNode, pluginConfig)); String pkg = PACKAGE + SPACE + pack + SEMI_COLAN; if (pkg.length() > LINE_SIZE) { pkg = whenDelimiterIsPersent(pkg, LINE_SIZE); } bufferedWriter.write(pkg); bufferedWriter.close(); fileWriter.close(); } catch (IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } }",
        "test_src": "@Test public void addPackageInfoTest() throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, CHECK1, CREATE_PATH, false); File filePath = new File(dirPath + File.separator + PKG_INFO); assertThat(filePath.isFile(), is(true)); }",
        "test_tgt": "@Test public void addPackageInfoTest() throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, CHECK1, CREATE_PATH, false, getStubPluginConfig()); File filePath = new File(dirPath + File.separator + PKG_INFO); assertThat(filePath.isFile(), is(true)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "addPackageInfo",
                "addPackageInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "classInfo",
                "classInfo",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "isChildNode",
                "isChildNode",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "YangPluginConfig",
                "insert"
            ],
            [
                "",
                "pluginConfig",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "pack",
                "replace"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "parsePkg",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "contains",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ORG",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "strArray",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "pack",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "split",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ORG",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pack",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ORG",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "strArray",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SLASH",
                "SLASH",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createNewFile",
                "createNewFile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FileWriter",
                "FileWriter",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FileWriter",
                "FileWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "BufferedWriter",
                "BufferedWriter",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "BufferedWriter",
                "BufferedWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CopyrightHeader",
                "CopyrightHeader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCopyrightHeader",
                "getCopyrightHeader",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "getJavaDoc",
                "getJavaDoc",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PACKAGE_INFO",
                "PACKAGE_INFO",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "classInfo",
                "classInfo",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "isChildNode",
                "isChildNode",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "pluginConfig",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "write",
                "",
                "delete"
            ],
            [
                "(",
                "String",
                "replace"
            ],
            [
                "",
                "pkg",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "PACKAGE",
                "PACKAGE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SEMI_COLAN",
                "SEMI_COLAN",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pkg",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "length",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "LINE_SIZE",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "pkg",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "whenDelimiterIsPersent",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pkg",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "LINE_SIZE",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "bufferedWriter",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "write",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "pkg",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "occured",
                "occured",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "creating",
                "creating",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void addPackageInfo(File path, String classInfo, String pack) throws IOException { if (pack.contains(ORG)) { String[] strArray = pack.split(ORG); pack = ORG + strArray[1]; } try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, false)); bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN); bufferedWriter.close(); fileWriter.close(); } catch (IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } }",
        "focal_tgt": "public static void addPackageInfo(File path, String classInfo, String pack, boolean isChildNode) throws IOException { if (pack.contains(ORG)) { String[] strArray = pack.split(ORG); pack = ORG + strArray[1]; } try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, isChildNode)); bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN); bufferedWriter.close(); fileWriter.close(); } catch (IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } }",
        "test_src": "@Test public void addPackageInfoTest() throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, \"check1\", CREATE_PATH); File filePath = new File(dirPath + File.separator + \"package-info.java\"); assertThat(filePath.isFile(), is(true)); }",
        "test_tgt": "@Test public void addPackageInfoTest() throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, CHECK1, CREATE_PATH, false); File filePath = new File(dirPath + File.separator + PKG_INFO); assertThat(filePath.isFile(), is(true)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "addPackageInfo",
                "addPackageInfo",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "classInfo",
                "classInfo",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "isChildNode",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "strArray",
                "strArray",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "strArray",
                "strArray",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SLASH",
                "SLASH",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createNewFile",
                "createNewFile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "FileWriter",
                "FileWriter",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FileWriter",
                "FileWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "packageInfo",
                "packageInfo",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "BufferedWriter",
                "BufferedWriter",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "BufferedWriter",
                "BufferedWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CopyrightHeader",
                "CopyrightHeader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getCopyrightHeader",
                "getCopyrightHeader",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "getJavaDoc",
                "getJavaDoc",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PACKAGE_INFO",
                "PACKAGE_INFO",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "classInfo",
                "classInfo",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "isChildNode",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PACKAGE",
                "PACKAGE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SEMI_COLAN",
                "SEMI_COLAN",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bufferedWriter",
                "bufferedWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fileWriter",
                "fileWriter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IOException",
                "IOException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "occured",
                "occured",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "creating",
                "creating",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public SegmentRoutingAppConfig setExcludePorts(Set<String> excludePorts) { if (excludePorts == null) { object.remove(EXCLUDE_PORTS); } else { ArrayNode arrayNode = mapper.createArrayNode(); excludePorts.forEach(portName -> { arrayNode.add(portName); }); object.set(EXCLUDE_PORTS, arrayNode); } return this; }",
        "focal_tgt": "public SegmentRoutingAppConfig setSuppressHost(Set<ConnectPoint> suppressHost) { if (suppressHost == null) { object.remove(SUPPRESS_HOST); } else { ArrayNode arrayNode = mapper.createArrayNode(); suppressHost.forEach(connectPoint -> { arrayNode.add(connectPoint.deviceId() + \"/\" + connectPoint.port()); }); object.set(SUPPRESS_HOST, arrayNode); } return this; }",
        "test_src": "@Test public void testSetExcludePorts() throws Exception { ImmutableSet.Builder<String> builder = ImmutableSet.builder(); builder.add(PORT_NAME_3); config.setExcludePorts(builder.build()); Set<String> excludePorts = config.excludePorts(); assertThat(excludePorts.size(), is(1)); assertTrue(excludePorts.contains(PORT_NAME_3)); }",
        "test_tgt": "@Test public void testSetSuppressHost() throws Exception { ImmutableSet.Builder<ConnectPoint> builder = ImmutableSet.builder(); builder.add(PORT_3); config.setSuppressHost(builder.build()); Set<ConnectPoint> suppressHost = config.suppressHost(); assertNotNull(\"suppressHost should not be null\", suppressHost); assertThat(suppressHost.size(), is(1)); assertTrue(suppressHost.contains(PORT_3)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "SegmentRoutingAppConfig",
                "SegmentRoutingAppConfig",
                "equal"
            ],
            [
                "setExcludePorts",
                "setSuppressHost",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "ConnectPoint",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "excludePorts",
                "suppressHost",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "excludePorts",
                "suppressHost",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "EXCLUDE_PORTS",
                "SUPPRESS_HOST",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ArrayNode",
                "ArrayNode",
                "equal"
            ],
            [
                "arrayNode",
                "arrayNode",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "mapper",
                "mapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createArrayNode",
                "createArrayNode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "excludePorts",
                "suppressHost",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "forEach",
                "forEach",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "portName",
                "connectPoint",
                "replace"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "arrayNode",
                "arrayNode",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "portName",
                "connectPoint",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "deviceId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "connectPoint",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "port",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "EXCLUDE_PORTS",
                "SUPPRESS_HOST",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "arrayNode",
                "arrayNode",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void setSelectedDatabaseConnection(String selected) { updateSelectedDatabase(selected, true); }",
        "focal_tgt": "public void setSelectedDatabaseConnection(DatabaseItem selectedDatabaseConnection) { DatabaseItem old = this.selectedDatabaseConnection; this.selectedDatabaseConnection = selectedDatabaseConnection; DatabaseMeta databaseMeta = this.selectedDatabaseConnection == null ? null : jobMeta.findDatabase(this.selectedDatabaseConnection.getName()); boolean validDatabaseSelected = databaseMeta != null; setDatabaseInteractionButtonsDisabled(!validDatabaseSelected); updateDatabaseItemsList(); if (!suppressEventHandling && (old == null && this.selectedDatabaseConnection != null || !old.equals(this.selectedDatabaseConnection))) { if (validDatabaseSelected) { try { getConfig().setConnectionInfo(databaseMeta.getName(), databaseMeta.getURL(), databaseMeta.getUsername(), databaseMeta.getPassword()); } catch (KettleDatabaseException ex) { sqoopJobEntry.logError(BaseMessages.getString(AbstractSqoopJobEntry.class, \"ErrorConfiguringDatabaseConnection\"), ex); } } else { getConfig().copyConnectionInfoFromAdvanced(); } } firePropertyChange(\"selectedDatabaseConnection\", old, this.selectedDatabaseConnection); }",
        "test_src": "@Test public void setSelectedDatabaseConnection() { AbstractSqoopJobEntryController controller = new TestSqoopJobEntryController(); String database = \"testing\"; controller.setSelectedDatabaseConnection(database); assertNull(\"Setting a database to one that doesn't exist in the JobMeta should not work\", controller.getConfig().getDatabase()); controller.getJobMeta().addDatabase(new DatabaseMeta(database, \"MYSQL\", null, null, null, null, null, null)); controller.setSelectedDatabaseConnection(database); assertEquals(database, controller.getConfig().getDatabase()); }",
        "test_tgt": "@Test public void setSelectedDatabaseConnection() throws KettleDatabaseException { AbstractSqoopJobEntryController controller = new TestSqoopJobEntryController(); String connect = \"jdbc:bogus://bogus\"; String username = \"username\"; String password = \"password\"; controller.getConfig().setConnect(connect); controller.getConfig().setUsername(username); controller.getConfig().setPassword(password); String connectAdvanced = \"jdbc:advanced://bogus\"; String usernameAdvanced = \"advanced_user\"; String passwordAdvanced = \"super password!\"; controller.getConfig().setConnectFromAdvanced(connectAdvanced); controller.getConfig().setUsernameFromAdvanced(usernameAdvanced); controller.getConfig().setPasswordFromAdvanced(passwordAdvanced); DatabaseItem test = new DatabaseItem(\"test\"); DatabaseMeta database = new DatabaseMeta(test.getName(), \"MYSQL\", null, null, null, null, null, null); controller.getJobMeta().addDatabase(database); controller.setSelectedDatabaseConnection(test); assertEquals(test, controller.getSelectedDatabaseConnection()); assertEquals(test.getName(), controller.getConfig().getDatabase()); assertEquals(database.getURL(), controller.getConfig().getConnect()); assertEquals(database.getUsername(), controller.getConfig().getUsername()); assertEquals(database.getPassword(), controller.getConfig().getPassword()); assertEquals(connectAdvanced, controller.getConfig().getConnectFromAdvanced()); assertEquals(usernameAdvanced, controller.getConfig().getUsernameFromAdvanced()); assertEquals(passwordAdvanced, controller.getConfig().getPasswordFromAdvanced()); controller.setSelectedDatabaseConnection(controller.USE_ADVANCED_OPTIONS); assertEquals(controller.USE_ADVANCED_OPTIONS, controller.getSelectedDatabaseConnection()); assertNull(controller.getConfig().getDatabase()); assertEquals(connectAdvanced, controller.getConfig().getConnect()); assertEquals(usernameAdvanced, controller.getConfig().getUsername()); assertEquals(passwordAdvanced, controller.getConfig().getPassword()); assertEquals(connectAdvanced, controller.getConfig().getConnectFromAdvanced()); assertEquals(usernameAdvanced, controller.getConfig().getUsernameFromAdvanced()); assertEquals(passwordAdvanced, controller.getConfig().getPasswordFromAdvanced()); controller.setSelectedDatabaseConnection(test); assertEquals(test, controller.getSelectedDatabaseConnection()); assertEquals(test.getName(), controller.getConfig().getDatabase()); assertEquals(database.getURL(), controller.getConfig().getConnect()); assertEquals(database.getUsername(), controller.getConfig().getUsername()); assertEquals(database.getPassword(), controller.getConfig().getPassword()); assertEquals(connectAdvanced, controller.getConfig().getConnectFromAdvanced()); assertEquals(usernameAdvanced, controller.getConfig().getUsernameFromAdvanced()); assertEquals(passwordAdvanced, controller.getConfig().getPasswordFromAdvanced()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "setSelectedDatabaseConnection",
                "setSelectedDatabaseConnection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "selected",
                "DatabaseItem",
                "replace"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "updateSelectedDatabase",
                "DatabaseItem",
                "replace"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "DatabaseMeta",
                "insert"
            ],
            [
                "",
                "databaseMeta",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "jobMeta",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "findDatabase",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "selected",
                "this",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "validDatabaseSelected",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "databaseMeta",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "setDatabaseInteractionButtonsDisabled",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "validDatabaseSelected",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "updateDatabaseItemsList",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "suppressEventHandling",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "equals",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "validDatabaseSelected",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "getConfig",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setConnectionInfo",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "databaseMeta",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getName",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "databaseMeta",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getURL",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "databaseMeta",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getUsername",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "databaseMeta",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getPassword",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "KettleDatabaseException",
                "insert"
            ],
            [
                "",
                "ex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "sqoopJobEntry",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "logError",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "BaseMessages",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getString",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "AbstractSqoopJobEntry",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "ErrorConfiguringDatabaseConnection",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "getConfig",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "copyConnectionInfoFromAdvanced",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "firePropertyChange",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "selectedDatabaseConnection",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "CompletableFuture<Void> concat(SegmentHandle targetHandle, long offset, SegmentHandle sourceHandle, Duration timeout);",
        "focal_tgt": "CompletableFuture<Void> concat(SegmentHandle targetHandle, long offset, String sourceSegment, Duration timeout);",
        "test_src": "@Test public void testConcat() throws Exception { final String context = \"Concat\"; try (Storage s = createStorage()) { s.initialize(0); HashMap<String, ByteArrayOutputStream> appendData = populate(s, context); val firstSegmentName = getSegmentName(0, context); val firstSegmentHandle = s.openWrite(firstSegmentName).join(); AtomicLong firstSegmentLength = new AtomicLong(s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join().getLength()); assertThrows(\"concat() did not throw for non-existent target segment name.\", () -> s.concat(createHandle(\"foo1\", false), 0, firstSegmentHandle, TIMEOUT), ex -> ex instanceof StreamSegmentNotExistsException); assertThrows(\"concat() did not throw for invalid source StreamSegment name.\", () -> s.concat(firstSegmentHandle, firstSegmentLength.get(), createHandle(\"foo2\", false), TIMEOUT), ex -> ex instanceof StreamSegmentNotExistsException); ArrayList<String> concatOrder = new ArrayList<>(); concatOrder.add(firstSegmentName); for (String sourceSegment : appendData.keySet()) { if (sourceSegment.equals(firstSegmentName)) { continue; } val sourceWriteHandle = s.openWrite(sourceSegment).join(); assertThrows(\"Concat allowed when source segment is not sealed.\", () -> s.concat(firstSegmentHandle, firstSegmentLength.get(), sourceWriteHandle, TIMEOUT), ex -> ex instanceof IllegalStateException); s.seal(sourceWriteHandle, TIMEOUT).join(); SegmentProperties preConcatTargetProps = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); SegmentProperties sourceProps = s.getStreamSegmentInfo(sourceSegment, TIMEOUT).join(); s.concat(firstSegmentHandle, firstSegmentLength.get(), sourceWriteHandle, TIMEOUT).join(); concatOrder.add(sourceSegment); SegmentProperties postConcatTargetProps = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); Assert.assertFalse(\"concat() did not delete source segment\", s.exists(sourceSegment, TIMEOUT).join()); Assert.assertEquals(\"Unexpected target StreamSegment.length after concatenation.\", preConcatTargetProps.getLength() + sourceProps.getLength(), postConcatTargetProps.getLength()); firstSegmentLength.set(postConcatTargetProps.getLength()); } SegmentProperties segmentProperties = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); byte[] readBuffer = new byte[(int) segmentProperties.getLength()]; int bytesRead = s.read(firstSegmentHandle, 0, readBuffer, 0, readBuffer.length, TIMEOUT).join(); Assert.assertEquals(\"Unexpected number of bytes read.\", readBuffer.length, bytesRead); int offset = 0; for (String segmentName : concatOrder) { byte[] concatData = appendData.get(segmentName).toByteArray(); AssertExtensions.assertArrayEquals(\"Unexpected concat data.\", concatData, 0, readBuffer, offset, concatData.length); offset += concatData.length; } Assert.assertEquals(\"Concat included more bytes than expected.\", offset, readBuffer.length); } }",
        "test_tgt": "@Test public void testConcat() throws Exception { final String context = \"Concat\"; try (Storage s = createStorage()) { s.initialize(DEFAULT_EPOCH); HashMap<String, ByteArrayOutputStream> appendData = populate(s, context); val firstSegmentName = getSegmentName(0, context); val firstSegmentHandle = s.openWrite(firstSegmentName).join(); AtomicLong firstSegmentLength = new AtomicLong(s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join().getLength()); assertThrows(\"concat() did not throw for non-existent target segment name.\", () -> s.concat(createHandle(\"foo1\", false, DEFAULT_EPOCH), 0, firstSegmentName, TIMEOUT), ex -> ex instanceof StreamSegmentNotExistsException); assertThrows(\"concat() did not throw for invalid source StreamSegment name.\", () -> s.concat(firstSegmentHandle, firstSegmentLength.get(), \"foo2\", TIMEOUT), ex -> ex instanceof StreamSegmentNotExistsException); ArrayList<String> concatOrder = new ArrayList<>(); concatOrder.add(firstSegmentName); for (String sourceSegment : appendData.keySet()) { if (sourceSegment.equals(firstSegmentName)) { continue; } assertThrows(\"Concat allowed when source segment is not sealed.\", () -> s.concat(firstSegmentHandle, firstSegmentLength.get(), sourceSegment, TIMEOUT), ex -> ex instanceof IllegalStateException); val sourceWriteHandle = s.openWrite(sourceSegment).join(); s.seal(sourceWriteHandle, TIMEOUT).join(); SegmentProperties preConcatTargetProps = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); SegmentProperties sourceProps = s.getStreamSegmentInfo(sourceSegment, TIMEOUT).join(); s.concat(firstSegmentHandle, firstSegmentLength.get(), sourceSegment, TIMEOUT).join(); concatOrder.add(sourceSegment); SegmentProperties postConcatTargetProps = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); Assert.assertFalse(\"concat() did not delete source segment\", s.exists(sourceSegment, TIMEOUT).join()); Assert.assertEquals(\"Unexpected target StreamSegment.length after concatenation.\", preConcatTargetProps.getLength() + sourceProps.getLength(), postConcatTargetProps.getLength()); firstSegmentLength.set(postConcatTargetProps.getLength()); } SegmentProperties segmentProperties = s.getStreamSegmentInfo(firstSegmentName, TIMEOUT).join(); byte[] readBuffer = new byte[(int) segmentProperties.getLength()]; int bytesRead = s.read(firstSegmentHandle, 0, readBuffer, 0, readBuffer.length, TIMEOUT).join(); Assert.assertEquals(\"Unexpected number of bytes read.\", readBuffer.length, bytesRead); int offset = 0; for (String segmentName : concatOrder) { byte[] concatData = appendData.get(segmentName).toByteArray(); AssertExtensions.assertArrayEquals(\"Unexpected concat data.\", concatData, 0, readBuffer, offset, concatData.length); offset += concatData.length; } Assert.assertEquals(\"Concat included more bytes than expected.\", offset, readBuffer.length); } }",
        "label": 1,
        "edit_seq": [
            [
                "CompletableFuture",
                "CompletableFuture",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "concat",
                "concat",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SegmentHandle",
                "SegmentHandle",
                "equal"
            ],
            [
                "targetHandle",
                "targetHandle",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "offset",
                "offset",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "SegmentHandle",
                "",
                "delete"
            ],
            [
                "sourceHandle",
                "String",
                "replace"
            ],
            [
                "",
                "sourceSegment",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Duration",
                "Duration",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "synchronized boolean removeFinishedWrites() { long currentTime = this.timeSupplier.get(); long totalElapsed = 0; int removedCount = 0; while (!this.writes.isEmpty() && this.writes.peekFirst().isDone()) { Write w = this.writes.removeFirst(); this.totalLength = Math.max(0, this.totalLength - w.data.getLength()); removedCount++; totalElapsed += currentTime - w.getTimestamp(); } if (removedCount > 0) { this.lastDurationMillis = (int) (totalElapsed / removedCount / AbstractTimer.NANOS_TO_MILLIS); } return !this.writes.isEmpty(); }",
        "focal_tgt": "synchronized EnumSet<CleanupStatus> removeFinishedWrites() { Exceptions.checkNotClosed(this.closed, this); long currentTime = this.timeSupplier.get(); long totalElapsed = 0; int removedCount = 0; boolean failedWrite = false; while (!this.writes.isEmpty() && this.writes.peekFirst().isDone()) { Write w = this.writes.removeFirst(); this.totalLength = Math.max(0, this.totalLength - w.data.getLength()); removedCount++; totalElapsed += currentTime - w.getTimestamp(); failedWrite |= w.getFailureCause() != null; } if (removedCount > 0) { this.lastDurationMillis = (int) (totalElapsed / removedCount / AbstractTimer.NANOS_TO_MILLIS); } CleanupStatus empty = this.writes.isEmpty() ? CleanupStatus.QueueEmpty : CleanupStatus.QueueNotEmpty; return failedWrite ? EnumSet.of(CleanupStatus.WriteFailed, empty) : EnumSet.of(empty); }",
        "test_src": "@Test public void testRemoveFinishedWrites() { final int timeIncrement = 1234 * 1000; AtomicLong time = new AtomicLong(); val q = new WriteQueue(MAX_PARALLELISM, time::get); val writes = new ArrayDeque<Write>(); for (int i = 0; i < ITEM_COUNT; i++) { time.addAndGet(timeIncrement); val w = new Write(new ByteArraySegment(new byte[i]), new TestWriteLedger(i), new CompletableFuture<>()); if (i % 2 == 0) { w.complete(new TestLogAddress(i)); } q.add(w); writes.addLast(w); } while (!writes.isEmpty()) { val write = writes.pollFirst(); if (!write.isDone()) { boolean result1 = q.removeFinishedWrites(); Assert.assertTrue(\"Unexpected value from removeFinishedWrites when there were writes left in the queue.\", result1); val stats1 = q.getStatistics(); Assert.assertEquals(\"Unexpected size after removeFinishedWrites with no effect.\", writes.size() + 1, stats1.getSize()); write.complete(new TestLogAddress(time.get())); } long expectedElapsed = write.getTimestamp(); int removed = 1; while (!writes.isEmpty() && writes.peekFirst().isDone()) { expectedElapsed += writes.pollFirst().getTimestamp(); removed++; } expectedElapsed = (time.get() * removed - expectedElapsed) / AbstractTimer.NANOS_TO_MILLIS / removed; boolean result2 = q.removeFinishedWrites(); Assert.assertEquals(\"Unexpected result from removeFinishedWrites.\", !writes.isEmpty(), result2); val stats2 = q.getStatistics(); Assert.assertEquals(\"Unexpected size after removeFinishedWrites.\", writes.size(), stats2.getSize()); Assert.assertEquals(\"Unexpected getExpectedProcessingTimeMillis after clear.\", expectedElapsed, stats2.getExpectedProcessingTimeMillis()); } }",
        "test_tgt": "@Test public void testRemoveFinishedWrites() { final int timeIncrement = 1234 * 1000; AtomicLong time = new AtomicLong(); val q = new WriteQueue(MAX_PARALLELISM, time::get); val writes = new ArrayDeque<Write>(); for (int i = 0; i < ITEM_COUNT; i++) { time.addAndGet(timeIncrement); val w = new Write(new ByteArraySegment(new byte[i]), new TestWriteLedger(i), new CompletableFuture<>()); if (i % 2 == 0) { w.setEntryId(i); w.complete(); } q.add(w); writes.addLast(w); } while (!writes.isEmpty()) { val write = writes.pollFirst(); if (!write.isDone()) { val result1 = q.removeFinishedWrites(); AssertExtensions.assertContainsSameElements(\"Unexpected value from removeFinishedWrites when there were writes left in the queue.\", EnumSet.of(WriteQueue.CleanupStatus.QueueNotEmpty), result1); val stats1 = q.getStatistics(); Assert.assertEquals(\"Unexpected size after removeFinishedWrites with no effect.\", writes.size() + 1, stats1.getSize()); write.setEntryId(time.get()); write.complete(); } long expectedElapsed = write.getTimestamp(); int removed = 1; while (!writes.isEmpty() && writes.peekFirst().isDone()) { expectedElapsed += writes.pollFirst().getTimestamp(); removed++; } expectedElapsed = (time.get() * removed - expectedElapsed) / AbstractTimer.NANOS_TO_MILLIS / removed; val result2 = q.removeFinishedWrites(); val expectedResult = EnumSet.of(writes.isEmpty() ? WriteQueue.CleanupStatus.QueueEmpty : WriteQueue.CleanupStatus.QueueNotEmpty); AssertExtensions.assertContainsSameElements(\"Unexpected result from removeFinishedWrites.\", expectedResult, result2); val stats2 = q.getStatistics(); Assert.assertEquals(\"Unexpected size after removeFinishedWrites.\", writes.size(), stats2.getSize()); Assert.assertEquals(\"Unexpected getExpectedProcessingTimeMillis after clear.\", expectedElapsed, stats2.getExpectedProcessingTimeMillis()); } val w3 = new Write(new ByteArraySegment(new byte[1]), new TestWriteLedger(0), new CompletableFuture<>()); q.add(w3); w3.fail(new IntentionalException(), true); val result3 = q.removeFinishedWrites(); AssertExtensions.assertContainsSameElements(\"Unexpected value from removeFinishedWrites when there were failed writes.\", EnumSet.of(WriteQueue.CleanupStatus.QueueEmpty, WriteQueue.CleanupStatus.WriteFailed), result3); }",
        "label": 1,
        "edit_seq": [
            [
                "synchronized",
                "synchronized",
                "equal"
            ],
            [
                "boolean",
                "EnumSet",
                "replace"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "CleanupStatus",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "removeFinishedWrites",
                "removeFinishedWrites",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "Exceptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "checkNotClosed",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "closed",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "this",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "currentTime",
                "currentTime",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "timeSupplier",
                "timeSupplier",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "totalElapsed",
                "totalElapsed",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "removedCount",
                "removedCount",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "failedWrite",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writes",
                "writes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "isEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writes",
                "writes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "peekFirst",
                "peekFirst",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isDone",
                "isDone",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Write",
                "Write",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writes",
                "writes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "removeFirst",
                "removeFirst",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "totalLength",
                "totalLength",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "totalLength",
                "totalLength",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getLength",
                "getLength",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "removedCount",
                "removedCount",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "totalElapsed",
                "totalElapsed",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "currentTime",
                "currentTime",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTimestamp",
                "getTimestamp",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "failedWrite",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "w",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getFailureCause",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "removedCount",
                "removedCount",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lastDurationMillis",
                "lastDurationMillis",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "totalElapsed",
                "totalElapsed",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "removedCount",
                "removedCount",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "AbstractTimer",
                "AbstractTimer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NANOS_TO_MILLIS",
                "NANOS_TO_MILLIS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "!",
                "CleanupStatus",
                "replace"
            ],
            [
                "",
                "empty",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "writes",
                "writes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "isEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "CleanupStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "QueueEmpty",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "CleanupStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "QueueNotEmpty",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "failedWrite",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "EnumSet",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "CleanupStatus",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "WriteFailed",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "empty",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "EnumSet",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "empty",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public IdResponse createUser(UserDTO user) { IdResponse response = new IdResponse(); try { Validate.notNull(user, \"\u7528\u6237\u53c2\u6570\u4e3a\u7a7a\"); User userEntity = BeanMapper.map(user, User.class); BeanValidators.validateWithException(validator, userEntity); accountService.saveUser(userEntity); return new IdResponse(userEntity.getId()); } catch (ConstraintViolationException e) { String message = StringUtils.join(BeanValidators.extractPropertyAndMessageAsList(e, \" \"), \"\\n\"); return handleParameterError(response, e, message); } catch (RuntimeException e) { if (Exceptions.isCausedBy(e, org.hibernate.exception.ConstraintViolationException.class)) { String message = \"\u65b0\u5efa\u7528\u6237\u53c2\u6570\u5b58\u5728\u552f\u4e00\u6027\u51b2\u7a81(\u7528\u6237:\" + user + \")\"; return handleParameterError(response, e, message); } else { return handleGeneralError(response, e); } } }",
        "focal_tgt": "@Override public IdResult createUser(UserDTO user) { IdResult result = new IdResult(); try { Validate.notNull(user, \"\u7528\u6237\u53c2\u6570\u4e3a\u7a7a\"); User userEntity = BeanMapper.map(user, User.class); BeanValidators.validateWithException(validator, userEntity); accountService.saveUser(userEntity); return new IdResult(userEntity.getId()); } catch (ConstraintViolationException e) { String message = StringUtils.join(BeanValidators.extractPropertyAndMessageAsList(e, \" \"), \"\\n\"); return handleParameterError(result, e, message); } catch (RuntimeException e) { if (Exceptions.isCausedBy(e, org.hibernate.exception.ConstraintViolationException.class)) { String message = \"\u65b0\u5efa\u7528\u6237\u53c2\u6570\u5b58\u5728\u552f\u4e00\u6027\u51b2\u7a81(\u7528\u6237:\" + user + \")\"; return handleParameterError(result, e, message); } else { return handleGeneralError(result, e); } } }",
        "test_src": "@Test public void createUserWithInvalidLoginName() { User user = UserData.randomUser(); UserDTO userDTO = BeanMapper.map(user, UserDTO.class); userDTO.setLoginName(null); IdResponse response = accountWebServiceClient.createUser(userDTO); assertEquals(WSResponse.PARAMETER_ERROR, response.getCode()); userDTO.setLoginName(\"user\"); response = accountWebServiceClient.createUser(userDTO); assertEquals(WSResponse.PARAMETER_ERROR, response.getCode()); }",
        "test_tgt": "@Test public void createUserWithInvalidLoginName() { User user = UserData.randomUser(); UserDTO userDTO = BeanMapper.map(user, UserDTO.class); userDTO.setLoginName(null); IdResult response = accountWebServiceClient.createUser(userDTO); assertEquals(WSResult.PARAMETER_ERROR, response.getCode()); userDTO.setLoginName(\"user\"); response = accountWebServiceClient.createUser(userDTO); assertEquals(WSResult.PARAMETER_ERROR, response.getCode()); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "IdResponse",
                "IdResult",
                "replace"
            ],
            [
                "createUser",
                "createUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "UserDTO",
                "UserDTO",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "IdResponse",
                "",
                "delete"
            ],
            [
                "response",
                "IdResult",
                "replace"
            ],
            [
                "",
                "result",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IdResponse",
                "IdResult",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\u7528\u6237\u53c2\u6570\u4e3a\u7a7a",
                "\u7528\u6237\u53c2\u6570\u4e3a\u7a7a",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "userEntity",
                "userEntity",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BeanMapper",
                "BeanMapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "BeanValidators",
                "BeanValidators",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "validateWithException",
                "validateWithException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "validator",
                "validator",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "userEntity",
                "userEntity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "accountService",
                "accountService",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "saveUser",
                "saveUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "userEntity",
                "userEntity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IdResponse",
                "IdResult",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "userEntity",
                "userEntity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getId",
                "getId",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ConstraintViolationException",
                "ConstraintViolationException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "StringUtils",
                "StringUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "join",
                "join",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "BeanValidators",
                "BeanValidators",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "extractPropertyAndMessageAsList",
                "extractPropertyAndMessageAsList",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "handleParameterError",
                "handleParameterError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exceptions",
                "Exceptions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isCausedBy",
                "isCausedBy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hibernate",
                "hibernate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ConstraintViolationException",
                "ConstraintViolationException",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\u65b0\u5efa\u7528\u6237\u53c2\u6570\u5b58\u5728\u552f\u4e00\u6027\u51b2\u7a81",
                "\u65b0\u5efa\u7528\u6237\u53c2\u6570\u5b58\u5728\u552f\u4e00\u6027\u51b2\u7a81",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\u7528\u6237",
                "\u7528\u6237",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "handleParameterError",
                "handleParameterError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "handleGeneralError",
                "handleGeneralError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public GetUserResponse getUser(Long id) { GetUserResponse response = new GetUserResponse(); try { Validate.notNull(id, \"id\u53c2\u6570\u4e3a\u7a7a\"); User user = accountService.getUser(id); Validate.notNull(user, \"\u7528\u6237\u4e0d\u5b58\u5728(id:\" + id + \")\"); UserDTO dto = BeanMapper.map(user, UserDTO.class); response.setUser(dto); return response; } catch (IllegalArgumentException e) { return handleParameterError(response, e); } catch (RuntimeException e) { return handleGeneralError(response, e); } }",
        "focal_tgt": "@Override public GetUserResult getUser(Long id) { GetUserResult result = new GetUserResult(); try { Validate.notNull(id, \"id\u53c2\u6570\u4e3a\u7a7a\"); User user = accountService.getUser(id); Validate.notNull(user, \"\u7528\u6237\u4e0d\u5b58\u5728(id:\" + id + \")\"); UserDTO dto = BeanMapper.map(user, UserDTO.class); result.setUser(dto); return result; } catch (IllegalArgumentException e) { return handleParameterError(result, e); } catch (RuntimeException e) { return handleGeneralError(result, e); } }",
        "test_src": "@Test @Category(Smoke.class) public void getUser() { GetUserResponse response = accountWebServiceClient.getUser(1L); assertEquals(\"admin\", response.getUser().getLoginName()); }",
        "test_tgt": "@Test @Category(Smoke.class) public void getUser() { GetUserResult response = accountWebServiceClient.getUser(1L); assertEquals(\"admin\", response.getUser().getLoginName()); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "GetUserResponse",
                "GetUserResult",
                "replace"
            ],
            [
                "getUser",
                "getUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "GetUserResponse",
                "",
                "delete"
            ],
            [
                "response",
                "GetUserResult",
                "replace"
            ],
            [
                "",
                "result",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "GetUserResponse",
                "GetUserResult",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "id\u53c2\u6570\u4e3a\u7a7a",
                "id\u53c2\u6570\u4e3a\u7a7a",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "accountService",
                "accountService",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getUser",
                "getUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\u7528\u6237\u4e0d\u5b58\u5728",
                "\u7528\u6237\u4e0d\u5b58\u5728",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "UserDTO",
                "UserDTO",
                "equal"
            ],
            [
                "dto",
                "dto",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "BeanMapper",
                "BeanMapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "UserDTO",
                "UserDTO",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setUser",
                "setUser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dto",
                "dto",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "handleParameterError",
                "handleParameterError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RuntimeException",
                "RuntimeException",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "handleGeneralError",
                "handleGeneralError",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "result",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void changeReplicationFactor(Topic topic, Handler<AsyncResult<Void>> handler) { LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); }",
        "focal_tgt": "@Override public Future<Void> changeReplicationFactor(Topic topic) { Future<Void> handler = Future.future(); LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); return handler; }",
        "test_src": "@Test public void changeReplicationFactor_missingExecutable(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; final String doesNotExist = \"/some/executable/that/does/not/exist\"; Subclass sub = new Subclass(adminClient, vertx, config, doesNotExist, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic, ar -> { context.assertFalse(ar.succeeded()); final String message = ar.cause().getMessage(); context.assertTrue(message.contains(\"lacks an executable arg[0]\") && message.contains(\"/some/executable/that/does/not/exist\")); async.complete(); }); }",
        "test_tgt": "@Test public void changeReplicationFactor_missingExecutable(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; final String doesNotExist = \"/some/executable/that/does/not/exist\"; Subclass sub = new Subclass(adminClient, vertx, config, doesNotExist, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic).setHandler(ar -> { context.assertFalse(ar.succeeded()); final String message = ar.cause().getMessage(); context.assertTrue(message.contains(\"lacks an executable arg[0]\") && message.contains(\"/some/executable/that/does/not/exist\")); async.complete(); }); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "",
                "delete"
            ],
            [
                "changeReplicationFactor",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Topic",
                "",
                "delete"
            ],
            [
                "topic",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Handler",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "AsyncResult",
                "Future",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "",
                "changeReplicationFactor",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Topic",
                "insert"
            ],
            [
                "",
                "topic",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Void",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "=",
                "replace"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "future",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Changing",
                "Changing",
                "equal"
            ],
            [
                "replication",
                "replication",
                "equal"
            ],
            [
                "factor",
                "factor",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumReplicas",
                "getNumReplicas",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ZOOKEEPER_CONNECT",
                "ZOOKEEPER_CONNECT",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Generating",
                "Generating",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "generateReassignment",
                "generateReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createTmpFile",
                "createTmpFile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OutputStreamWriter",
                "OutputStreamWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FileOutputStream",
                "FileOutputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "StandardCharsets",
                "StandardCharsets",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UTF_8",
                "UTF_8",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Starting",
                "Starting",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeReassignment",
                "executeReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "10_000",
                "10_000",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_VERIFY_INTERVAL_MS",
                "REASSIGN_VERIFY_INTERVAL_MS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "every",
                "every",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "seconds",
                "seconds",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SECONDS",
                "SECONDS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MILLISECONDS",
                "MILLISECONDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPeriodic",
                "setPeriodic",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "verifyReassignment",
                "verifyReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "succeeded",
                "succeeded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "timed",
                "timed",
                "equal"
            ],
            [
                "out",
                "out",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Timeout",
                "Timeout",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "verifying",
                "verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cause",
                "cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "CompositeFuture",
                "CompositeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "all",
                "all",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHandler",
                "setHandler",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "return",
                "replace"
            ],
            [
                "",
                "handler",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "@Override public void changeReplicationFactor(Topic topic, Handler<AsyncResult<Void>> handler) { LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); }",
        "focal_tgt": "@Override public Future<Void> changeReplicationFactor(Topic topic) { Future<Void> handler = Future.future(); LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); return handler; }",
        "test_src": "@Test public void changeReplicationFactor(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; Subclass sub = new Subclass(adminClient, vertx, config, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic, ar -> { context.assertTrue(ar.succeeded()); async.complete(); }); }",
        "test_tgt": "@Test public void changeReplicationFactor(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; Subclass sub = new Subclass(adminClient, vertx, config, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic).setHandler(ar -> { context.assertTrue(ar.succeeded()); async.complete(); }); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "",
                "delete"
            ],
            [
                "changeReplicationFactor",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Topic",
                "",
                "delete"
            ],
            [
                "topic",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Handler",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "AsyncResult",
                "Future",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "",
                "changeReplicationFactor",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Topic",
                "insert"
            ],
            [
                "",
                "topic",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Void",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "=",
                "replace"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "future",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Changing",
                "Changing",
                "equal"
            ],
            [
                "replication",
                "replication",
                "equal"
            ],
            [
                "factor",
                "factor",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumReplicas",
                "getNumReplicas",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ZOOKEEPER_CONNECT",
                "ZOOKEEPER_CONNECT",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Generating",
                "Generating",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "generateReassignment",
                "generateReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createTmpFile",
                "createTmpFile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OutputStreamWriter",
                "OutputStreamWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FileOutputStream",
                "FileOutputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "StandardCharsets",
                "StandardCharsets",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UTF_8",
                "UTF_8",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Starting",
                "Starting",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeReassignment",
                "executeReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "10_000",
                "10_000",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_VERIFY_INTERVAL_MS",
                "REASSIGN_VERIFY_INTERVAL_MS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "every",
                "every",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "seconds",
                "seconds",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SECONDS",
                "SECONDS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MILLISECONDS",
                "MILLISECONDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPeriodic",
                "setPeriodic",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "verifyReassignment",
                "verifyReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "succeeded",
                "succeeded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "timed",
                "timed",
                "equal"
            ],
            [
                "out",
                "out",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Timeout",
                "Timeout",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "verifying",
                "verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cause",
                "cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "CompositeFuture",
                "CompositeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "all",
                "all",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHandler",
                "setHandler",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "return",
                "replace"
            ],
            [
                "",
                "handler",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "@Override public void changeReplicationFactor(Topic topic, Handler<AsyncResult<Void>> handler) { LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); }",
        "focal_tgt": "@Override public Future<Void> changeReplicationFactor(Topic topic) { Future<Void> handler = Future.future(); LOGGER.info(\"Changing replication factor of topic {} to {}\", topic.getTopicName(), topic.getNumReplicas()); final String zookeeper = config.get(Config.ZOOKEEPER_CONNECT); Future<File> generateFuture = Future.future(); vertx.executeBlocking(fut -> { try { LOGGER.debug(\"Generating reassignment json for topic {}\", topic.getTopicName()); String reassignment = generateReassignment(topic, zookeeper); LOGGER.debug(\"Reassignment json for topic {}: {}\", topic.getTopicName(), reassignment); File reassignmentJsonFile = ProcessHelper.createTmpFile(\"-reassignment.json\"); try (Writer w = new OutputStreamWriter(new FileOutputStream(reassignmentJsonFile), StandardCharsets.UTF_8)) { w.write(reassignment); } fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, generateFuture); Future<File> executeFuture = Future.future(); generateFuture.compose(reassignmentJsonFile -> { vertx.executeBlocking(fut -> { final Long throttle = config.get(Config.REASSIGN_THROTTLE); try { LOGGER.debug(\"Starting reassignment for topic {} with throttle {}\", topic.getTopicName(), throttle); executeReassignment(reassignmentJsonFile, zookeeper, throttle); fut.complete(reassignmentJsonFile); } catch (Exception e) { fut.fail(e); } }, executeFuture); }, executeFuture); Future<Void> periodicFuture = Future.future(); Future<Void> reassignmentFinishedFuture = Future.future(); executeFuture.compose(reassignmentJsonFile -> { long timeout = 10_000; long first = System.currentTimeMillis(); final Long periodMs = config.get(Config.REASSIGN_VERIFY_INTERVAL_MS); LOGGER.debug(\"Verifying reassignment every {} seconds\", TimeUnit.SECONDS.convert(periodMs, TimeUnit.MILLISECONDS)); vertx.setPeriodic(periodMs, timerId -> vertx.<Boolean>executeBlocking(fut -> { LOGGER.debug(String.format(\"Verifying reassignment for topic {} (timer id=%s)\", topic.getTopicName(), timerId)); final Long throttle = config.get(Config.REASSIGN_THROTTLE); final boolean reassignmentComplete; try { reassignmentComplete = verifyReassignment(reassignmentJsonFile, zookeeper, throttle); } catch (Exception e) { fut.fail(e); return; } fut.complete(reassignmentComplete); }, ar -> { if (ar.succeeded()) { if (ar.result()) { LOGGER.info(\"Reassignment complete\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.complete(); } else if (System.currentTimeMillis() - first > timeout) { LOGGER.error(\"Reassignment timed out\"); ProcessHelper.delete(reassignmentJsonFile); LOGGER.debug(\"Cancelling timer \" + timerId); vertx.cancelTimer(timerId); reassignmentFinishedFuture.fail(\"Timeout\"); } } else { LOGGER.error(\"Error while verifying reassignment\", ar.cause()); } } ) ); periodicFuture.complete(); }, periodicFuture); CompositeFuture.all(periodicFuture, reassignmentFinishedFuture).map((Void) null).setHandler(handler); return handler; }",
        "test_src": "@Test public void changeReplicationFactor_ExecuteFail(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; Subclass sub = new Subclass(adminClient, vertx, config, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeFail(\"Bang!\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic, ar -> { context.assertFalse(ar.succeeded()); context.assertTrue(ar.cause().getMessage().contains(\"Failed to reassign partitions\")); async.complete(); }); }",
        "test_tgt": "@Test public void changeReplicationFactor_ExecuteFail(TestContext context) { MockAdminClient adminClient = new MockAdminClient(); Vertx vertx = Vertx.vertx(); Topic topic = new Topic.Builder(\"changeReplicationFactor\", 2, (short) 2, emptyMap()).build(); String[] partitions = new String[]{\"changeReplicationFactor-0\", \"changeReplicationFactor-1\"}; Subclass sub = new Subclass(adminClient, vertx, config, asList( Subclass.generate(\"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\", \"{\\\"version\\\":1,\\\"partitions\\\":[{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":0,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]},{\\\"topic\\\":\\\"test-topic\\\",\\\"partition\\\":1,\\\"replicas\\\":[0],\\\"log_dirs\\\":[\\\"any\\\"]}]}\"), Subclass.executeFail(\"Bang!\"), Subclass.executeStarted(), Subclass.verifyInProgress(partitions), Subclass.verifySuccess(partitions))); Async async = context.async(); sub.changeReplicationFactor(topic).setHandler(ar -> { context.assertFalse(ar.succeeded()); context.assertTrue(ar.cause().getMessage().contains(\"Failed to reassign partitions\")); async.complete(); }); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "",
                "delete"
            ],
            [
                "changeReplicationFactor",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Topic",
                "",
                "delete"
            ],
            [
                "topic",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Handler",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "AsyncResult",
                "Future",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "",
                "changeReplicationFactor",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Topic",
                "insert"
            ],
            [
                "",
                "topic",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Void",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "=",
                "replace"
            ],
            [
                "",
                "Future",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "future",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Changing",
                "Changing",
                "equal"
            ],
            [
                "replication",
                "replication",
                "equal"
            ],
            [
                "factor",
                "factor",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getNumReplicas",
                "getNumReplicas",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ZOOKEEPER_CONNECT",
                "ZOOKEEPER_CONNECT",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Generating",
                "Generating",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "generateReassignment",
                "generateReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "createTmpFile",
                "createTmpFile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "json",
                "json",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "OutputStreamWriter",
                "OutputStreamWriter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "FileOutputStream",
                "FileOutputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "StandardCharsets",
                "StandardCharsets",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UTF_8",
                "UTF_8",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "w",
                "w",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "generateFuture",
                "generateFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Starting",
                "Starting",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeReassignment",
                "executeReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "future",
                "future",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "executeFuture",
                "executeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compose",
                "compose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "10_000",
                "10_000",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_VERIFY_INTERVAL_MS",
                "REASSIGN_VERIFY_INTERVAL_MS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "every",
                "every",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "seconds",
                "seconds",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SECONDS",
                "SECONDS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TimeUnit",
                "TimeUnit",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MILLISECONDS",
                "MILLISECONDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setPeriodic",
                "setPeriodic",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodMs",
                "periodMs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "executeBlocking",
                "executeBlocking",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Verifying",
                "Verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "topic",
                "topic",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getTopicName",
                "getTopicName",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "REASSIGN_THROTTLE",
                "REASSIGN_THROTTLE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "verifyReassignment",
                "verifyReassignment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zookeeper",
                "zookeeper",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "throttle",
                "throttle",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "fut",
                "fut",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentComplete",
                "reassignmentComplete",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "succeeded",
                "succeeded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "currentTimeMillis",
                "currentTimeMillis",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "first",
                "first",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "timeout",
                "timeout",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Reassignment",
                "Reassignment",
                "equal"
            ],
            [
                "timed",
                "timed",
                "equal"
            ],
            [
                "out",
                "out",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ProcessHelper",
                "ProcessHelper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reassignmentJsonFile",
                "reassignmentJsonFile",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Cancelling",
                "Cancelling",
                "equal"
            ],
            [
                "timer",
                "timer",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "vertx",
                "vertx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cancelTimer",
                "cancelTimer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "timerId",
                "timerId",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fail",
                "fail",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Timeout",
                "Timeout",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "verifying",
                "verifying",
                "equal"
            ],
            [
                "reassignment",
                "reassignment",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ar",
                "ar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cause",
                "cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "complete",
                "complete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "CompositeFuture",
                "CompositeFuture",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "all",
                "all",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "periodicFuture",
                "periodicFuture",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reassignmentFinishedFuture",
                "reassignmentFinishedFuture",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setHandler",
                "setHandler",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "return",
                "replace"
            ],
            [
                "",
                "handler",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public double getCpu() { double ret; String value = getData(CPU); if (value != null) { ret = Double.parseDouble(value); } else { ret = AGENT_ERROR; } return ret; }",
        "focal_tgt": "public double getCpu() throws PerfMonException { double ret = -1; String value = getData(CPU); if (value != null) ret = Double.parseDouble(value); if(ret < 0) throwNotSupportedMetricException(\"cpu\"); return ret; }",
        "test_src": "@Test public void testGetCpu() { System.out.println(\"getCpu\"); prepareTestData(123); double result = instance.getCpu(); System.out.println(result); assertTrue(result >= 0); }",
        "test_tgt": "@Test public void testGetCpu() throws PerfMonException { System.out.println(\"getCpu\"); prepareTestData(123); double result = instance.getCpu(); System.out.println(result); assertTrue(result >= 0); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "getCpu",
                "getCpu",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "PerfMonException",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getData",
                "getData",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CPU",
                "CPU",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Double",
                "Double",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "parseDouble",
                "parseDouble",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "{",
                "if",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "AGENT_ERROR",
                "<",
                "replace"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "throwNotSupportedMetricException",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "cpu",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ret",
                "ret",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Map<String, String> getEnvMapForLog(){ return new TreeMap<String, String>(System.getenv()); }",
        "focal_tgt": "public static Map<String, String> getEnvMap(){ return new TreeMap<String, String>(System.getenv()); }",
        "test_src": "@Test public void testGetEnvMapForLog(){ LOGGER.debug(JsonUtil.format(SystemUtil.getEnvMapForLog())); }",
        "test_tgt": "@Test public void testGetEnvMap(){ LOGGER.debug(JsonUtil.format(SystemUtil.getEnvMap())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getEnvMapForLog",
                "getEnvMap",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "TreeMap",
                "TreeMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getenv",
                "getenv",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String getResponseBodyAsString(String urlString,HttpURLConnectionParam httpURLConnectionParam){ if (null == httpURLConnectionParam){ httpURLConnectionParam = new HttpURLConnectionParam(); } InputStream inputStream = getInputStream(urlString, httpURLConnectionParam); String inputStream2String = InputStreamUtil.inputStream2String(inputStream, httpURLConnectionParam.getContentCharset()); return inputStream2String; }",
        "focal_tgt": "public static String getResponseBodyAsString(String urlString,ConnectionConfig connectionConfig){ if (null == connectionConfig){ connectionConfig = new ConnectionConfig(); } InputStream inputStream = getInputStream(urlString, connectionConfig); return InputStreamUtil.inputStream2String(inputStream, connectionConfig.getContentCharset()); }",
        "test_src": "@Test public final void getResponseBodyAsString(){ String templateFile = \"http://10.8.25.80:6666/template.csv?sign=123456\"; HttpURLConnectionParam httpURLConnectionParam = new HttpURLConnectionParam(); httpURLConnectionParam.setContentCharset(CharsetType.GBK); String responseBodyAsString = URLConnectionUtil.getResponseBodyAsString(templateFile, httpURLConnectionParam); LOGGER.info(responseBodyAsString); }",
        "test_tgt": "@Test public final void getResponseBodyAsString(){ String templateFile = \"http://10.8.25.80:6666/template.csv?sign=123456\"; ConnectionConfig connectionConfig = new ConnectionConfig(); connectionConfig.setContentCharset(CharsetType.GBK); String responseBodyAsString = URLConnectionUtil.getResponseBodyAsString(templateFile, connectionConfig); LOGGER.info(responseBodyAsString); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "getResponseBodyAsString",
                "getResponseBodyAsString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "urlString",
                "urlString",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "HttpURLConnectionParam",
                "",
                "delete"
            ],
            [
                "httpURLConnectionParam",
                "ConnectionConfig",
                "replace"
            ],
            [
                "",
                "connectionConfig",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "httpURLConnectionParam",
                "connectionConfig",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "httpURLConnectionParam",
                "connectionConfig",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "HttpURLConnectionParam",
                "ConnectionConfig",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "InputStream",
                "InputStream",
                "equal"
            ],
            [
                "inputStream",
                "inputStream",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getInputStream",
                "getInputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "urlString",
                "urlString",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "httpURLConnectionParam",
                "connectionConfig",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "inputStream2String",
                "",
                "delete"
            ],
            [
                "=",
                "return",
                "replace"
            ],
            [
                "InputStreamUtil",
                "InputStreamUtil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "inputStream2String",
                "inputStream2String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "inputStream",
                "inputStream",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "httpURLConnectionParam",
                "connectionConfig",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getContentCharset",
                "getContentCharset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "inputStream2String",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static String joinValues(Map<String, String> singleValueMap,String...includeKeys){ Validate.notNull(singleValueMap, \"singleValueMap can't be null!\"); if (Validator.isNullOrEmpty(includeKeys)){ return StringUtils.EMPTY; } StringBuilder sb = new StringBuilder(); for (String key : includeKeys){ String value = singleValueMap.get(key); sb.append(StringUtils.defaultString(value)); } return sb.toString(); }",
        "focal_tgt": "public static String joinValuesOrderByIncludeKeys(Map<String, String> singleValueMap,String...includeKeys){ Validate.notNull(singleValueMap, \"singleValueMap can't be null!\"); if (Validator.isNullOrEmpty(includeKeys)){ return StringUtils.EMPTY; } StringBuilder sb = new StringBuilder(); for (String key : includeKeys){ String value = singleValueMap.get(key); sb.append(StringUtils.defaultString(value)); } return sb.toString(); }",
        "test_src": "@Test public void testJoinValues(){ String value = \"create_salesorder\"; String value2 = \"unionpay_mobile\"; Map<String, String> map = new HashMap<String, String>(); map.put(\"service\", value); map.put(\"paymentType\", value2); assertEquals(StringUtils.EMPTY, ParamUtil.joinValues(map, \"a\", \"b\")); assertEquals(value, ParamUtil.joinValues(map, \"service\")); assertEquals(value + value2, ParamUtil.joinValues(map, \"service\", \"paymentType\")); assertEquals(value2 + value, ParamUtil.joinValues(map, \"paymentType\", \"service\")); }",
        "test_tgt": "@Test public void testJoinValues(){ String value = \"create_salesorder\"; String value2 = \"unionpay_mobile\"; Map<String, String> map = new HashMap<String, String>(); map.put(\"service\", value); map.put(\"paymentType\", value2); assertEquals(StringUtils.EMPTY, ParamUtil.joinValuesOrderByIncludeKeys(map, \"a\", \"b\")); assertEquals(value, ParamUtil.joinValuesOrderByIncludeKeys(map, \"service\")); assertEquals(value + value2, ParamUtil.joinValuesOrderByIncludeKeys(map, \"service\", \"paymentType\")); assertEquals(value2 + value, ParamUtil.joinValuesOrderByIncludeKeys(map, \"paymentType\", \"service\")); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "joinValues",
                "joinValuesOrderByIncludeKeys",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "singleValueMap",
                "singleValueMap",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "includeKeys",
                "includeKeys",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "singleValueMap",
                "singleValueMap",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "singleValueMap",
                "singleValueMap",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isNullOrEmpty",
                "isNullOrEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "includeKeys",
                "includeKeys",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "StringUtils",
                "StringUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EMPTY",
                "EMPTY",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "sb",
                "sb",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "StringBuilder",
                "StringBuilder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "includeKeys",
                "includeKeys",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "singleValueMap",
                "singleValueMap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "sb",
                "sb",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "StringUtils",
                "StringUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "defaultString",
                "defaultString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "sb",
                "sb",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Deprecated public static String toString(final Collection collection,ToStringConfig toStringConfig){ if (Validator.isNullOrEmpty(collection)){ return StringUtils.EMPTY; } Object[] array = toArray(collection, Object.class); return toString(toStringConfig, array); }",
        "focal_tgt": "@Deprecated public static String toString(ToStringConfig toStringConfig,final Collection collection){ if (Validator.isNullOrEmpty(collection)){ return StringUtils.EMPTY; } Object[] array = toArray(collection, Object.class); return toString(toStringConfig, array); }",
        "test_src": "@Test public void testCollectionToString(){ List<String> list = new ArrayList<String>(); list.add(\"2548\"); list.add(\"\"); ToStringConfig toStringConfig = new ToStringConfig(\",\"); toStringConfig.setIsJoinNullOrEmpty(false); assertEquals(\"2548\", ConvertUtil.toString(list, toStringConfig)); }",
        "test_tgt": "@Test public void testCollectionToString(){ List<String> list = new ArrayList<String>(); list.add(\"2548\"); list.add(\"\"); ToStringConfig toStringConfig = new ToStringConfig(\",\"); toStringConfig.setIsJoinNullOrEmpty(false); assertEquals(\"2548\", ConvertUtil.toString(toStringConfig, list)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Deprecated",
                "Deprecated",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "ToStringConfig",
                "insert"
            ],
            [
                "",
                "toStringConfig",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ToStringConfig",
                "",
                "delete"
            ],
            [
                "toStringConfig",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isNullOrEmpty",
                "isNullOrEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "StringUtils",
                "StringUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EMPTY",
                "EMPTY",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "array",
                "array",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "toArray",
                "toArray",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "toStringConfig",
                "toStringConfig",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "array",
                "array",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Deprecated public static String toString(final Collection collection,ToStringConfig toStringConfig){ if (Validator.isNullOrEmpty(collection)){ return StringUtils.EMPTY; } Object[] array = toArray(collection, Object.class); return toString(toStringConfig, array); }",
        "focal_tgt": "@Deprecated public static String toString(ToStringConfig toStringConfig,final Collection collection){ if (Validator.isNullOrEmpty(collection)){ return StringUtils.EMPTY; } Object[] array = toArray(collection, Object.class); return toString(toStringConfig, array); }",
        "test_src": "@Test public void testCollectionToString1(){ List<String> list = new ArrayList<String>(); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); ToStringConfig toStringConfig = new ToStringConfig(SystemUtils.LINE_SEPARATOR); LOGGER.debug(ConvertUtil.toString(list, toStringConfig)); }",
        "test_tgt": "@Test public void testCollectionToString1(){ List<String> list = new ArrayList<String>(); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); list.add(\"2548\"); ToStringConfig toStringConfig = new ToStringConfig(SystemUtils.LINE_SEPARATOR); LOGGER.debug(ConvertUtil.toString(toStringConfig, list)); }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Deprecated",
                "Deprecated",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "ToStringConfig",
                "insert"
            ],
            [
                "",
                "toStringConfig",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ToStringConfig",
                "",
                "delete"
            ],
            [
                "toStringConfig",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isNullOrEmpty",
                "isNullOrEmpty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "StringUtils",
                "StringUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EMPTY",
                "EMPTY",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "array",
                "array",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "toArray",
                "toArray",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "toStringConfig",
                "toStringConfig",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "array",
                "array",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@NotNull public static LinkedHashMap<Element, TypeMirror> getConcreteMembers(@NotNull TypeMirror concreteInherited, @NotNull Element genericInherited, @NotNull Map<Element, TypeMirror> members) { DebugLog.log(TAG, \"Inherited concrete type: \" + concreteInherited.toString()); DebugLog.log(TAG, \"Inherited generic type: \" + genericInherited.asType().toString()); List<? extends TypeMirror> concreteTypes = getParameterizedTypes(concreteInherited); List<? extends TypeMirror> inheritedTypes = getParameterizedTypes(genericInherited); LinkedHashMap<Element, TypeMirror> map = new LinkedHashMap<>(); for (Entry<Element, TypeMirror> member : members.entrySet()) { DebugLog.log(TAG, \"\\t\\tEvaluating member - \" + member.getValue().toString()); if (isConcreteType(member.getValue())) { DebugLog.log(TAG, \"\\t\\t\\tConcrete Type: \" + member.getValue().toString()); map.put(member.getKey(), member.getValue()); } else { if (isParameterizedType(member.getValue())) { TypeMirror resolvedType = resolveTypeVars(member.getValue(), inheritedTypes, concreteTypes); map.put(member.getKey(), resolvedType); DebugLog.log(TAG, \"\\t\\t\\tGeneric Parameterized Type - \" + member.getValue().toString() + \" resolved to - \" + resolvedType.toString()); } else { int index = inheritedTypes.indexOf(member.getKey().asType()); TypeMirror concreteType = concreteTypes.get(index); map.put(member.getKey(), concreteType); DebugLog.log(TAG, \"\\t\\t\\tGeneric Type - \" + member.getValue().toString() + \" resolved to - \" + concreteType.toString()); } } } return map; }",
        "focal_tgt": "@NotNull public static LinkedHashMap<VariableElement, TypeMirror> getConcreteMembers(@NotNull TypeMirror concreteInherited, @NotNull TypeElement genericInherited, @NotNull Map<VariableElement, TypeMirror> members) { DebugLog.log(TAG, \"Inherited concrete type: \" + concreteInherited.toString()); DebugLog.log(TAG, \"Inherited generic type: \" + genericInherited.asType().toString()); List<? extends TypeMirror> concreteTypes = getParameterizedTypes(concreteInherited); List<? extends TypeMirror> inheritedTypes = getParameterizedTypes(genericInherited); LinkedHashMap<VariableElement, TypeMirror> map = new LinkedHashMap<>(); for (Entry<VariableElement, TypeMirror> member : members.entrySet()) { DebugLog.log(TAG, \"\\t\\tEvaluating member - \" + member.getValue().toString()); if (isConcreteType(member.getValue())) { DebugLog.log(TAG, \"\\t\\t\\tConcrete Type: \" + member.getValue().toString()); map.put(member.getKey(), member.getValue()); } else { if (isParameterizedType(member.getValue())) { TypeMirror resolvedType = resolveTypeVars(member.getValue(), inheritedTypes, concreteTypes); map.put(member.getKey(), resolvedType); DebugLog.log(TAG, \"\\t\\t\\tGeneric Parameterized Type - \" + member.getValue().toString() + \" resolved to - \" + resolvedType.toString()); } else { int index = inheritedTypes.indexOf(member.getKey().asType()); TypeMirror concreteType = concreteTypes.get(index); map.put(member.getKey(), concreteType); DebugLog.log(TAG, \"\\t\\t\\tGeneric Type - \" + member.getValue().toString() + \" resolved to - \" + concreteType.toString()); } } } return map; }",
        "test_src": "@Test public void getConcreteMembers_isCorrect() throws Exception { Element genericElement = Utils.getElementFromClass(DummyGenericClass.class); assertNotNull(genericElement); Map<Element, TypeMirror> genericMembers = new HashMap<>(); for (Element element : genericElement.getEnclosedElements()) { if (element instanceof VariableElement) { genericMembers.put(element, element.asType()); } } TypeMirror concreteType = TypeUtils.getInheritedType(Utils.getElementFromClass(DummyInheritedClass.class)); assertNotNull(concreteType); TypeMirror genericType = Utils.getGenericVersionOfClass(DummyGenericClass.class); assertNotNull(genericType); LinkedHashMap<Element, TypeMirror> members = TypeUtils.getConcreteMembers(concreteType, types.asElement(genericType), genericMembers); TypeMirror stringType = Utils.getTypeMirrorFromClass(String.class); assertNotNull(stringType); for (Entry<Element, TypeMirror> entry : members.entrySet()) { if (entry.getKey().getSimpleName().contentEquals(\"testObject\")) { assertTrue(entry.getValue().toString().equals(stringType.toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testList\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType( (TypeElement) Utils.getElementFromClass(ArrayList.class), stringType).toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testMap\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType( (TypeElement) Utils.getElementFromClass(HashMap.class), stringType, stringType).toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testSet\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType( (TypeElement) Utils.getElementFromClass(HashSet.class), stringType) .toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testArrayMap\")) { TypeMirror listString = types.getDeclaredType((TypeElement) Utils.getElementFromClass(List.class), stringType); assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType( (TypeElement) Utils.getElementFromClass(HashMap.class), stringType, listString) .toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testListMap\")) { TypeMirror mapStringString = types.getDeclaredType((TypeElement) Utils.getElementFromClass(Map.class), stringType, stringType); assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType( (TypeElement) Utils.getElementFromClass(ArrayList.class), mapStringString) .toString())); } } }",
        "test_tgt": "@Test public void getConcreteMembers_isCorrect() throws Exception { Element genericElement = Utils.getElementFromClass(DummyGenericClass.class); assertNotNull(genericElement); Map<Element, TypeMirror> genericMembers = new HashMap<>(); for (Element element : genericElement.getEnclosedElements()) { if (element instanceof VariableElement) { genericMembers.put(element, element.asType()); } } TypeMirror concreteType = TypeUtils.getInheritedType(Utils.getElementFromClass(DummyInheritedClass.class)); assertNotNull(concreteType); TypeMirror genericType = Utils.getGenericVersionOfClass(DummyGenericClass.class); assertNotNull(genericType); LinkedHashMap<Element, TypeMirror> members = TypeUtils.getConcreteMembers(concreteType, (TypeElement) types.asElement(genericType), genericMembers); TypeMirror stringType = Utils.getTypeMirrorFromClass(String.class); assertNotNull(stringType); for (Entry<Element, TypeMirror> entry : members.entrySet()) { if (entry.getKey().getSimpleName().contentEquals(\"testObject\")) { assertTrue(entry.getValue().toString().equals(stringType.toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testList\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType(Utils.getElementFromClass(ArrayList.class), stringType).toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testMap\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType(Utils.getElementFromClass(HashMap.class), stringType, stringType).toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testSet\")) { assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType(Utils.getElementFromClass(HashSet.class), stringType) .toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testArrayMap\")) { TypeMirror listString = types.getDeclaredType(Utils.getElementFromClass(List.class), stringType); assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType(Utils.getElementFromClass(HashMap.class), stringType, listString) .toString())); } else if (entry.getKey().getSimpleName().contentEquals(\"testListMap\")) { TypeMirror mapStringString = types.getDeclaredType(Utils.getElementFromClass(Map.class), stringType, stringType); assertTrue(entry.getValue() .toString() .equals(types.getDeclaredType(Utils.getElementFromClass(ArrayList.class), mapStringString) .toString())); } } }",
        "label": 1,
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "NotNull",
                "NotNull",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "LinkedHashMap",
                "LinkedHashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Element",
                "VariableElement",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getConcreteMembers",
                "getConcreteMembers",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "NotNull",
                "NotNull",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                "concreteInherited",
                "concreteInherited",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "NotNull",
                "NotNull",
                "equal"
            ],
            [
                "Element",
                "TypeElement",
                "replace"
            ],
            [
                "genericInherited",
                "genericInherited",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "NotNull",
                "NotNull",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Element",
                "VariableElement",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "members",
                "members",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Inherited",
                "Inherited",
                "equal"
            ],
            [
                "concrete",
                "concrete",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "concreteInherited",
                "concreteInherited",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Inherited",
                "Inherited",
                "equal"
            ],
            [
                "generic",
                "generic",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "genericInherited",
                "genericInherited",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "asType",
                "asType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "concreteTypes",
                "concreteTypes",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getParameterizedTypes",
                "getParameterizedTypes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "concreteInherited",
                "concreteInherited",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "inheritedTypes",
                "inheritedTypes",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "getParameterizedTypes",
                "getParameterizedTypes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "genericInherited",
                "genericInherited",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "LinkedHashMap",
                "LinkedHashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Element",
                "VariableElement",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "LinkedHashMap",
                "LinkedHashMap",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Element",
                "VariableElement",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "members",
                "members",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "entrySet",
                "entrySet",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "tEvaluating",
                "tEvaluating",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "isConcreteType",
                "isConcreteType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "tConcrete",
                "tConcrete",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "isParameterizedType",
                "isParameterizedType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                "resolvedType",
                "resolvedType",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "resolveTypeVars",
                "resolveTypeVars",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "inheritedTypes",
                "inheritedTypes",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "concreteTypes",
                "concreteTypes",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "resolvedType",
                "resolvedType",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "tGeneric",
                "tGeneric",
                "equal"
            ],
            [
                "Parameterized",
                "Parameterized",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "resolved",
                "resolved",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "resolvedType",
                "resolvedType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "inheritedTypes",
                "inheritedTypes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "indexOf",
                "indexOf",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "asType",
                "asType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "TypeMirror",
                "TypeMirror",
                "equal"
            ],
            [
                "concreteType",
                "concreteType",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "concreteTypes",
                "concreteTypes",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getKey",
                "getKey",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "concreteType",
                "concreteType",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "DebugLog",
                "DebugLog",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TAG",
                "TAG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "t",
                "t",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "tGeneric",
                "tGeneric",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "member",
                "member",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getValue",
                "getValue",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "resolved",
                "resolved",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "concreteType",
                "concreteType",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "toString",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Classifier> createClassifier(final String name, final String language, final File trainingData) { Validator.isTrue((trainingData != null) && trainingData.exists(), \"trainingData cannot be null or not be found\"); Validator.isTrue((language != null) && !language.isEmpty(), \"language cannot be null or empty\"); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(LANGUAGE, language); if ((name != null) && !name.isEmpty()) { contentJson.addProperty(NAME, name); } final RequestBody body = new MultipartBody.Builder().setType(MultipartBody.FORM) .addPart(Headers.of(HttpHeaders.CONTENT_DISPOSITION, FORM_DATA_TRAINING_DATA), RequestBody.create(HttpMediaType.BINARY_FILE, trainingData)) .addFormDataPart(TRAINING_METADATA, contentJson.toString()).build(); final Request request = RequestBuilder.post(PATH_CLASSIFIERS).body(body).build(); return createServiceCall(request, ResponseConverterUtils.getObject(Classifier.class)); }",
        "focal_tgt": "public ServiceCall<Classifier> createClassifier(CreateClassifierOptions createClassifierOptions) { Validator.notNull(createClassifierOptions, \"createClassifierOptions cannot be null\"); RequestBuilder builder = RequestBuilder.post(\"/v1/classifiers\"); MultipartBody.Builder multipartBuilder = new MultipartBody.Builder(); multipartBuilder.setType(MultipartBody.FORM); RequestBody trainingMetadataBody = RequestUtils.inputStreamBody(createClassifierOptions.metadata(), \"application/json\"); multipartBuilder.addFormDataPart(\"training_metadata\", createClassifierOptions.metadataFilename(), trainingMetadataBody); RequestBody trainingDataBody = RequestUtils.inputStreamBody(createClassifierOptions.trainingData(), \"text/csv\"); multipartBuilder.addFormDataPart(\"training_data\", createClassifierOptions.trainingDataFilename(), trainingDataBody); builder.body(multipartBuilder.build()); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Classifier.class)); }",
        "test_src": "@Test public void testCreateClassifier() throws InterruptedException { server.enqueue(jsonResponse(classifier)); final Classifier response = service.createClassifier(classifierId, \"en\", new File(\"src/test/resources/natural_language_classifier/weather_data_train.csv\")).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(CLASSIFIERS_PATH, request.getPath()); assertEquals(classifier, response); }",
        "test_tgt": "@Test public void testCreateClassifier() throws InterruptedException, FileNotFoundException { server.enqueue(jsonResponse(classifier)); File metadata = new File(RESOURCE + \"metadata.json\"); File trainingData = new File(RESOURCE + \"weather_data_train.csv\"); CreateClassifierOptions createOptions = new CreateClassifierOptions.Builder() .metadata(metadata) .trainingData(trainingData) .trainingDataFilename(\"weather_data_train.csv\") .build(); final Classifier response = service.createClassifier(createOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(CLASSIFIERS_PATH, request.getPath()); assertEquals(classifier, response); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Classifier",
                "Classifier",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "createClassifier",
                "createClassifier",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "File",
                "",
                "delete"
            ],
            [
                "trainingData",
                "CreateClassifierOptions",
                "replace"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "notNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "trainingData",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "trainingData",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "exists",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "createClassifierOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "trainingData",
                "createClassifierOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "not",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "found",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validator",
                "RequestBuilder",
                "replace"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "post",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "/",
                "replace"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classifiers",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "JsonObject",
                "",
                "delete"
            ],
            [
                "contentJson",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "JsonObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "contentJson",
                "MultipartBody",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addProperty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "LANGUAGE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "contentJson",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "addProperty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "NAME",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "RequestBody",
                "",
                "delete"
            ],
            [
                "body",
                "Builder",
                "replace"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "MultipartBody",
                "MultipartBody",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setType",
                "setType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "MultipartBody",
                "MultipartBody",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "FORM",
                "FORM",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "trainingMetadataBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addPart",
                "inputStreamBody",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Headers",
                "createClassifierOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "of",
                "metadata",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HttpHeaders",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "CONTENT_DISPOSITION",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "FORM_DATA_TRAINING_DATA",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "RequestBody",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "create",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "HttpMediaType",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BINARY_FILE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "trainingData",
                "\"",
                "replace"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "json",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ";",
                "replace"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addFormDataPart",
                "addFormDataPart",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TRAINING_METADATA",
                "\"",
                "replace"
            ],
            [
                "",
                "training_metadata",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "contentJson",
                "createClassifierOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "metadataFilename",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "trainingMetadataBody",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "trainingDataBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inputStreamBody",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trainingData",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "text",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "training_data",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trainingDataFilename",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "trainingDataBody",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "post",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_CLASSIFIERS",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "body",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "body",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "builder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Classifier",
                "Classifier",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Classifier> createClassifier(final String name, final String language, final File trainingData) { Validator.isTrue((trainingData != null) && trainingData.exists(), \"trainingData cannot be null or not be found\"); Validator.isTrue((language != null) && !language.isEmpty(), \"language cannot be null or empty\"); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(LANGUAGE, language); if ((name != null) && !name.isEmpty()) { contentJson.addProperty(NAME, name); } final RequestBody body = new MultipartBody.Builder().setType(MultipartBody.FORM) .addPart(Headers.of(HttpHeaders.CONTENT_DISPOSITION, FORM_DATA_TRAINING_DATA), RequestBody.create(HttpMediaType.BINARY_FILE, trainingData)) .addFormDataPart(TRAINING_METADATA, contentJson.toString()).build(); final Request request = RequestBuilder.post(PATH_CLASSIFIERS).body(body).build(); return createServiceCall(request, ResponseConverterUtils.getObject(Classifier.class)); }",
        "focal_tgt": "public ServiceCall<Classifier> createClassifier(CreateClassifierOptions createClassifierOptions) { Validator.notNull(createClassifierOptions, \"createClassifierOptions cannot be null\"); RequestBuilder builder = RequestBuilder.post(\"/v1/classifiers\"); MultipartBody.Builder multipartBuilder = new MultipartBody.Builder(); multipartBuilder.setType(MultipartBody.FORM); RequestBody trainingMetadataBody = RequestUtils.inputStreamBody(createClassifierOptions.metadata(), \"application/json\"); multipartBuilder.addFormDataPart(\"training_metadata\", createClassifierOptions.metadataFilename(), trainingMetadataBody); RequestBody trainingDataBody = RequestUtils.inputStreamBody(createClassifierOptions.trainingData(), \"text/csv\"); multipartBuilder.addFormDataPart(\"training_data\", createClassifierOptions.trainingDataFilename(), trainingDataBody); builder.body(multipartBuilder.build()); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Classifier.class)); }",
        "test_src": "@Test(expected = IllegalArgumentException.class) public void testNullTrainingDataFile() { service.createClassifier(null, null, new File(\"src/test/resources/notfound.txt\")); }",
        "test_tgt": "@Test(expected = FileNotFoundException.class) public void testNullTrainingDataFile() throws FileNotFoundException { server.enqueue(jsonResponse(classifier)); File metadata = new File(RESOURCE + \"metadata.json\"); File trainingData = new File(RESOURCE + \"notfound.txt\"); CreateClassifierOptions createOptions = new CreateClassifierOptions.Builder() .metadata(metadata) .trainingData(trainingData) .trainingDataFilename(\"notfound.txt\") .build(); service.createClassifier(createOptions).execute(); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Classifier",
                "Classifier",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "createClassifier",
                "createClassifier",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "File",
                "",
                "delete"
            ],
            [
                "trainingData",
                "CreateClassifierOptions",
                "replace"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "notNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "trainingData",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "trainingData",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "exists",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "createClassifierOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "trainingData",
                "createClassifierOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "not",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "found",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validator",
                "RequestBuilder",
                "replace"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "post",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "/",
                "replace"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classifiers",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "JsonObject",
                "",
                "delete"
            ],
            [
                "contentJson",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "JsonObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "contentJson",
                "MultipartBody",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addProperty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "LANGUAGE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "language",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "contentJson",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "addProperty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "NAME",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "RequestBody",
                "",
                "delete"
            ],
            [
                "body",
                "Builder",
                "replace"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "MultipartBody",
                "MultipartBody",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "setType",
                "setType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "MultipartBody",
                "MultipartBody",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "FORM",
                "FORM",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "trainingMetadataBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addPart",
                "inputStreamBody",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Headers",
                "createClassifierOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "of",
                "metadata",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HttpHeaders",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "CONTENT_DISPOSITION",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "FORM_DATA_TRAINING_DATA",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "RequestBody",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "create",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "HttpMediaType",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "BINARY_FILE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "trainingData",
                "\"",
                "replace"
            ],
            [
                "",
                "application",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "json",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ";",
                "replace"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addFormDataPart",
                "addFormDataPart",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TRAINING_METADATA",
                "\"",
                "replace"
            ],
            [
                "",
                "training_metadata",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "contentJson",
                "createClassifierOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "metadataFilename",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "trainingMetadataBody",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "trainingDataBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inputStreamBody",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trainingData",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "text",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "training_data",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "createClassifierOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trainingDataFilename",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "trainingDataBody",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "post",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_CLASSIFIERS",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "body",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "body",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "builder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Classifier",
                "Classifier",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Classification> classify(final String classifierId, final String text) { Validator.isTrue((classifierId != null) && !classifierId.isEmpty(), \"classifierId cannot be null or empty\"); Validator.isTrue((text != null) && !text.isEmpty(), \"text cannot be null or empty\"); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(TEXT, text); final String path = String.format(PATH_CLASSIFY, classifierId); final Request request = RequestBuilder.post(path).bodyJson(contentJson).build(); return createServiceCall(request, ResponseConverterUtils.getObject(Classification.class)); }",
        "focal_tgt": "public ServiceCall<Classification> classify(ClassifyOptions classifyOptions) { Validator.notNull(classifyOptions, \"classifyOptions cannot be null\"); RequestBuilder builder = RequestBuilder.post(String.format(\"/v1/classifiers/%s/classify\", classifyOptions .classifierId())); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(\"text\", classifyOptions.text()); builder.bodyJson(contentJson); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Classification.class)); }",
        "test_src": "@Test(expected = IllegalArgumentException.class) public void testNullClassifier() { service.classify(\"\", \"test\"); }",
        "test_tgt": "@Test(expected = IllegalArgumentException.class) public void testNullClassifier() { ClassifyOptions classifyOptions = new ClassifyOptions.Builder() .text(\"test\") .build(); service.classify(classifyOptions); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Classification",
                "Classification",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "classify",
                "classify",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "text",
                "ClassifyOptions",
                "replace"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "notNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "classifyOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "classifierId",
                "classifyOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validator",
                "RequestBuilder",
                "replace"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "post",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "text",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classifiers",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classify",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "classifierId",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                ")",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "JsonObject",
                "JsonObject",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "JsonObject",
                "JsonObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addProperty",
                "addProperty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TEXT",
                "\"",
                "replace"
            ],
            [
                "",
                "text",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_CLASSIFY",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "post",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ")",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "bodyJson",
                "bodyJson",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "createServiceCall",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Classification",
                "Classification",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Classification> classify(final String classifierId, final String text) { Validator.isTrue((classifierId != null) && !classifierId.isEmpty(), \"classifierId cannot be null or empty\"); Validator.isTrue((text != null) && !text.isEmpty(), \"text cannot be null or empty\"); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(TEXT, text); final String path = String.format(PATH_CLASSIFY, classifierId); final Request request = RequestBuilder.post(path).bodyJson(contentJson).build(); return createServiceCall(request, ResponseConverterUtils.getObject(Classification.class)); }",
        "focal_tgt": "public ServiceCall<Classification> classify(ClassifyOptions classifyOptions) { Validator.notNull(classifyOptions, \"classifyOptions cannot be null\"); RequestBuilder builder = RequestBuilder.post(String.format(\"/v1/classifiers/%s/classify\", classifyOptions .classifierId())); final JsonObject contentJson = new JsonObject(); contentJson.addProperty(\"text\", classifyOptions.text()); builder.bodyJson(contentJson); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Classification.class)); }",
        "test_src": "@Test(expected = IllegalArgumentException.class) public void testNullText() { service.classify(classifierId, null); }",
        "test_tgt": "@Test(expected = IllegalArgumentException.class) public void testNullText() { ClassifyOptions classifyOptions = new ClassifyOptions.Builder() .classifierId(classifierId) .build(); service.classify(classifyOptions); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Classification",
                "Classification",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "classify",
                "classify",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "text",
                "ClassifyOptions",
                "replace"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "notNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "classifyOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "classifierId",
                "classifyOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validator",
                "RequestBuilder",
                "replace"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "post",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "text",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classifiers",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classify",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isEmpty",
                "classifierId",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                ")",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "JsonObject",
                "JsonObject",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "JsonObject",
                "JsonObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "addProperty",
                "addProperty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "TEXT",
                "\"",
                "replace"
            ],
            [
                "",
                "text",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "classifyOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_CLASSIFY",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "post",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ")",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "bodyJson",
                "bodyJson",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "contentJson",
                "contentJson",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "createServiceCall",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Classification",
                "Classification",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Void> deleteClassifier(String classifierId) { Validator.isTrue((classifierId != null) && !classifierId.isEmpty(), \"classifierId cannot be null or empty\"); final Request request = RequestBuilder.delete(String.format(PATH_CLASSIFIER, classifierId)).build(); return createServiceCall(request, ResponseConverterUtils.getVoid()); }",
        "focal_tgt": "public ServiceCall<Void> deleteClassifier(DeleteClassifierOptions deleteClassifierOptions) { Validator.notNull(deleteClassifierOptions, \"deleteClassifierOptions cannot be null\"); RequestBuilder builder = RequestBuilder.delete(String.format(\"/v1/classifiers/%s\", deleteClassifierOptions .classifierId())); return createServiceCall(builder.build(), ResponseConverterUtils.getVoid()); }",
        "test_src": "@Test(expected = IllegalArgumentException.class) public void testNullDeleteClassifier() { service.deleteClassifier(\"\"); }",
        "test_tgt": "@Test(expected = IllegalArgumentException.class) public void testNullDeleteClassifier() { DeleteClassifierOptions deleteOptions = new DeleteClassifierOptions.Builder() .build(); service.deleteClassifier(deleteOptions); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "deleteClassifier",
                "deleteClassifier",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "classifierId",
                "DeleteClassifierOptions",
                "replace"
            ],
            [
                "",
                "deleteClassifierOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "notNull",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "classifierId",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "deleteClassifierOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "classifierId",
                "deleteClassifierOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "RequestBuilder",
                "replace"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CLASSIFIER",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "classifiers",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "deleteClassifierOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "classifierId",
                "classifierId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "builder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getVoid",
                "getVoid",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public InputStream synthesize(final String text, final Voice voice, final String outputFormat) { Validate.isTrue(text != null && !text.isEmpty(), \"text cannot be null or empty\"); Validate.isTrue(voice != null, \"voice cannot be null or empty\"); final RequestBuilder request = RequestBuilder.get(PATH_SYNTHESIZE); request.withQuery(TEXT, text); request.withQuery(VOICE, voice.getName()); if (outputFormat != null && !outputFormat.startsWith(\"audio/\")) throw new IllegalArgumentException( \"format needs to be an audio mime type, for example: audio/wav or audio/ogg; codecs=opus\"); request.withQuery(ACCEPT, outputFormat != null ? outputFormat : HttpMediaType.AUDIO_WAV); final Response response = execute(request.build()); return ResponseUtil.getInputStream(response); }",
        "focal_tgt": "public ServiceCall<InputStream> synthesize(final String text, final Voice voice, final String outputFormat) { return createServiceCall(createCall(synthesizeRequest(text, voice, outputFormat)), new ResponseConverter<InputStream>() { @Override public InputStream convert(okhttp3.Response response) { return ResponseUtil.getInputStream(response); } }); }",
        "test_src": "@Test public void testSynthesize() { final File audio = new File(\"src/test/resources/speech_to_text/sample1.wav\"); try { final List<Parameter> parameters = new ArrayList<Parameter>(); parameters.add(new Parameter(\"text\", text)); parameters.add(new Parameter(\"voice\", Voice.EN_LISA.getName())); parameters.add(new Parameter(\"accept\", HttpMediaType.AUDIO_WAV)); mockServer.when(request().withQueryStringParameters(parameters).withPath(SYNTHESIZE_PATH)) .respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.AUDIO_WAV)).withBody( Files.toByteArray(audio))); final InputStream in = service.synthesize(text, Voice.EN_LISA, HttpMediaType.AUDIO_WAV); Assert.assertNotNull(in); writeInputStreamToOutputStream(in, new FileOutputStream(\"target/output.wav\")); } catch (final FileNotFoundException e) { Assert.fail(e.getMessage()); } catch (final IOException e) { Assert.fail(e.getMessage()); } }",
        "test_tgt": "@Test public void testSynthesize() { final File audio = new File(\"src/test/resources/speech_to_text/sample1.wav\"); try { final List<Parameter> parameters = new ArrayList<Parameter>(); parameters.add(new Parameter(\"text\", text)); parameters.add(new Parameter(\"voice\", Voice.EN_LISA.getName())); parameters.add(new Parameter(\"accept\", HttpMediaType.AUDIO_WAV)); mockServer.when(request().withQueryStringParameters(parameters).withPath(SYNTHESIZE_PATH)) .respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.AUDIO_WAV)).withBody( Files.toByteArray(audio))); final InputStream in = service.synthesize(text, Voice.EN_LISA, HttpMediaType.AUDIO_WAV).execute(); Assert.assertNotNull(in); writeInputStreamToOutputStream(in, new FileOutputStream(\"target/output.wav\")); } catch (final FileNotFoundException e) { Assert.fail(e.getMessage()); } catch (final IOException e) { Assert.fail(e.getMessage()); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "ServiceCall",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "InputStream",
                "InputStream",
                "equal"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "synthesize",
                "synthesize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Voice",
                "Voice",
                "equal"
            ],
            [
                "voice",
                "voice",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "outputFormat",
                "outputFormat",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validate",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isTrue",
                "return",
                "replace"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "synthesizeRequest",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                ",",
                "replace"
            ],
            [
                "",
                "voice",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "outputFormat",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "ResponseConverter",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "InputStream",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "Validate",
                "{",
                "replace"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "",
                "public",
                "insert"
            ],
            [
                "",
                "InputStream",
                "insert"
            ],
            [
                "",
                "convert",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "okhttp3",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "isTrue",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "voice",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "voice",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "empty",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_SYNTHESIZE",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "withQuery",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TEXT",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "text",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "withQuery",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "VOICE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "voice",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getName",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "outputFormat",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "outputFormat",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "startsWith",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "/",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "IllegalArgumentException",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "needs",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "an",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "mime",
                "",
                "delete"
            ],
            [
                "type",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "example",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "/",
                "",
                "delete"
            ],
            [
                "wav",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "/",
                "",
                "delete"
            ],
            [
                "ogg",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "codecs",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "opus",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "withQuery",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ACCEPT",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "outputFormat",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "?",
                "",
                "delete"
            ],
            [
                "outputFormat",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "HttpMediaType",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "AUDIO_WAV",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "execute",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "{",
                "replace"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "ResponseUtil",
                "ResponseUtil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getInputStream",
                "getInputStream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public SpeechModel getModel(final String name) { if (name == null) throw new IllegalArgumentException(\"name was not specified\"); final Request request = RequestBuilder.get(String.format(PATH_MODEL, name)).build(); return executeRequest(request, SpeechModel.class); }",
        "focal_tgt": "public ServiceCall<SpeechModel> getModel(final String name) { if (name == null) throw new IllegalArgumentException(\"Name was not specified\"); final okhttp3.Request request = RequestBuilder.get(String.format(PATH_MODEL, name)).build3(); return createServiceCall(createCall(request), ResponseUtil.getObjectConverter(SpeechModel.class)); }",
        "test_src": "@Test public void testGetModel() { final SpeechModel speechModel = new SpeechModel(\"not-a-real-Model\"); speechModel.setRate(8000); mockServer.when(request().withPath(GET_MODELS_PATH + \"/\" + speechModel.getName())).respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(speechModel))); SpeechModel model = service.getModel(\"not-a-real-Model\"); Assert.assertNotNull(model); Assert.assertEquals(model, speechModel); model = service.getModel(speechModel.getName()); Assert.assertNotNull(model); Assert.assertEquals(model, speechModel); try { TestUtils.assertNoExceptionsOnGetters(model); } catch (final Exception e) { Assert.fail(e.getMessage()); } }",
        "test_tgt": "@Test public void testGetModel() { final SpeechModel speechModel = new SpeechModel(\"not-a-real-Model\"); speechModel.setRate(8000); mockServer.when(request().withPath(GET_MODELS_PATH + \"/\" + speechModel.getName())).respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(speechModel))); SpeechModel model = service.getModel(\"not-a-real-Model\").execute(); Assert.assertNotNull(model); Assert.assertEquals(model, speechModel); model = service.getModel(speechModel.getName()).execute(); Assert.assertNotNull(model); Assert.assertEquals(model, speechModel); try { TestUtils.assertNoExceptionsOnGetters(model); } catch (final Exception e) { Assert.fail(e.getMessage()); } }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "ServiceCall",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "SpeechModel",
                "SpeechModel",
                "equal"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "getModel",
                "getModel",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IllegalArgumentException",
                "IllegalArgumentException",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "Name",
                "replace"
            ],
            [
                "was",
                "was",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "specified",
                "specified",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "",
                "okhttp3",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_MODEL",
                "PATH_MODEL",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build3",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "executeRequest",
                "createServiceCall",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createCall",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "ResponseUtil",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObjectConverter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "SpeechModel",
                "SpeechModel",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public SpeechResults recognize(File audio) { return recognize(audio, (RecognizeOptions) null); }",
        "focal_tgt": "public ServiceCall<SpeechResults> recognize(File audio) { return recognize(audio, (RecognizeOptions) null); }",
        "test_src": "@Test public void testRecognizeMissingAudioFile() throws URISyntaxException { final SpeechResults speechResults = new SpeechResults(); speechResults.setResultIndex(0); final Transcript transcript = new Transcript(); transcript.setFinal(true); final SpeechAlternative speechAlternative = new SpeechAlternative(); speechAlternative .setTranscript(\"thunderstorms could produce large hail isolated tornadoes and heavy rain\"); final List<SpeechAlternative> speechAlternatives = new ArrayList<SpeechAlternative>(); speechAlternatives.add(speechAlternative); transcript.setAlternatives(speechAlternatives); final List<Transcript> transcripts = new ArrayList<Transcript>(); transcripts.add(transcript); speechResults.setResults(transcripts); mockServer.when( request().withMethod(\"POST\").withPath(RECOGNIZE_PATH) .withHeaders(new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.AUDIO_WAV))) .respond( response().withHeader(APPLICATION_JSON).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(speechResults))); boolean didItHappen = false; try { service.recognize(null); } catch (final IllegalArgumentException e) { didItHappen = true; } Assert.assertTrue(\"Check that 'IllegalArgumentException' is thrown.\", didItHappen); }",
        "test_tgt": "@Test public void testRecognizeMissingAudioFile() throws URISyntaxException { final SpeechResults speechResults = new SpeechResults(); speechResults.setResultIndex(0); final Transcript transcript = new Transcript(); transcript.setFinal(true); final SpeechAlternative speechAlternative = new SpeechAlternative(); speechAlternative .setTranscript(\"thunderstorms could produce large hail isolated tornadoes and heavy rain\"); final List<SpeechAlternative> speechAlternatives = new ArrayList<SpeechAlternative>(); speechAlternatives.add(speechAlternative); transcript.setAlternatives(speechAlternatives); final List<Transcript> transcripts = new ArrayList<Transcript>(); transcripts.add(transcript); speechResults.setResults(transcripts); mockServer.when( request().withMethod(\"POST\").withPath(RECOGNIZE_PATH) .withHeaders(new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.AUDIO_WAV))) .respond( response().withHeader(APPLICATION_JSON).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(speechResults))); boolean didItHappen = false; try { service.recognize(null).execute(); } catch (final IllegalArgumentException e) { didItHappen = true; } Assert.assertTrue(\"Check that 'IllegalArgumentException' is thrown.\", didItHappen); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "ServiceCall",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "SpeechResults",
                "SpeechResults",
                "equal"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "recognize",
                "recognize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "audio",
                "audio",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "recognize",
                "recognize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "audio",
                "audio",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RecognizeOptions",
                "RecognizeOptions",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public List<Voice> getVoices() { final Request request = RequestBuilder.get(\"/v1/voices\").build(); final Response response = execute(request); final JsonObject jsonObject = ResponseUtil.getJsonObject(response); final List<Voice> voices = GsonSingleton.getGsonWithoutPrettyPrinting() .fromJson(jsonObject.get(\"voices\"), listVoiceType); return voices; }",
        "focal_tgt": "public ServiceCall<List<Voice>> getVoices() { final okhttp3.Request request = RequestBuilder.get(\"/v1/voices\").build3(); return createServiceCall(createCall(request), ResponseUtil.getVoiceListConverter(listVoiceType)); }",
        "test_src": "@Test public void testGetVoices() { final Map<String, Object> response = new HashMap<String, Object>(); final List<Voice> voices = new ArrayList<Voice>(); final Voice voice = new Voice(); voice.setUrl(\"http://ibm.watson.com/text-to-speech/voices/en-US_TestMaleVoice\"); voice.setName(\"en-US_TestMaleVoice\"); voice.setGender(\"male\"); voice.setLanguage(\"en-US\"); voice.setDescription(\"TestMale\"); final Voice voice1 = new Voice(); voice1.setUrl(\"http://ibm.watson.com/text-to-speech/voices/en-US_TestFemaleVoice\"); voice1.setName(\"en-US_TestFemaleVoice\"); voice1.setGender(\"female\"); voice1.setLanguage(\"en-US\"); voice1.setDescription(\"TestFemale\"); voices.add(voice); voices.add(voice1); response.put(\"voices\", voices); mockServer.when(request().withPath(GET_VOICES_PATH)).respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(response))); final List<Voice> result = service.getVoices(); Assert.assertNotNull(result); Assert.assertFalse(result.isEmpty()); Assert.assertEquals(result, voices); }",
        "test_tgt": "@Test public void testGetVoices() { final Map<String, Object> response = new HashMap<String, Object>(); final List<Voice> voices = new ArrayList<Voice>(); final Voice voice = new Voice(); voice.setUrl(\"http://ibm.watson.com/text-to-speech/voices/en-US_TestMaleVoice\"); voice.setName(\"en-US_TestMaleVoice\"); voice.setGender(\"male\"); voice.setLanguage(\"en-US\"); voice.setDescription(\"TestMale\"); final Voice voice1 = new Voice(); voice1.setUrl(\"http://ibm.watson.com/text-to-speech/voices/en-US_TestFemaleVoice\"); voice1.setName(\"en-US_TestFemaleVoice\"); voice1.setGender(\"female\"); voice1.setLanguage(\"en-US\"); voice1.setDescription(\"TestFemale\"); voices.add(voice); voices.add(voice1); response.put(\"voices\", voices); mockServer.when(request().withPath(GET_VOICES_PATH)).respond( response().withHeaders( new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)).withBody( GsonSingleton.getGsonWithoutPrettyPrinting().toJson(response))); final List<Voice> result = service.getVoices().execute(); Assert.assertNotNull(result); Assert.assertFalse(result.isEmpty()); Assert.assertEquals(result, voices); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "ServiceCall",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Voice",
                "Voice",
                "equal"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getVoices",
                "getVoices",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "",
                "okhttp3",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "v1",
                "v1",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "voices",
                "voices",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build3",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Response",
                "",
                "delete"
            ],
            [
                "response",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "execute",
                "return",
                "replace"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createCall",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "JsonObject",
                "",
                "delete"
            ],
            [
                "jsonObject",
                "",
                "delete"
            ],
            [
                "=",
                ",",
                "replace"
            ],
            [
                "ResponseUtil",
                "ResponseUtil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getJsonObject",
                "getVoiceListConverter",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "listVoiceType",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Voice",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "voices",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "GsonSingleton",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGsonWithoutPrettyPrinting",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "fromJson",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "jsonObject",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "voices",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "listVoiceType",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "voices",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Void> deleteCorpus(String customizationId, String corpusName) { Validator.notNull(customizationId, \"customizationId cannot be null\"); Validator.notNull(corpusName, \"corpusName cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.delete(String.format(PATH_CORPUS, customizationId, corpusName)); return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getVoid()); }",
        "focal_tgt": "public ServiceCall<Void> deleteCorpus(DeleteCorpusOptions deleteCorpusOptions) { Validator.notNull(deleteCorpusOptions, \"deleteCorpusOptions cannot be null\"); RequestBuilder builder = RequestBuilder.delete(String.format(\"/v1/customizations/%s/corpora/%s\", deleteCorpusOptions .customizationId(), deleteCorpusOptions.corpusName())); return createServiceCall(builder.build(), ResponseConverterUtils.getVoid()); }",
        "test_src": "@Test public void testDeleteCorpus() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String corpus = \"cName\"; server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(\"{}\")); service.deleteCorpus(id, corpus).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"DELETE\", request.getMethod()); assertEquals(String.format(PATH_CORPUS, id, corpus), request.getPath()); }",
        "test_tgt": "@Test public void testDeleteCorpus() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String corpus = \"cName\"; server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(\"{}\")); DeleteCorpusOptions deleteOptions = new DeleteCorpusOptions.Builder() .customizationId(id) .corpusName(corpus) .build(); service.deleteCorpus(deleteOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"DELETE\", request.getMethod()); assertEquals(String.format(PATH_CORPUS, id, corpus), request.getPath()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "deleteCorpus",
                "deleteCorpus",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "corpusName",
                "DeleteCorpusOptions",
                "replace"
            ],
            [
                "",
                "deleteCorpusOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "deleteCorpusOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "Validator",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "notNull",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "corpusName",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "corpusName",
                "deleteCorpusOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CORPUS",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "corpora",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "deleteCorpusOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "deleteCorpusOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "corpusName",
                "corpusName",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getVoid",
                "getVoid",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<SpeechModel>> getModels() { Request request = RequestBuilder.get(PATH_MODELS).build(); ResponseConverter<List<SpeechModel>> converter = ResponseConverterUtils.getGenericObject(TYPE_LIST_MODELS, \"models\"); return createServiceCall(request, converter); }",
        "focal_tgt": "public ServiceCall<SpeechModels> listModels() { return listModels(null); }",
        "test_src": "@Test public void testGetModels() throws InterruptedException { final SpeechModel speechModel = new SpeechModel(\"not-a-real-Model\"); speechModel.setRate(8000); final SpeechModel speechModel1 = new SpeechModel(\"not-a-real-Model1\"); speechModel1.setRate(1600); final SpeechModel speechModel2 = new SpeechModel(\"not-a-real-Model2\"); speechModel2.setRate(8000); final List<SpeechModel> speechModels = ImmutableList.of(speechModel, speechModel1, speechModel2); final Map<String, ?> response = ImmutableMap.of(\"models\", speechModels); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(response))); final List<SpeechModel> models = service.getModels().execute(); final RecordedRequest request = server.takeRequest(); assertNotNull(models); assertFalse(models.isEmpty()); assertEquals(models, response.get(\"models\")); assertEquals(PATH_MODELS, request.getPath()); }",
        "test_tgt": "@Test public void testGetModels() throws InterruptedException { final SpeechModel speechModel = new SpeechModel(); speechModel.setName(\"not-a-real-Model\"); speechModel.setRate(8000); final SpeechModel speechModel1 = new SpeechModel(); speechModel.setName(\"not-a-real-Model1\"); speechModel1.setRate(1600); final SpeechModel speechModel2 = new SpeechModel(); speechModel.setName(\"not-a-real-Model2\"); speechModel2.setRate(8000); final List<SpeechModel> speechModels = ImmutableList.of(speechModel, speechModel1, speechModel2); final Map<String, ?> response = ImmutableMap.of(\"models\", speechModels); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(response))); final SpeechModels models = service.listModels().execute(); final RecordedRequest request = server.takeRequest(); assertNotNull(models); assertFalse(models.getModels().isEmpty()); assertEquals(models.getModels(), response.get(\"models\")); assertEquals(PATH_MODELS, request.getPath()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "SpeechModel",
                "SpeechModels",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getModels",
                "listModels",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Request",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "return",
                "replace"
            ],
            [
                "",
                "listModels",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_MODELS",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "ResponseConverter",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "SpeechModel",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "converter",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ResponseConverterUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGenericObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TYPE_LIST_MODELS",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "models",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "createServiceCall",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "request",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "converter",
                "null",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<SpeechResults> recognize(File audio) { return recognize(audio, (RecognizeOptions) null); }",
        "focal_tgt": "public ServiceCall<SpeechRecognitionResults> recognize(RecognizeOptions recognizeOptions) { Validator.notNull(recognizeOptions, \"recognizeOptions cannot be null\"); Validator.isTrue(((recognizeOptions.audio() != null && recognizeOptions.upload() == null) || (recognizeOptions.audio() == null && recognizeOptions.upload() != null)), \"Exactly one of audio or upload must be supplied.\"); RequestBuilder builder = RequestBuilder.post(\"/v1/recognize\"); builder.header(\"Content-Type\", recognizeOptions.contentType()); if (recognizeOptions.transferEncoding() != null) { builder.header(\"Transfer-Encoding\", recognizeOptions.transferEncoding()); } if (recognizeOptions.model() != null) { builder.query(\"model\", recognizeOptions.model()); } if (recognizeOptions.customizationId() != null) { builder.query(\"customization_id\", recognizeOptions.customizationId()); } if (recognizeOptions.acousticCustomizationId() != null) { builder.query(\"acoustic_customization_id\", recognizeOptions.acousticCustomizationId()); } if (recognizeOptions.customizationWeight() != null) { builder.query(\"customization_weight\", recognizeOptions.customizationWeight()); } if (recognizeOptions.version() != null) { builder.query(\"version\", recognizeOptions.version()); } if (recognizeOptions.inactivityTimeout() != null) { builder.query(\"inactivity_timeout\", recognizeOptions.inactivityTimeout()); } if (recognizeOptions.keywords() != null) { builder.query(\"keywords\", RequestUtils.join(recognizeOptions.keywords(), \",\")); } if (recognizeOptions.keywordsThreshold() != null) { builder.query(\"keywords_threshold\", recognizeOptions.keywordsThreshold()); } if (recognizeOptions.maxAlternatives() != null) { builder.query(\"max_alternatives\", recognizeOptions.maxAlternatives()); } if (recognizeOptions.wordAlternativesThreshold() != null) { builder.query(\"word_alternatives_threshold\", recognizeOptions.wordAlternativesThreshold()); } if (recognizeOptions.wordConfidence() != null) { builder.query(\"word_confidence\", recognizeOptions.wordConfidence()); } if (recognizeOptions.timestamps() != null) { builder.query(\"timestamps\", recognizeOptions.timestamps()); } if (recognizeOptions.profanityFilter() != null) { builder.query(\"profanity_filter\", recognizeOptions.profanityFilter()); } if (recognizeOptions.smartFormatting() != null) { builder.query(\"smart_formatting\", recognizeOptions.smartFormatting()); } if (recognizeOptions.speakerLabels() != null) { builder.query(\"speaker_labels\", recognizeOptions.speakerLabels()); } if (recognizeOptions.audio() != null) { builder.body(RequestBody.create(MediaType.parse(recognizeOptions.contentType()), recognizeOptions.audio())); } MultipartBody.Builder multipartBuilder = new MultipartBody.Builder(); multipartBuilder.setType(MultipartBody.FORM); if (recognizeOptions.upload() != null) { RequestBody fileBody = RequestUtils.inputStreamBody(recognizeOptions.upload(), recognizeOptions .contentType()); multipartBuilder.addFormDataPart(\"upload\", recognizeOptions.uploadFilename(), fileBody); if (recognizeOptions.metadata() != null) { multipartBuilder.addFormDataPart(\"metadata\", GsonSingleton.getGson().toJson(recognizeOptions.metadata())); } builder.body(multipartBuilder.build()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(SpeechRecognitionResults.class)); }",
        "test_src": "@Test public void testRecognize() throws URISyntaxException, InterruptedException { final SpeechResults speechResults = new SpeechResults(); speechResults.setResultIndex(0); final Transcript transcript = new Transcript(); transcript.setFinal(true); final SpeechAlternative speechAlternative = new SpeechAlternative(); speechAlternative.setTranscript(\"thunderstorms could produce large hail isolated tornadoes and heavy rain\"); final List<SpeechAlternative> speechAlternatives = ImmutableList.of(speechAlternative); transcript.setAlternatives(speechAlternatives); final List<Transcript> transcripts = ImmutableList.of(transcript); speechResults.setResults(transcripts); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(speechResults))); final SpeechResults result = service.recognize(SAMPLE_WAV).execute(); final RecordedRequest request = server.takeRequest(); assertNotNull(result); assertEquals(result, speechResults); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_RECOGNIZE, request.getPath()); assertEquals(HttpMediaType.AUDIO_WAV, request.getHeader(CONTENT_TYPE)); }",
        "test_tgt": "@Test public void testRecognize() throws URISyntaxException, InterruptedException { final SpeechRecognitionResults speechResults = new SpeechRecognitionResults(); speechResults.setResultIndex(0); final SpeechRecognitionResult transcript = new SpeechRecognitionResult(); transcript.setFinal(true); final SpeechRecognitionAlternative speechAlternative = new SpeechRecognitionAlternative(); speechAlternative.setTranscript(\"thunderstorms could produce large hail isolated tornadoes and heavy rain\"); final List<SpeechRecognitionAlternative> speechAlternatives = ImmutableList.of(speechAlternative); transcript.setAlternatives(speechAlternatives); final List<SpeechRecognitionResult> transcripts = ImmutableList.of(transcript); speechResults.setResults(transcripts); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(speechResults))); RecognizeOptions recognizeOptions = new RecognizeOptions.Builder() .audio(SAMPLE_WAV) .contentType(RecognizeOptions.ContentType.AUDIO_WAV) .build(); final SpeechRecognitionResults result = service.recognize(recognizeOptions).execute(); final RecordedRequest request = server.takeRequest(); assertNotNull(result); assertEquals(result, speechResults); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_RECOGNIZE, request.getPath()); assertEquals(HttpMediaType.AUDIO_WAV, request.getHeader(CONTENT_TYPE)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "SpeechResults",
                "SpeechRecognitionResults",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "recognize",
                "recognize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "RecognizeOptions",
                "replace"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "notNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isTrue",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "audio",
                "audio",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "&",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Exactly",
                "insert"
            ],
            [
                "",
                "one",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "or",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "must",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "supplied",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "post",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "recognize",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "header",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Content",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "transferEncoding",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "header",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Transfer",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Encoding",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "transferEncoding",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "customization_id",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "acousticCustomizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "acoustic_customization_id",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "acousticCustomizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationWeight",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "customization_weight",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationWeight",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inactivityTimeout",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "inactivity_timeout",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inactivityTimeout",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "join",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywordsThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "keywords_threshold",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywordsThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "maxAlternatives",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "max_alternatives",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "maxAlternatives",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordAlternativesThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "word_alternatives_threshold",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordAlternativesThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordConfidence",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "word_confidence",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordConfidence",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "profanityFilter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "profanity_filter",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "profanityFilter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "smartFormatting",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "smart_formatting",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "smartFormatting",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "speakerLabels",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "speaker_labels",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "speakerLabels",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "create",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "MediaType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "parse",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "Builder",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "Builder",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FORM",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "fileBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inputStreamBody",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "uploadFilename",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "fileBody",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "GsonSingleton",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getGson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toJson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "recognize",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "RecognizeOptions",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "createServiceCall",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ResponseConverterUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "SpeechRecognitionResults",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<SpeechResults> recognize(File audio, RecognizeOptions options) { Validator.isTrue((audio != null) && audio.exists(), \"audio file is null or does not exist\"); final double fileSize = audio.length() / Math.pow(1024, 2); Validator.isTrue(fileSize < 100.0, \"The audio file is greater than 100MB.\"); String contentType = MediaTypeUtils.getMediaTypeFromFile(audio); if ((options != null) && (options.contentType() != null)) { contentType = options.contentType(); } Validator.notNull(contentType, \"The audio format cannot be recognized\"); String path = PATH_RECOGNIZE; if ((options != null) && (options.sessionId() != null) && !options.sessionId().isEmpty()) { path = String.format(PATH_SESSION_RECOGNIZE, options.sessionId()); } final RequestBuilder requestBuilder = RequestBuilder.post(path); buildRecognizeRequest(requestBuilder, options); requestBuilder.body(RequestBody.create(MediaType.parse(contentType), audio)); return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getObject(SpeechResults.class)); }",
        "focal_tgt": "public ServiceCall<SpeechRecognitionResults> recognize(RecognizeOptions recognizeOptions) { Validator.notNull(recognizeOptions, \"recognizeOptions cannot be null\"); Validator.isTrue(((recognizeOptions.audio() != null && recognizeOptions.upload() == null) || (recognizeOptions.audio() == null && recognizeOptions.upload() != null)), \"Exactly one of audio or upload must be supplied.\"); RequestBuilder builder = RequestBuilder.post(\"/v1/recognize\"); builder.header(\"Content-Type\", recognizeOptions.contentType()); if (recognizeOptions.transferEncoding() != null) { builder.header(\"Transfer-Encoding\", recognizeOptions.transferEncoding()); } if (recognizeOptions.model() != null) { builder.query(\"model\", recognizeOptions.model()); } if (recognizeOptions.customizationId() != null) { builder.query(\"customization_id\", recognizeOptions.customizationId()); } if (recognizeOptions.acousticCustomizationId() != null) { builder.query(\"acoustic_customization_id\", recognizeOptions.acousticCustomizationId()); } if (recognizeOptions.customizationWeight() != null) { builder.query(\"customization_weight\", recognizeOptions.customizationWeight()); } if (recognizeOptions.version() != null) { builder.query(\"version\", recognizeOptions.version()); } if (recognizeOptions.inactivityTimeout() != null) { builder.query(\"inactivity_timeout\", recognizeOptions.inactivityTimeout()); } if (recognizeOptions.keywords() != null) { builder.query(\"keywords\", RequestUtils.join(recognizeOptions.keywords(), \",\")); } if (recognizeOptions.keywordsThreshold() != null) { builder.query(\"keywords_threshold\", recognizeOptions.keywordsThreshold()); } if (recognizeOptions.maxAlternatives() != null) { builder.query(\"max_alternatives\", recognizeOptions.maxAlternatives()); } if (recognizeOptions.wordAlternativesThreshold() != null) { builder.query(\"word_alternatives_threshold\", recognizeOptions.wordAlternativesThreshold()); } if (recognizeOptions.wordConfidence() != null) { builder.query(\"word_confidence\", recognizeOptions.wordConfidence()); } if (recognizeOptions.timestamps() != null) { builder.query(\"timestamps\", recognizeOptions.timestamps()); } if (recognizeOptions.profanityFilter() != null) { builder.query(\"profanity_filter\", recognizeOptions.profanityFilter()); } if (recognizeOptions.smartFormatting() != null) { builder.query(\"smart_formatting\", recognizeOptions.smartFormatting()); } if (recognizeOptions.speakerLabels() != null) { builder.query(\"speaker_labels\", recognizeOptions.speakerLabels()); } if (recognizeOptions.audio() != null) { builder.body(RequestBody.create(MediaType.parse(recognizeOptions.contentType()), recognizeOptions.audio())); } MultipartBody.Builder multipartBuilder = new MultipartBody.Builder(); multipartBuilder.setType(MultipartBody.FORM); if (recognizeOptions.upload() != null) { RequestBody fileBody = RequestUtils.inputStreamBody(recognizeOptions.upload(), recognizeOptions .contentType()); multipartBuilder.addFormDataPart(\"upload\", recognizeOptions.uploadFilename(), fileBody); if (recognizeOptions.metadata() != null) { multipartBuilder.addFormDataPart(\"metadata\", GsonSingleton.getGson().toJson(recognizeOptions.metadata())); } builder.body(multipartBuilder.build()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(SpeechRecognitionResults.class)); }",
        "test_src": "@Test public void testRecognizeWithCustomization() throws FileNotFoundException, InterruptedException { String id = \"foo\"; String recString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/recognition.json\")); JsonObject recognition = new JsonParser().parse(recString).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(recString)); RecognizeOptions options = new RecognizeOptions.Builder().customizationId(id).build(); SpeechResults result = service.recognize(SAMPLE_WAV, options).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_RECOGNIZE + \"?customization_id=\" + id, request.getPath()); assertEquals(recognition, GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testRecognizeWithCustomization() throws FileNotFoundException, InterruptedException { String id = \"foo\"; String recString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/recognition.json\")); JsonObject recognition = new JsonParser().parse(recString).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(recString)); RecognizeOptions recognizeOptions = new RecognizeOptions.Builder() .audio(SAMPLE_WAV) .contentType(RecognizeOptions.ContentType.AUDIO_WAV) .customizationId(id) .build(); SpeechRecognitionResults result = service.recognize(recognizeOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_RECOGNIZE + \"?customization_id=\" + id, request.getPath()); assertEquals(recognition, GSON.toJsonTree(result)); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "SpeechResults",
                "SpeechRecognitionResults",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "recognize",
                "recognize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "RecognizeOptions",
                "replace"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "notNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "isTrue",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "audio",
                "audio",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "RecognizeOptions",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "Validator",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isTrue",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "|",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "audio",
                "audio",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "exists",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "file",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "or",
                "",
                "delete"
            ],
            [
                "does",
                "",
                "delete"
            ],
            [
                "not",
                "",
                "delete"
            ],
            [
                "exist",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "fileSize",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "/",
                "",
                "delete"
            ],
            [
                "Math",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "pow",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "1024",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "2",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "Validator",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isTrue",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "fileSize",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "100",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "The",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "file",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "greater",
                "",
                "delete"
            ],
            [
                "than",
                "",
                "delete"
            ],
            [
                "100MB",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "contentType",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "MediaTypeUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getMediaTypeFromFile",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "options",
                "recognizeOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Exactly",
                "insert"
            ],
            [
                "",
                "one",
                "insert"
            ],
            [
                "",
                "of",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "or",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "must",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "supplied",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "post",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "recognize",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "header",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Content",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contentType",
                "contentType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                ")",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "transferEncoding",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "header",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Transfer",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Encoding",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "transferEncoding",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "customization_id",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "acousticCustomizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "acoustic_customization_id",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "acousticCustomizationId",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationWeight",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "customization_weight",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "customizationWeight",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "version",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inactivityTimeout",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "inactivity_timeout",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inactivityTimeout",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "join",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywords",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywordsThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "keywords_threshold",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "keywordsThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "maxAlternatives",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "max_alternatives",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "maxAlternatives",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordAlternativesThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "word_alternatives_threshold",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordAlternativesThreshold",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordConfidence",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "word_confidence",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordConfidence",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "timestamps",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "profanityFilter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "profanity_filter",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "profanityFilter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "smartFormatting",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "smart_formatting",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "smartFormatting",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "speakerLabels",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "speaker_labels",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "speakerLabels",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "create",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "MediaType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "parse",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "contentType",
                "contentType",
                "equal"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "options",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "audio",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "Builder",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "Builder",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "setType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "MultipartBody",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "FORM",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "RequestBody",
                "insert"
            ],
            [
                "",
                "fileBody",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "inputStreamBody",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contentType",
                "contentType",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "Validator",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "notNull",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "contentType",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "The",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "cannot",
                "",
                "delete"
            ],
            [
                "be",
                "",
                "delete"
            ],
            [
                "recognized",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "PATH_RECOGNIZE",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "sessionId",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "&",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "sessionId",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "isEmpty",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "format",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "PATH_SESSION_RECOGNIZE",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "sessionId",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                "requestBuilder",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "RequestBuilder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "post",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "buildRecognizeRequest",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "requestBuilder",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "options",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "requestBuilder",
                ")",
                "replace"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "upload",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "uploadFilename",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "fileBody",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "multipartBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "addFormDataPart",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "GsonSingleton",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getGson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toJson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "recognizeOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "metadata",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "body",
                "body",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "RequestBody",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "create",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "MediaType",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "parse",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "contentType",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "audio",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "multipartBuilder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SpeechResults",
                "SpeechRecognitionResults",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<Customization>> getCustomizations(String language) { RequestBuilder requestBuilder = RequestBuilder.get(PATH_CUSTOMIZATIONS); if (language != null) { requestBuilder.query(LANGUAGE, language); } ResponseConverter<List<Customization>> converter = ResponseConverterUtils.getGenericObject(TYPE_LIST_CUSTOMIZATION, \"customizations\"); return createServiceCall(requestBuilder.build(), converter); }",
        "focal_tgt": "public ServiceCall<LanguageModels> listLanguageModels(ListLanguageModelsOptions listLanguageModelsOptions) { RequestBuilder builder = RequestBuilder.get(\"/v1/customizations\"); if (listLanguageModelsOptions != null) { if (listLanguageModelsOptions.language() != null) { builder.query(\"language\", listLanguageModelsOptions.language()); } } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(LanguageModels.class)); }",
        "test_src": "@Test public void testGetCustomizations() throws InterruptedException, FileNotFoundException { String customizationsAsString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/customizations.json\")); JsonObject customizations = new JsonParser().parse(customizationsAsString).getAsJsonObject(); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(customizationsAsString)); List<Customization> result = service.getCustomizations(\"en-us\").execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(PATH_CUSTOMIZATIONS + \"?language=en-us\", request.getPath()); assertEquals(customizations.get(\"customizations\").getAsJsonArray().size(), result.size()); assertEquals(customizations.get(\"customizations\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListLanguageModels() throws InterruptedException, FileNotFoundException { String customizationsAsString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/customizations.json\")); JsonObject customizations = new JsonParser().parse(customizationsAsString).getAsJsonObject(); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(customizationsAsString)); ListLanguageModelsOptions listOptions = new ListLanguageModelsOptions.Builder() .language(\"en-us\") .build(); LanguageModels result = service.listLanguageModels(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(PATH_CUSTOMIZATIONS + \"?language=en-us\", request.getPath()); assertEquals(customizations.get(\"customizations\").getAsJsonArray().size(), result.getCustomizations().size()); assertEquals(customizations.get(\"customizations\"), GSON.toJsonTree(result.getCustomizations())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Customization",
                "LanguageModels",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getCustomizations",
                "listLanguageModels",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "language",
                "ListLanguageModelsOptions",
                "replace"
            ],
            [
                "",
                "listLanguageModelsOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CUSTOMIZATIONS",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "language",
                "listLanguageModelsOptions",
                "replace"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "requestBuilder",
                "if",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listLanguageModelsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "language",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "LANGUAGE",
                "\"",
                "replace"
            ],
            [
                "",
                "language",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listLanguageModelsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "language",
                "language",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "ResponseConverter",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Customization",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "converter",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ResponseConverterUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGenericObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TYPE_LIST_CUSTOMIZATION",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "customizations",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "}",
                "replace"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "converter",
                "ResponseConverterUtils",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "LanguageModels",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Customization> getCustomization(String customizationId) { Validator.notNull(customizationId, \"customizationId cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.get(String.format(PATH_CUSTOMIZATION, customizationId)); return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getObject(Customization.class)); }",
        "focal_tgt": "public ServiceCall<LanguageModel> getLanguageModel(GetLanguageModelOptions getLanguageModelOptions) { Validator.notNull(getLanguageModelOptions, \"getLanguageModelOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s\", getLanguageModelOptions .customizationId())); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(LanguageModel.class)); }",
        "test_src": "@Test public void testGetCustomization() throws InterruptedException, FileNotFoundException { String id = \"foo\"; Customization customization = loadFixture(\"src/test/resources/speech_to_text/customization.json\", Customization.class); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(customization))); Customization result = service.getCustomization(id).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_CUSTOMIZATION, id), request.getPath()); assertEquals(result.toString(), customization.toString()); }",
        "test_tgt": "@Test public void testGetLanguageModel() throws InterruptedException, FileNotFoundException { String id = \"foo\"; LanguageModel model = loadFixture(\"src/test/resources/speech_to_text/customization.json\", LanguageModel.class); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(model))); GetLanguageModelOptions getOptions = new GetLanguageModelOptions.Builder() .customizationId(id) .build(); LanguageModel result = service.getLanguageModel(getOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_CUSTOMIZATION, id), request.getPath()); assertEquals(result.toString(), model.toString()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Customization",
                "LanguageModel",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "getCustomization",
                "getLanguageModel",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "GetLanguageModelOptions",
                "replace"
            ],
            [
                "",
                "getLanguageModelOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "getLanguageModelOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "getLanguageModelOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CUSTOMIZATION",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "getLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getObject",
                "getObject",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Customization",
                "LanguageModel",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Customization> createCustomization(String name, SpeechModel baseModel, String description) { return createCustomization(name, baseModel, description, null); }",
        "focal_tgt": "public ServiceCall<LanguageModel> createLanguageModel(CreateLanguageModelOptions createLanguageModelOptions) { Validator.notNull(createLanguageModelOptions, \"createLanguageModelOptions cannot be null\"); RequestBuilder builder = RequestBuilder.post(\"/v1/customizations\"); builder.header(\"Content-Type\", createLanguageModelOptions.contentType()); if (createLanguageModelOptions.contentType().equalsIgnoreCase( CreateLanguageModelOptions.ContentType.APPLICATION_JSON)) { builder.bodyJson(GsonSingleton.getGson().toJsonTree(createLanguageModelOptions.createLanguageModel()) .getAsJsonObject()); } else { builder.bodyContent(createLanguageModelOptions.body(), createLanguageModelOptions.contentType()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(LanguageModel.class)); }",
        "test_src": "@Test public void testCreateCustomization() throws InterruptedException, FileNotFoundException { Customization customization = loadFixture(\"src/test/resources/speech_to_text/customization.json\", Customization.class); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(customization))); Customization result = service .createCustomization(customization.getName(), SpeechModel.EN_GB_BROADBANDMODEL, customization.getDescription()) .execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_CUSTOMIZATIONS, request.getPath()); assertEquals(result.toString(), customization.toString()); }",
        "test_tgt": "@Test public void testCreateLanguageModel() throws InterruptedException, FileNotFoundException { LanguageModel model = loadFixture(\"src/test/resources/speech_to_text/customization.json\", LanguageModel.class); server.enqueue( new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(GSON.toJson(model))); CreateLanguageModel newModel = new CreateLanguageModel.Builder() .name(model.getName()) .baseModelName(\"en-GB_BroadbandModel\") .description(model.getDescription()) .build(); CreateLanguageModelOptions createOptions = new CreateLanguageModelOptions.Builder() .createLanguageModel(newModel) .build(); LanguageModel result = service.createLanguageModel(createOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"POST\", request.getMethod()); assertEquals(PATH_CUSTOMIZATIONS, request.getPath()); assertEquals(result.toString(), model.toString()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Customization",
                "LanguageModel",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "createCustomization",
                "createLanguageModel",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "name",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "SpeechModel",
                "",
                "delete"
            ],
            [
                "baseModel",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "description",
                "CreateLanguageModelOptions",
                "replace"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "createCustomization",
                "Validator",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "notNull",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "createLanguageModelOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "baseModel",
                "\"",
                "replace"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "post",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "header",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Content",
                "insert"
            ],
            [
                "",
                "-",
                "insert"
            ],
            [
                "",
                "Type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "description",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "null",
                "createLanguageModelOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "equalsIgnoreCase",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "CreateLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ContentType",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "APPLICATION_JSON",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "bodyJson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "GsonSingleton",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getGson",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "toJsonTree",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "createLanguageModel",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getAsJsonObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "bodyContent",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "body",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "createLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "contentType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ResponseConverterUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "LanguageModel",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<Void> deleteCustomization(String customizationId) { Validator.notNull(customizationId, \"customizationId cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.delete(String.format(PATH_CUSTOMIZATION, customizationId)); return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getVoid()); }",
        "focal_tgt": "public ServiceCall<Void> deleteLanguageModel(DeleteLanguageModelOptions deleteLanguageModelOptions) { Validator.notNull(deleteLanguageModelOptions, \"deleteLanguageModelOptions cannot be null\"); RequestBuilder builder = RequestBuilder.delete(String.format(\"/v1/customizations/%s\", deleteLanguageModelOptions .customizationId())); return createServiceCall(builder.build(), ResponseConverterUtils.getVoid()); }",
        "test_src": "@Test public void testDeleteCustomization() throws InterruptedException { String id = \"foo\"; server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(\"{}\")); service.deleteCustomization(id).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"DELETE\", request.getMethod()); assertEquals(String.format(PATH_CUSTOMIZATION, id), request.getPath()); }",
        "test_tgt": "@Test public void testDeleteLanguageModel() throws InterruptedException { String id = \"foo\"; server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(\"{}\")); DeleteLanguageModelOptions deleteOptions = new DeleteLanguageModelOptions.Builder() .customizationId(id) .build(); service.deleteLanguageModel(deleteOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"DELETE\", request.getMethod()); assertEquals(String.format(PATH_CUSTOMIZATION, id), request.getPath()); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Void",
                "Void",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "deleteCustomization",
                "deleteLanguageModel",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "DeleteLanguageModelOptions",
                "replace"
            ],
            [
                "",
                "deleteLanguageModelOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "deleteLanguageModelOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "deleteLanguageModelOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CUSTOMIZATION",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "deleteLanguageModelOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ResponseConverterUtils",
                "ResponseConverterUtils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "getVoid",
                "getVoid",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<Corpus>> getCorpora(String customizationId) { Validator.notNull(customizationId, \"customizationId cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.get(String.format(PATH_CORPORA, customizationId)); ResponseConverter<List<Corpus>> converter = ResponseConverterUtils.getGenericObject(TYPE_CORPORA, \"corpora\"); return createServiceCall(requestBuilder.build(), converter); }",
        "focal_tgt": "public ServiceCall<Corpora> listCorpora(ListCorporaOptions listCorporaOptions) { Validator.notNull(listCorporaOptions, \"listCorporaOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s/corpora\", listCorporaOptions .customizationId())); return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Corpora.class)); }",
        "test_src": "@Test public void testGetCorpora() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String corporaAsString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/corpora.json\")); JsonObject corpora = new JsonParser().parse(corporaAsString).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(corporaAsString)); List<Corpus> result = service.getCorpora(id).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_CORPORA, id), request.getPath()); assertEquals(corpora.get(\"corpora\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListCorpora() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String corporaAsString = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/corpora.json\")); JsonObject corpora = new JsonParser().parse(corporaAsString).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(corporaAsString)); ListCorporaOptions listOptions = new ListCorporaOptions.Builder() .customizationId(id) .build(); Corpora result = service.listCorpora(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_CORPORA, id), request.getPath()); assertEquals(corpora.get(\"corpora\"), GSON.toJsonTree(result.getCorpora())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Corpus",
                "Corpora",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getCorpora",
                "listCorpora",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "ListCorporaOptions",
                "replace"
            ],
            [
                "",
                "listCorporaOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "listCorporaOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "listCorporaOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_CORPORA",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "corpora",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listCorporaOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "ResponseConverter",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Corpus",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "converter",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ResponseConverterUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGenericObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TYPE_CORPORA",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "corpora",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "converter",
                "ResponseConverterUtils",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Corpora",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<WordData>> getWords(String customizationId, Word.Type type) { return getWords(customizationId, type, null); }",
        "focal_tgt": "public ServiceCall<Words> listWords(ListWordsOptions listWordsOptions) { Validator.notNull(listWordsOptions, \"listWordsOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s/words\", listWordsOptions .customizationId())); if (listWordsOptions.wordType() != null) { builder.query(\"word_type\", listWordsOptions.wordType()); } if (listWordsOptions.sort() != null) { builder.query(\"sort\", listWordsOptions.sort()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Words.class)); }",
        "test_src": "@Test public void testGetWords() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); List<WordData> result = service.getWords(id, null).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id), request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListWords() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); ListWordsOptions listOptions = new ListWordsOptions.Builder() .customizationId(id) .build(); Words result = service.listWords(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id), request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result.getWords())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "Words",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getWords",
                "listWords",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ListWordsOptions",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "notNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "words",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                "type",
                "wordType",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "getWords",
                "builder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "\"",
                "replace"
            ],
            [
                "",
                "word_type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "null",
                "listWordsOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ResponseConverterUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Words",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<WordData>> getWords(String customizationId, Word.Type type) { return getWords(customizationId, type, null); }",
        "focal_tgt": "public ServiceCall<Words> listWords(ListWordsOptions listWordsOptions) { Validator.notNull(listWordsOptions, \"listWordsOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s/words\", listWordsOptions .customizationId())); if (listWordsOptions.wordType() != null) { builder.query(\"word_type\", listWordsOptions.wordType()); } if (listWordsOptions.sort() != null) { builder.query(\"sort\", listWordsOptions.sort()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Words.class)); }",
        "test_src": "@Test public void testGetWordsType() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); List<WordData> result = service.getWords(id, Type.ALL).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?word_type=all\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListWordsType() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); ListWordsOptions listOptions = new ListWordsOptions.Builder() .customizationId(id) .wordType(ListWordsOptions.WordType.ALL) .build(); Words result = service.listWords(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?word_type=all\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result.getWords())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "Words",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getWords",
                "listWords",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ListWordsOptions",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Validator",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "notNull",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                "cannot",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "RequestBuilder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "format",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "words",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "(",
                "replace"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                "type",
                "wordType",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "getWords",
                "builder",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "\"",
                "replace"
            ],
            [
                "",
                "word_type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "null",
                "listWordsOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "createServiceCall",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ResponseConverterUtils",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Words",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<WordData>> getWords(String customizationId, Word.Type type, Word.Sort sort) { Validator.notNull(customizationId, \"customizationId cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.get(String.format(PATH_WORDS, customizationId)); if (type != null) { requestBuilder.query(WORD_TYPE, type.toString().toLowerCase()); } if (sort != null) { requestBuilder.query(WORD_SORT, sort.getSort()); } ResponseConverter<List<WordData>> converter = ResponseConverterUtils.getGenericObject(TYPE_WORDS, WORDS); return createServiceCall(requestBuilder.build(), converter); }",
        "focal_tgt": "public ServiceCall<Words> listWords(ListWordsOptions listWordsOptions) { Validator.notNull(listWordsOptions, \"listWordsOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s/words\", listWordsOptions .customizationId())); if (listWordsOptions.wordType() != null) { builder.query(\"word_type\", listWordsOptions.wordType()); } if (listWordsOptions.sort() != null) { builder.query(\"sort\", listWordsOptions.sort()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Words.class)); }",
        "test_src": "@Test public void testGetWordsSort() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); List<WordData> result = service.getWords(id, null, Sort.ALPHA).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?sort=alphabetical\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListWordsSort() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); ListWordsOptions listOptions = new ListWordsOptions.Builder() .customizationId(id) .sort(ListWordsOptions.Sort.ALPHABETICAL) .build(); Words result = service.listWords(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?sort=alphabetical\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result.getWords())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "Words",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getWords",
                "listWords",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                "type",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Sort",
                "",
                "delete"
            ],
            [
                "sort",
                "ListWordsOptions",
                "replace"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "listWordsOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "listWordsOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_WORDS",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "words",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "listWordsOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "WORD_TYPE",
                "\"",
                "replace"
            ],
            [
                "",
                "word_type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "listWordsOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "toLowerCase",
                "wordType",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "WORD_SORT",
                "\"",
                "replace"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getSort",
                "",
                "delete"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "ResponseConverter",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "converter",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ResponseConverterUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGenericObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TYPE_WORDS",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "WORDS",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "converter",
                "ResponseConverterUtils",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Words",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall<List<WordData>> getWords(String customizationId, Word.Type type, Word.Sort sort) { Validator.notNull(customizationId, \"customizationId cannot be null\"); RequestBuilder requestBuilder = RequestBuilder.get(String.format(PATH_WORDS, customizationId)); if (type != null) { requestBuilder.query(WORD_TYPE, type.toString().toLowerCase()); } if (sort != null) { requestBuilder.query(WORD_SORT, sort.getSort()); } ResponseConverter<List<WordData>> converter = ResponseConverterUtils.getGenericObject(TYPE_WORDS, WORDS); return createServiceCall(requestBuilder.build(), converter); }",
        "focal_tgt": "public ServiceCall<Words> listWords(ListWordsOptions listWordsOptions) { Validator.notNull(listWordsOptions, \"listWordsOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/customizations/%s/words\", listWordsOptions .customizationId())); if (listWordsOptions.wordType() != null) { builder.query(\"word_type\", listWordsOptions.wordType()); } if (listWordsOptions.sort() != null) { builder.query(\"sort\", listWordsOptions.sort()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(Words.class)); }",
        "test_src": "@Test public void testGetWordsTypeSort() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); List<WordData> result = service.getWords(id, Type.ALL, Sort.ALPHA).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?word_type=all&sort=alphabetical\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result)); }",
        "test_tgt": "@Test public void testListWordsTypeSort() throws InterruptedException, FileNotFoundException { String id = \"foo\"; String wordsAsStr = getStringFromInputStream(new FileInputStream(\"src/test/resources/speech_to_text/words.json\")); JsonObject words = new JsonParser().parse(wordsAsStr).getAsJsonObject(); server.enqueue(new MockResponse().addHeader(CONTENT_TYPE, HttpMediaType.APPLICATION_JSON).setBody(wordsAsStr)); ListWordsOptions listOptions = new ListWordsOptions.Builder() .customizationId(id) .sort(ListWordsOptions.Sort.ALPHABETICAL) .wordType(ListWordsOptions.WordType.ALL) .build(); Words result = service.listWords(listOptions).execute(); final RecordedRequest request = server.takeRequest(); assertEquals(\"GET\", request.getMethod()); assertEquals(String.format(PATH_WORDS, id) + \"?word_type=all&sort=alphabetical\", request.getPath()); assertEquals(words.get(\"words\"), GSON.toJsonTree(result.getWords())); }",
        "label": 1,
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "ServiceCall",
                "ServiceCall",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "Words",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "getWords",
                "listWords",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "customizationId",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                "type",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Word",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Sort",
                "",
                "delete"
            ],
            [
                "sort",
                "ListWordsOptions",
                "replace"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "notNull",
                "notNull",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "customizationId",
                "listWordsOptions",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "customizationId",
                "listWordsOptions",
                "replace"
            ],
            [
                "cannot",
                "cannot",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "RequestBuilder",
                "RequestBuilder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PATH_WORDS",
                "\"",
                "replace"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "v1",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "customizations",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "%",
                "insert"
            ],
            [
                "",
                "s",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "words",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "customizationId",
                "customizationId",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "listWordsOptions",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "wordType",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "WORD_TYPE",
                "\"",
                "replace"
            ],
            [
                "",
                "word_type",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "listWordsOptions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "toString",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "toLowerCase",
                "wordType",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "WORD_SORT",
                "\"",
                "replace"
            ],
            [
                "",
                "sort",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "listWordsOptions",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getSort",
                "",
                "delete"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "ResponseConverter",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "WordData",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "converter",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ResponseConverterUtils",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "getGenericObject",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "TYPE_WORDS",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "WORDS",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "createServiceCall",
                "createServiceCall",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "requestBuilder",
                "builder",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "converter",
                "ResponseConverterUtils",
                "replace"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "getObject",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Words",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    }
]